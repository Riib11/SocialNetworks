lines(gens,times,col='firebrick1',lwd=2)
plot(gens,times)
lines(gens,times,col='firebrick1',lwd=2)
c(1,2,3)
x = c(1,2,3,4); y = c(1,2,3,4)
x
y
x = c(1,2,3,4)
y = c(1,4,8,16)
plot(x,y)
plot(y,x)
plot(x,y,type="l",col="red")
plot(y,x,type="l",col="green")
lines(x,y)
plot(x,y)
lines(x,y)
lines(x,y,col="red")
require(ggplot2)
data.frame(x,y)
require(ggplot)
x = c(10,11,12,13,14,15,16,17,18,19,20)
x
x = range(1,10)
x
help()
x = c(1..10)
x = c(1...10)
x = c(1:100)
x
x = c(1,10)
x = x * 10
x
x = c(1:10)
x = x * 10
x
y = c(0.99,1.49,1.99,1.99,1.99,2.99,2.99,2.99,2.99,2.99)
plot(x,y)
lines(x,y)
x = c(10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800)
x = c(1:10)
x = x *100
y = c(14.9)
x
x = x * 10
y = c(14.9, 18.62, 22.35, 26.08, 28.9)
x = c(1000,1250,1500,1750,2000)
plot(x,y)
lines(xmy)
lines(x,y)
fit <- lm(y ~ x)
summary(fit)
plot(x,y)
plot(fit)
plot(x,y)
f <- function(x) {}
f <- function(x) { return 1.388 + (33.931*x) }
f <- function(x) { return (1.388 + (33.931*x)) }
f(10)
plot(x,f(x))
plot(x,f(x),y)
plot(x,y)
lines(x,f(x))
plot(y,x)
plot(x,y)
lines(f(x),x)
data = read.table("/Users/Henry/Documents/Drive/Crystal-Work/generic_ga/src/test.csv")
data
data = read.table("/Users/Henry/Documents/Drive/Crystal-Work/generic_ga/src/test.csv", header=false)
data = read.table("/Users/Henry/Documents/Drive/Crystal-Work/generic_ga/src/test.csv", header = FALSE)
data
data[0]
data
plot data
plot(data)
data[1:10]
data[1:10,]
data[1:2,]
data[1:1,]
data = read.table("/Users/Henry/Documents/Drive/Crystal-Work/generic_ga/src/test.csv", header = FALSE)
data = read.table("/Users/Henry/Documents/Drive/Crystal-Work/generic_ga/src/test.csv", header = FALSE, skip=1)
data
plot(data$NO)
data$NO
data[1:10]
data[1:10,1:10]
data[1:10,]
setwd("~/SocialNetworks/systems-papers/python/authors_network")
getwd()
setwd("~/SocialNetworks/systems-papers/python/authors_network/data")
correlations = read.csv("correlations_vA.csv")
cor(correlations)
cor(correlations[2:length(correlations)])
cor(correlations[2:length(correlations)], na.action = na.omitted)
cor(correlations[2:length(correlations)])
cor(correlations[2:length(correlations)], na.rm)
cor(correlations[2:length(correlations)], na.rm=True)
cor(correlations[2:length(correlations)], na.rm=True)
cor(correlations[2:length(correlations)],)
cor(correlations[2:length(correlations)])
clear()
tbl = read.csv(header=True, text="id, weight\n1 100")
tbl = read.csv(header=TRUE, text="id, weight\n1 100")
tbl
tbl$id
tbl$x <- c(20)
tbl
tbl$weight <- c(1)
tbl
tbl
tbl$id
c(tbl$id)
if (1 == 1) {}
if (1 == 1) { print("hello") }
if (1 == 0) { print("hello") } else { print("no")}
tbl
c(1..20)
range(1,10)
range(1,10,1)
help(range)
help(seq)
seq(1,10)
tbl
tbl = c()
tbl
help(table)
help(as.table)
as.table(c(1,2,3))
as.table(c(1,2,3),c(3,4,5))
as.frame.table(c(1,2,3,4),2)
as.data.frame.table(c(1,2,3,4),2)
as.data.frame.table(c(1,2,3,4))
as.data.frame.table(c(1,2,3,4)c)
c(c(1,2), c(3,4))
as.table(c(c(1,2), c(3,4)))
x <- as.table()
x <- as.table(c())
x <- as.table(c()1)
x <- as.table(c(1))
x
x$A
x$1
x <- NULL
x$1 = c(1,2)
x$ = c(1,2)
x$A = c(1,2)
x$B = c(2,3)
x
as.table(x)
read.table("1 2")
read.table(text="1 2")
t <- read.table(text="1 2")
t = 1
t
t = read.table(text="1 2")
t
t$V1
t$V2
t = read.table(text="1 2\n3 4")
t
cor(t)
pairs(t)
paits(t, labels=c("A","B"))
pairs(t, labels=c("A","B"))
pairs(t, labels=c(as.string("A"),"B"))
str("A")
pairs(t, labels=c(string("A"),"B"))
pairs(t, labels=c(str("A"),"B"))
pairs(t, labels=c(1,"B"))
paste(1,"A")
help(mapply)
function f() { return 1 }
help(function)
sum.is.na
sum(is.na(c(1,NA)))
sum(is.na(c(1,NA,NA)))
for (i = 1)
for (i == 1; i < 5; i = i + 1) { print(j) }
for (i == 1, i < 5, i = i + 1) { print(i) }
for (i == 1), i < 5, i = i + 1) { print(i) }
i = 1
while (i < 5) { print(i); i = i + 1}
t
t$V1
labels(t)
labels(t)[0]
labels(t)[1]
typeof(labels(t)[1])
typeof(c(1))
typeof(c(1,2))
typeof(c(1,2,4,5,))
typeof(c(1,2,4,5))
typeof(labels(t)[1][1])
typeof(labels(t)[1][1][1])
typeof(labels(t)[1][1][1][1])
typeof(labels(t)[1][1][1][1][0])
labels(t)
labels(t)[0]
labels(t)[1]
labels(t)[1][1]
labels(t)[1][1][2]
labels(t)[1][1][1]
names(t)
names(t)[1]
names(t)[1][2]
names(t)[2]
return(1)
function (x) { return x }
function (x) { return(x) }
function f (x) { return(x) }
function f(x) { return(x) }
f = function (x) { return(x) }
f(1)
n1 = names(t)[1]
n1
t$n1
t$V1
t$(n1)
t
t[n1]
t[V2]
t["V2"]
f
map(f, c(1,2,3))
mapapply(f, c(1,2,3))
mapply(f, c(1,2,3))
f = function(x) { return(x*x) }
mapply(f, c(1,2,3))
length(t$V1)
t[V1]
v["V1"]
t[]"V1"]
t["V1"]
length(t["V1"])
length(t["V1"][1])
t["V1"]
as.array(t["V1"])
c(t["V1"])
length(c(t["V1"]))
c(t["V1"])
type(c(t["V1"]))
typeof(c(t["V1"]))
c(t["V1"])[1]
c(t["V1"])[2]
c(t["V1"])[1]
c(t["V1"])[1][1]
t
t[[1]]
length(t[[1]])
help(stats::na.pass)
help(na.pass)
