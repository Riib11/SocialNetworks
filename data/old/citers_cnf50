{"entities":["Decibel","Imperative programming","Interference (communication)","Non-volatile memory","Scheduling (computing)","Shared nothing architecture","Volatile memory"],"journalVolume":"","journalPages":"17-33","pmid":"","year":2017,"outCitations":["5c73d35fcadede98d7c1ded769af7abdb94d9cb9","cd71834408272f5dfcf32d276d03be18914bf376","60ddf74dd5b443c3bfb59fe876b42f9d6112c4fb","1cc9ebeab21d668c8fb197a2498380e95c6a65fb","9e152eac71577b7ee9175d3e68fd76963170eebe","2031a6decaf94ce41ac09fc355022429eeeb0e49","2c11d5117a8b97ef2ef268e5fb38e8c5ffb1c58c","458902c0a4b5e9855c8a4be9eeb4cb4ce534b068","8090a0702dae2a90bb614e6ef8de4f049e596233","136eefe33796c388a15d25ca03cb8d5077d14f37","38a9120f780602521af9744e31d80ef5cd9593a7","0712c325155f8af65602a08cc448d1e453466a33","07367703f587dbc3313cc613289c4330cebe5c8c","132f00de21cee656d00ad6779f1926070ad59544","0abe5211e209b272890ba6820a33b72e938b0b3b","0da73832dee2c9b3d4c0d039d8e714e6ff098e40","1bc029b715f29e95063f27dc36396093394a1e19","29a1148d75878671dc3663bf480e33d7bd91597d","742c641506ac9efc3281af2effb31f2fb31b2dd4","631f3c144a27503f9135b412305422a4f3ce0acb","0b2c84be9e9f97f2464ad9d09be5f4c37edda47e","225603198cc415d363db8a8a2bd30b0df3c963b1","03543f75c4fe0c49f81af789a1c7293ff0e4e107","09bd66ed15985caa6b0bf1d54a36b508141ed128","daf0cd0076b388712ea12ec4105572997fc50cdf","2ab305079385594badd4233ebb9512d52ecaccfb","048a09d7c8713dc2533c1e31ac3f224868293461","30419d0e0fcaebbfbcdb88f702bd01306d14fb15","3f4297d2e5ae196f30f9a18dcd8400dfca5d2e47","0f6a32792d0882db35fe9391445d4322232b619e","bf1ffbdffc4ba38ce992b51d6c7016dd8b826291","108ffa868b6dc5e8b4987342c90c79c8ccf841c2","35bb4201683cf3525bfab90c35ca1a6ab72f3e60","5cde06240acc288c986a10ee39f17ea28c9ef05c","75032b6df2f3988d2cb6988c73cbc01c7b9e80cb","05a1bad1ef2341339e18d636d78594226d4ee8e6","65a2cb8a02795015b398856327bdccc36214cdc6","be4c6170ee4fd72ff5c8fc92e3d6ba5cba774cf6","d58cc242fd70227cff98376a914e0b42b1b79db8","7ae26da9b7666812857883536870c315538f7f10","3fc93257ac94aa8d6505c19077058e68622345b6","26a88fcaf621270af5f5786fdb2df376a2bc00aa","1d2871c56d07a35e6709d535fbbb2df6b434962a","9f99c550f37308f2d5763574733283ff0d11bdc4","0e6b0665e0fc3c0c152885869f6c0d339aba06a1","def29d202e537d026b8d3ed91655b540ef86cceb","05a1357946de5eca42a477b7b268db4944219a2e","61977858b3eea4f5a6d81393301e7298ade7a2d8","46a38fb1e26c9957111d154c6fc2c39101ff0ba1","2c84daae142c5b0f4ca6a6772ca7e8cac7d7afca","118da4d571ee02b4f31b5c4c078857472e77ba1e","765e6f4feeb1f7d59d2b3c011e2e38814a958afa","13b26d008210fffeb8a77c9e90f1ff837523c536","5909192b374eac0cda4df7c986ebc997cdcd6002","7129b305ce45f83127e928e8510da9fae0783905"],"s2Url":"https://semanticscholar.org/paper/226ca798b529c13605a2aa7fe75d58f4188f850a","s2PdfUrl":"http://pdfs.semanticscholar.org/e96b/6c23d6ebe5ebb1a4b3b42fd9b047cd6e04fe.pdf","id":"226ca798b529c13605a2aa7fe75d58f4188f850a","authors":[{"name":"Mihir Nanavati","ids":["2649174"]},{"name":"Jake Wires","ids":["3048886"]},{"name":"Andrew Warfield","ids":["1709411"]}],"journalName":"","paperAbstract":"The performance characteristics of modern non-volatile storage devices have led to storage becoming a shared, rack-scale resource. System designers have an imperative to rethink existing storage abstractions in light of this development. This paper proposes a lightweight storage abstraction that encapsulates full-system hardware resources and focuses only on isolating and sharing storage devices across multiple, remote tenants. In support of this, it prototypes a shared-nothing runtime capable of managing hardware and scheduling this abstraction in a manner that avoids performance interference and preserves the performance of the storage devices for tenants.","inCitations":["65fef0cd15b565055f21cf8c489cae39dd569220","1d08d231ec66645ec56d2210c1a7c6b44c6ff041","c3f127570fd189054641dc0036b737c37863b2ea"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-nanavati.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_nanavati.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/nanavati","http://www.cs.ubc.ca/~mihirn/papers/decibel-nsdi.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-nanavati.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_nanavati.pdf"],"title":"Decibel: Isolation and Sharing in Disaggregated Rack-Scale Storage","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["AES instruction set","Cryptographic primitive","Cryptography","E-services","End-to-end principle","Fixed-satellite service","Information privacy","Information retrieval","Information sensitivity","Map","Max","Privacy","Private information retrieval","Routing","Secret sharing"],"journalVolume":"2016","journalPages":"1148","pmid":"","year":2016,"outCitations":["1cf87af22b3b4dd0ff1144d861e0573121d8de2e","155ca30ef360d66af571eee47c7f60f300e154db","0830a77f1934ad1afdd8d5f8eb2292518d5ef2f4","00562cead3e4d35f03edd286b40581e8781bf339","48b9b7893d90b54845e116364b277af5f071be03","55c8020222a7e36ae27ecab6a058e0090b73d32d","0609c475dd31632b705e9fb9a603060a3ff2c46a","25fe832fcd649f3d1767a9982ec77d51974c7502","f98cfc3c092d69c068054698bcb4c1b6840644c6","e429bbe4e80fb52b53e148f1b00d1d5f9a4969c4","ae5e5085b4e8f4851d9fd76e1d3845da942c3147","70d2a37d5af527dfc345691e2f978f6e46dc4efe","44b99570b83064ac1b300b1081e08cf4e4aa55f3","1e0b693c1c9c69aae413729b58c552ad3cc838ca","fabf3fe226629ef2df454c961eadafd563779e0c","0db28e501c1f3008b17921770c2ba2588e9f1b82","045a49e09ffdc901c9aa9d49de16fff127d64bc2","2e8b9a7a085a8bc18783e76b776c6e780116efd8","426b39e3abf91b5682380f0fc278a1f5b9baa2a9","4d8e2657d6c9032c28ac4878a442e83dd99b672a","31100ccd0867d6d5338612a62b2cde11be75f1b8","265c1ff603d738e2bb879607abab0b203bf141bb","13e6aa5f61267b2814fa9b32f47c17c0fcdef2d5","228c9ef44ed51f4152a5655be54c8d679c54bb01","7f6311c08aec78a82d68bfef074d416c4862226e","547733cc154ed53d72ad65341b248e7b6c576ac1","bf9d7ae544e00f5a07debf464e9aa5e5365c183b","769fb8055fbe0997ef8d9dab6c9abf37489c6575","20b63210954f7c5a70664f301dcd7196856ccfa7","2bb0a1dca77b3f3b09e15303f3b99e9204d0c521","adb4d61cb5c8454671aea8eec6d0480a672be6c5","017aba316f6d8447a4e045d8ddd417456629031e","25518a206a45b3af9fbb68d11aa905480cf8f61d","16e0361afc68b2c71cab43b21abf482da69b33d0","19e6f3ea035d33590a8598be68ac82e6f00ce518","27e9745fc94ccf6039dd1804cbb99760544fc59b","0aabb00066abd05cff1cde72f24053edde6ccd7d","02dad9c51e3a2e2117ffc41d624de4a090271d1f","1e3822536527f98c53b716c26fa05da5bf729f17","0790cd3d852a21b190c0d20593aa9293bc18f745","22a5eeb8608b35e371b7544a54fabeadca8866e3","1d89a12092d6323b9d3b1a5bd4e6790897e2a2be","bb63c68855d42c95623ed9362d0853ea1d4cc858"],"s2Url":"https://semanticscholar.org/paper/24dd5810e14e7c402919299f29b48544fa03d529","s2PdfUrl":"http://pdfs.semanticscholar.org/8035/a152c7a2906db524d381eb2459efbefbd028.pdf","id":"24dd5810e14e7c402919299f29b48544fa03d529","authors":[{"name":"Frank Wang","ids":["1682796"]},{"name":"Catherine Yun","ids":["4225110"]},{"name":"Shafi Goldwasser","ids":["1706681"]},{"name":"Vinod Vaikuntanathan","ids":["1749858"]},{"name":"Matei Zaharia","ids":["1901948"]}],"journalName":"IACR Cryptology ePrint Archive","paperAbstract":"Many online services let users query public datasets such as maps, flight prices, or restaurant reviews. Unfortunately, the queries to these services reveal highly sensitive information that can compromise users’ privacy. This paper presents Splinter, a system that protects users’ queries on public data and scales to realistic applications. A user splits her query into multiple parts and sends each part to a different provider that holds a copy of the data. As long as any one of the providers is honest and does not collude with the others, the providers cannot determine the query. Splinter uses and extends a new cryptographic primitive called Function Secret Sharing (FSS) that makes it up to an order of magnitude more efficient than prior systems based on Private Information Retrieval and garbled circuits. We develop protocols extending FSS to new types of queries, such as MAX and TOPK queries. We also provide an optimized implementation of FSS using AES-NI instructions and multicores. Splinter achieves end-to-end latencies below 1.6 seconds for realistic workloads including a Yelp clone, flight search, and map routing.","inCitations":["3f59e1a955022a3a74dd7b79e7c6faf746549c12","2eaf1165b7f26cd1743e0f01de5b8662a8f4a1a3","41c04b237615243a7fc778c3653851e0e348322f","123c2f1e0d49e417002c8e261a378f127b0029ff","53f18a9a84c41ff532302166f4456856f3711830","99d2ee867ff4d7e8cb3168ef45852bf5274977aa","fa099d45212e0b0e6486b6bd378e6f4fd06c222d","f4ed6e5506b62faa5df8bb1407921b9d04052cdf","60568ad094e3c68e7f3dd696d8c30e99cabd5159","533bb475a9373a233f6fe0881850a200210bc26a"],"pdfUrls":["http://www.usenix.org./system/files/conference/nsdi17/nsdi17-wang-frank.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_wang_frank.pdf","https://frankwang.org/papers/wang-splinter.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_wang_frank.pdf","https://cs.stanford.edu/~matei/papers/2017/nsdi_splinter.pdf","http://eprint.iacr.org/2016/1148","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-wang-frank.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/wang-frank"],"title":"Splinter: Practical Private Queries on Public Data","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Cluster manager","Clustered file system","Computer data storage","Durability (database systems)","Experience","Failure rate","Hard disk drive","Machine learning","MapReduce"],"journalVolume":"","journalPages":"51-66","pmid":"","year":2017,"outCitations":["54017300f8d0b1e2f51a5088dda84df6fc91c1fb","02b1103e592fa6bf0499e27f1519692441fad557","5f3f9223c5c9f896be099bc177929febad508407","be658efd0bd00b9385890dc4159654f71ade648f","224b0f2731b3177e683ae20433a1b19000c326ef","1d07b7d897cfa631aa67f482af9514b1306803c9","1d99b7749a9311d2db24a3d84728e444eff23e4b","f282e51e81705730a514d4ec691268fc11ae8234","88dfee10842bbfd2ebc74980ab64c1cac5753883","1655cde00456867e6f12de9952fe3a78170fe7bb","bae3eda9605700b14237f4d04652ab6759c68eef","01e9ddf1062f9a7d7847bb9bcd2371ce6e0d3e29","2d8450ec56926a34fe1c25180f0b303c5cc67f2d","6c4f2f853848cfec0bfad945ebfdce709742ae44","094ca99cc94e38984823776158da738e5bc3963d","46fa3ec8f2fa7d0683ffaeeb438af76c6627823d","f52fb7ca4bddd1d9479ebe5a8c9b83469c812869","32d211cb69ccc211fb48837b33ae8830244ac3de","590bd345ef4b8f274af3363a52b7d8f518cdc08a","471271dfcd33ceb2553b4bd3b3431983fd6ec888","30a064a35cfabadb7487e8aee200a01bf417a294","0dfea0be65456d1caf66704d145efec685d80f6e","29b82a4cbaab5585c802020eed7f25c9c80ebfc9","28be6c2ed074a7fa63818a1730b04219d8a01c02","2d60d3596490d9999d8433bf41405060779bc11d","061316b7516e20a4d66e7d95b3543eded514ef5d","5ff311923cd8f80057b2cfc15cf7ec3ac0a6fdbc","48534b21548e3692ad7d866387f1dc7f543109e1","88ffcdcd0627253903408214f8a3b4549197340c","88f74334a81e0f25b74c789eaf856f4b1593340d","255736180aaa9adf84839834d99e23b1eec47b2d","402da07a0ac4645e26370ff5ac8ab3540257a8ab","0541d5338adc48276b3b8cd3a141d799e2d40150","a6797456656d072808909a79af517e5ed4bc9ab3"],"s2Url":"https://semanticscholar.org/paper/77c780ed48a64c335966aa9f780f04faa548881d","s2PdfUrl":"http://pdfs.semanticscholar.org/c4d4/91d5160222ce8fa16c06e20fa313dfed90df.pdf","id":"77c780ed48a64c335966aa9f780f04faa548881d","authors":[{"name":"Ignacio Cano","ids":["35105064"]},{"name":"Srinivas Aiyar","ids":["38735026"]},{"name":"Varun Arora","ids":["39409085"]},{"name":"Manosiz Bhattacharyya","ids":["32091152"]},{"name":"Akhilesh Chaganti","ids":["2160171"]},{"name":"Chern Cheah","ids":["20379251"]},{"name":"Brent N. Chun","ids":["2293758"]},{"name":"Karan Gupta","ids":["1859843"]},{"name":"Vinayak Khot","ids":["34874615"]},{"name":"Arvind Krishnamurthy","ids":["1689594"]}],"journalName":"","paperAbstract":"Modern cluster storage systems perform a variety of background tasks to improve the performance, availability, durability, and cost-efficiency of stored data. For example, cleaners compact fragmented data to generate long sequential runs, tiering services automatically migrate data between solid-state and hard disk drives based on usage, recovery mechanisms replicate data to improve availability and durability in the face of failures, cost saving techniques perform data transformations to reduce the storage costs, and so on. In this work, we present Curator, a background MapReduce-style execution framework for cluster management tasks, in the context of a distributed storage system used in enterprise clusters. We describe Curator’s design and implementation, and evaluate its performance using a handful of relevant metrics. We further report experiences and lessons learned from its five-year construction period, as well as thousands of customer deployments. Finally, we propose a machine learning-based model to identify an efficient execution policy for Curator’s management tasks that can adapt to varying workload characteristics.","inCitations":["87cd0d02a934acfd7a24a0c0915b901100fa21ac"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/cano","http://homes.cs.washington.edu/~icano/papers/nsdi-curator-final.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-cano.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-cano.pdf"],"title":"Curator: Self-Managing Storage for Enterprise Clusters","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["ARM architecture","Access control list","Algorithm","Application programming interface","Cloud computing","Compiler","Experience","Load balancing (computing)","Microsoft Azure","Network address translation","Network function virtualization","Platform as a service","Quality of service","Scalability","Software-defined networking","State (computer science)","Tunneling protocol"],"journalVolume":"","journalPages":"315-328","pmid":"","year":2017,"outCitations":["84e0660e922da41223b9723bef60f5350a98d427","058f6752d85a517aae298586fdf117acdd7560ea","5b999d36d5230eca01532b357c7cf338a5e0d641","3dde3fec553b8d24a85d7059a3cc629ab33f7578","089b10645ee63cd9c5bb4ab661141dd813408e15","0c2e79b4e9283beb7c7270df326a85f22e460821","35a5a870cefa0184245cf317381f3dc4092e1781","2077579d62fc090d4ddf45f107ffae0468936165","58ee4e33defda43292381793ed26a403d524fb73","06c08a99344e3319cb4b2806b41b69db06e3e9f8","4890f40f2772c1c18c66ad751d199949f178582f","9dd79fcf6bc01db9c7bec3337db957b0a964e985","6678b17fc8758efea8d32c2d47f9924f8a0cdc6d","00cf4b13a1bd202ccebe1e7bd0587f11e98ec3d6","3d95c58c595130caa94cdc1fcdb0f9b9f12cb805","044ce2a427c65d53f3d8279339b8eb6f020121c7","4370972a5466ece316fed0c75f1a7d47c7f40376"],"s2Url":"https://semanticscholar.org/paper/cca9f7e4d9dcc0368934026f1fe2d6590870fa68","s2PdfUrl":"http://pdfs.semanticscholar.org/fd35/6fba7f825c64271e5d22195bb61a4f0b6b71.pdf","id":"cca9f7e4d9dcc0368934026f1fe2d6590870fa68","authors":[{"name":"Daniel Firestone","ids":["34766892"]}],"journalName":"","paperAbstract":"Many modern scalable cloud networking architectures rely on host networking for implementing VM network policy e.g. tunneling for virtual networks, NAT for load balancing, stateful ACLs, QoS, and more. We present the Virtual Filtering Platform (VFP) a programmable virtual switch that powers Microsoft Azure, a large public cloud, and provides this policy. We define several major goals for a programmable virtual switch based on our operational experiences, including support for multiple independent network controllers, policy based on connections rather than only on packets, efficient caching and classification algorithms for performance, and efficient offload of flow policy to programmable NICs, and demonstrate how VFP achieves these goals. VFP has been deployed on >1M hosts running IaaS and PaaS workloads for over 4 years. We present the design of VFP and its API, its flow language and compiler used for flow processing, performance results, and experiences deploying and using VFP in Azure over several years.","inCitations":["27f5cea69405564206471da0a145785bde17090f","ea5d5ad680f54c81f455a194094cf02c669452f9","0bd2d176f44c86e23af6544d960867db99659ba7","7f640b84dedbb95ec84d86563b3304035c9fc980","a6472fe7fbc978de8597c2f783891aa1eb1f87a5","4d706ee0027880679a5358aef4e8feba58a53718","63efcd0695d3de798e2743739c8b6a32a568fb84","1d1a33579f6baa1c96eb2ff129bc088b8161d0cf","7e9fd8c8973d50efa1c3259d47c4e15b8a98e351"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/firestone","https://www.microsoft.com/en-us/research/wp-content/uploads/2017/03/vfp-nsdi-2017-final.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-firestone.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-firestone.pdf"],"title":"VFP: A Virtual Switch Platform for Host SDN in the Public Cloud","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Bisection bandwidth","Data center","Elasticity (cloud computing)","Experiment","Load balancing (computing)","Presto","Simulation","Telephone exchange","Testbed"],"journalVolume":"","journalPages":"407-420","pmid":"","year":2017,"outCitations":["00ddc85d502aa4bdc45a3b8b9099fad75938b50a","2730c3ec2908d852e73a62f93302e0e8bfe5510e","1eddf92320697dbaae59cb84fafd5af73e0fc865","4973d22ad92fe2999f18cc57dd4a4cad81ba2cfe","35e7b16b618ca6bf63446372afb2a0ca071f2f13","138856ad6b8b4cca92965aacb20961aaa4e34a92","07367703f587dbc3313cc613289c4330cebe5c8c","0f8b04cb89e455ceadf0c88fd5dd9f9a7f338ba9","5c5d03e884d4f0094b217c62267466fa11432c8e","11a4744f7f0883c4232a9f5aaca8b9d29bfaa762","0e65326e8938b2b5f79fb4a207b0a9d811ab095c","bc890ed386ebd2dc3d2b6f123e1d5983d957e3ab","022a0317d5bf2b38847b03f7c9bc3bfa35950199","2e3cc2d55770aac26d3ce0cb6ddd96dbbcfec4cc","14b82ab954a85cb8b336e86cf536c5701ca722e9","058f6752d85a517aae298586fdf117acdd7560ea","663e064469ad91e6bda345d216504b4c868f537b","55c5a2c1f2f6f66646baf64405464357fa7df8a0","0586f39a5280d49e62b49838c229dcb37d105994","58f692e9b03cb973355aab46bb6f867239aeb513","025652412d507a8cf98ecacd8a44d32ce28995e1","9570d6075ecaf7f5dc28e99edfabc64914d44ca5","129567778989fab23b50812b3df30e899e2d6a4e","9a26f0832fa7508f6396cbee7d06db42e026c0c8","00f6f16f4b76e931d3924e56674a74fca8d94df3","8fbeb8f7c39588ed3014eb16850c4547603c906c","42f6218131551632370e5e8f88370d04b220002a","12d3952369fd92db86d4a3fff0a6fa8de3509095","1376bd56c64639af4645625fd9755c83b2bf7cda","baf4368220d59064026fc3241a51a66ec0f6fa02","19ff9dac013d1ebca1ea1c9845325c9ddafdf93a","122229239aeba1eb4f1623adb40f1845c582a520"],"s2Url":"https://semanticscholar.org/paper/c678e962b158153924bbb24c4900b84375be7e57","s2PdfUrl":"http://pdfs.semanticscholar.org/c678/e962b158153924bbb24c4900b84375be7e57.pdf","id":"c678e962b158153924bbb24c4900b84375be7e57","authors":[{"name":"Erico Vanini","ids":["9767962"]},{"name":"Rong Pan","ids":["1710684"]},{"name":"Mohammad Alizadeh","ids":["2587719"]},{"name":"Parvin Taheri","ids":["35171501"]},{"name":"Tom Edsall","ids":["2112077"]}],"journalName":"","paperAbstract":"Datacenter networks require efficient multi-path load balancing to achieve high bisection bandwidth. Despite much progress in recent years towards addressing this challenge, a load balancing design that is both simple to implement and resilient to network asymmetry has remained elusive. In this paper, we show that flowlet switching, an idea first proposed more than a decade ago, is a powerful technique for resilient load balancing with asymmetry. Flowlets have a remarkable elasticity property: their size changes automatically based on traffic conditions on their path. We use this insight to develop LetFlow, a very simple load balancing scheme that is resilient to asymmetry. LetFlow simply picks paths at random for flowlets and lets their elasticity naturally balance the traffic on different paths. Our extensive evaluation with real hardware and packet-level simulations shows that LetFlow is very effective. Despite being much simpler, it performs significantly better than other traffic oblivious schemes like WCMP and Presto in asymmetric scenarios, while achieving average flow completions time within 10-20% of CONGA in testbed experiments and 2× of CONGA in simulated topologies with large asymmetry and heavy traffic load.","inCitations":["caba95723cf0ac58091dbddf1edfd3fc485b0e3e","25a2cfa6c630c96b7e1163b2fdbe7b0f37bd626c","602fe41b74da4d92051f63b5a95831b6ad2b5552","33e28ab30ce23a4abeedeae3f4213fcba80d1947","959cdc393f0d9c5e04dfce997d68cbe410abce68","2c713ea0f3dacc2ce4189891a57c69aec0707c52","9bbd5be2829e49b1fac7f034baf7499cb069db95","293ca58169024b0f40ae3342200737767321f6b1","5b73b0524f4d6660acc0c9a4b50590905ed9fa7d"],"pdfUrls":["https://people.csail.mit.edu/alizadeh/papers/letflow-nsdi17.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/vanini","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-vanini.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-vanini.pdf"],"title":"Let It Flow: Resilient Asymmetric Load Balancing with Flowlet Switching","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Computer cluster","DPDK / dpdk.org","Data store","Docker","Failover","Firewall (computing)","Load balancing (computing)","Multidimensional scaling","Network address","Network address translation","Network function virtualization","OpenFlow","Pipeline (computing)","Software deployment","Stateful firewall","Stateless protocol","Throughput","Transfer function"],"journalVolume":"","journalPages":"97-112","pmid":"","year":2017,"outCitations":["0433bb657317ac22f7c66d71dfd14c8ead607d73","04f6a5dc6c2aac0586f8f1e83b434ea96fffcd66","028378b395dc2a11e8ccc3d994df228340fd9697","336b4f3099b8f629adc20a69aba15257e53539f9","3547ac839d02f6efe3f6f76a8289738a22528442","17650831f1900b849fd1914d02337e1d006aea0c","1901753d2664473a3758a1c4413421611d7f17bc","102090e6e2363e094439a41ef0439dfac5da0126","514a5c15e8cf3f681febecad954a4508d9189c99","07add9c98a979e732cfa215c901adb1975f3f43a","6e4d333d5e53ee2dd71c8483e5aef59bd5f7f596","46a38fb1e26c9957111d154c6fc2c39101ff0ba1","4eb9a7c9984ab9ba2970d6b6342360cb3262a3fd","67b9afba33c809257beb33629db9a0bb02611eb6","08ddde0eaf4925704222135788f79fe293c5894d","4859d7eb90e7a662536cb0ae8272898239cf396b","55e4c1c02a7499cc99082ceaaf13d32af46ce845","8e8e622d5fab4c1d2a5bc7783db84e62cc570f9a","3dde3fec553b8d24a85d7059a3cc629ab33f7578","00dca7217305a31dcf5108eb7ecf862dd4827823","2077579d62fc090d4ddf45f107ffae0468936165","163247e7ed8db43c9529d85c384d8843e22a136b","73966d417bdfe0fd2f1bfd82e7dddf51ccbda961","2c7e254cfea97f0b10320d723aa906f3f5c9bed6","03d0421c30df23b719cfe1dd6b486472aed43f52","16d95a30bf189a0fe37af03eee9cc8af49709cd2","6276fdf6db1c4b23cc21191e2e8f14fb51606b5b","742c641506ac9efc3281af2effb31f2fb31b2dd4","077d6198039dea3f60ef9f3d3ef9f128fd3edf71"],"s2Url":"https://semanticscholar.org/paper/10bfd5aed1410b88c5c1b5212f450a1994fc5afe","s2PdfUrl":"http://pdfs.semanticscholar.org/f380/e932eef3f785b01aa3c16fe85bf64f9aea1c.pdf","id":"10bfd5aed1410b88c5c1b5212f450a1994fc5afe","authors":[{"name":"Murad Kaplan","ids":["30291549"]},{"name":"Azzam Alsudais","ids":["9762395"]},{"name":"Eric Keller","ids":["1750746"]},{"name":"Franck Le","ids":["1678308"]}],"journalName":"","paperAbstract":"In this paper we present Stateless Network Functions, a new architecture for network functions virtualization, where we decouple the existing design of network functions into a stateless processing component along with a data store layer. In breaking the tight coupling, we enable a more elastic and resilient network function infrastructure. Our StatelessNF processing instances are architected around efficient pipelines utilizing DPDK for high performance network I/O, packaged as Docker containers for easy deployment, and a data store interface optimized based on the expected request patterns to efficiently access a RAMCloud-based data store. A network-wide orchestrator monitors the instances for load and failure, manages instances to scale and provide resilience, and leverages an OpenFlow-based network to direct traffic to instances. We implemented three example network functions (network address translator, firewall, and load balancer). Our evaluation shows (i) we are able to reach a throughput of 10Gbit/sec, with an added latency overhead of between 100μs and 500μs, (ii) we are able to have a failover which does not disrupt ongoing traffic, and (iii) when scaling out and scaling in we are able to match the ideal performance.","inCitations":["6cfe9dc89d0fd4778ec9a42af1a39ed99f605211","4fde15a77dd74bb4d1cb287074f1fd1a3fbbc2e0","7a757b03f4b1868d5d8c27c4f6328e69f3d02edc","7e4bc8c54dc01bb8019455a119e3d3666b3162b8","54fe62cc4ceeefa56437ee8562ca37c38fdeb16e","83a31c52bed8d3845201acb7a5b4603212b9e8b6","3253860b8f1398b19db673ec99253d65db862adf","841dd77064cd38a749c550f85ee1336733eee300","a355edbb24d406761407e2728218d2192f2c1fcf","91a9516b55d4bcd0180c80254d327c222f59bdd3","2e7c1a2953e737ea43237c313751d3e5c5f73250"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/kablan","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_kablan_0.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-kablan.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-kablan.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_kablan_0.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_kablan.pdf"],"title":"Stateless Network Functions: Breaking the Tight Coupling of State and Processing","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Approximation","Microsoft Azure","Real-time computing","Scheduling (computing)","Smart city","Streaming media","Video content analysis"],"journalVolume":"","journalPages":"377-392","pmid":"","year":2017,"outCitations":["6b3d607cf34655e5c5b8f0eb77bc63bafc9ce23b","3a043714354fe498752b45e4cf429dbae0fb2558","679cfc41aa5f0174040b5ab23ea92cf04f495a6e","d8057d514036d51051af78476468fe350cb7488a","4b65024cd376067156a5ac967899a7748fa31f6f","477653f4cb3c213d1d4252cfc7a185e7785b635c","0dddc9f39c6083de14e3a405eee27a4cd5463a9c","23ebd0c6297a00659831207f0e353b4fc4a0c3f8","4af5f1cecc3d41fc2cec5e99b918468ed02a7bf8","184014795c3c2bbf23f3959f6d8b1ab8bc03aea8","53d1d70eac1dbd76a0baea4a6d5f181dd56cb972","563debb9959f0e1742bb83d38f03383b611ae56d","a27c3f0a249dc122104b937c5783f83b3585bb53","0ef88610f4382a9c6e5c8020ab6ccf3dde0fb3eb","0707d61295b35d9db46ee368e79c59dd08c7c82c","88a44593454773d887fe9b51b20db66ef5d3956b","2ce63d77eecc35faef85a3b752a314c93a077ac9","198a818721809dcf9b3aebc23c568f8db92918db","bf241e2c30349e81df70053b9cd2d8fd708cd13a","bbc2a698c2fb2b76e256cc51a9d7c37765ab51b6","561b0881fb83c7182bca4aec70bd287ea0f5be28","453fded1ab86ed9d9d90ff3ff83a4faa493d3db2","685f1e1a88f299704591266f2ee9abe29afdd124","38211dc39e41273c0007889202c69f841e02248a","43776b15c034076a36b7143d58af8e04715e41d0","75032b6df2f3988d2cb6988c73cbc01c7b9e80cb","aa936077447217db8970ec799ccfeb09b2dd03f0","3ede9f94ee174dae45f3e95cf3a45df2dbe05307","9d6108ffaf98474b9f5082eacfeaea753d23c54f","b6571efa4483aa00d23bbcd36930c4877548ba38","9f1f065bf08cd90431cc051267a708f56436cd82","722fcc35def20cfcca3ada76c8dd7a585d6de386","1bd012ce49c66ab91d144e15fd9bfa9fac53d78b","fa6d3585158f11d3b8ce16367b9894c80cdb53ac","8af01e6cb7375ff671ed6efd8576253ab6e12d04","20926778c2725c7ed99efb124abba6e73c26c0fd","d445f483a8f2f6a31c75fc00d43b02dbac083f21","ae0eec4ab8f4fc75c776b7b8284f86907cf8654c","c3c262b8e56536d14826926b69af59eaefc29bc2","47f5bba54710b0e1663e9336790cb4609d16077d","4783c303f45d78323e1206c962ce6fcea57e724d","eb861220e6ae74235e00e0ca7c036ed356141590","6067366349bb22b5e04ab4d820eb203cf41ef7e0","163bcebf0de69c18fe6542d6b7058395a30ac037","4b85560ce4467806cd0a838f5eb478ece0e05eef","0ecad2b630fce029c1b7b577ed56e18fbba001ce","2988e34168fa91398fa397baf823af2063893e9c","22899cc07f2b2ae632ac58b2ec58fbe239f3fbd3","00aa614734a26a19b09a0a3bdee2adc77bdac5e4","6a912e2c1f818a047bc620f475b6b6e3b0dbacfe","00a9d4c95eae5a382d36068b60ec4ccf4811fa75","3d7730154a2b0f31e37863a68d89059df3acb416","37e882e696162cbce0d2a4f4f022162a418a58dd","0b05075bd235ce4f0f0e715c486ab9a874f4f3fe","519d2a6b454f3d0f258ae8d9d266df7ef622a955","26f58c28de7469dc6b6846d37953bbbe3f4fc0e9","061356704ec86334dbbc073985375fe13cd39088","411eb6534d39a37ed43443ba1d2e168c73171330","59ab46bfd59cb43876e701389f256b93430e6273","2a7d3b967a356c2a42f729048b0d3511b0005351","0d868efa67bf06b1f784d60769c082fd9a58893e","c25381cb6eb72d16748ab98a126f97826df686a6","1c7220880cc20fe1cb6e0a40134c298134651192","044131dbc2267712d20a5708b30c5db77e2b34dc","48dcef999ef41e839bf66386c0c0a54c13be1fcf","08f13e484e7e51831ec13076d14570ced91a50fb"],"s2Url":"https://semanticscholar.org/paper/3d4d19a68a9ee57f0c4bb5f692b488ac4ce2bb8e","s2PdfUrl":"http://pdfs.semanticscholar.org/4aa4/3a0a70a39efdc37fc7218747a9806fe8eeb6.pdf","id":"3d4d19a68a9ee57f0c4bb5f692b488ac4ce2bb8e","authors":[{"name":"Haoyu Zhang","ids":["3108945"]},{"name":"Ganesh Ananthanarayanan","ids":["2849491"]},{"name":"Peter Bodík","ids":["1775084"]},{"name":"Matthai Philipose","ids":["3041721"]},{"name":"Paramvir Bahl","ids":["2292948"]},{"name":"Michael J. Freedman","ids":["3122063"]}],"journalName":"","paperAbstract":"Video cameras are pervasively deployed for security and smart city scenarios, with millions of them in large cities worldwide. Achieving the potential of these cameras requires efficiently analyzing the live videos in realtime. We describe VideoStorm, a video analytics system that processes thousands of video analytics queries on live video streams over large clusters. Given the high costs of vision processing, resource management is crucial. We consider two key characteristics of video analytics: resource-quality tradeoff with multi-dimensional configurations, and variety in quality and lag goals. VideoStorm’s offline profiler generates query resourcequality profile, while its online scheduler allocates resources to queries to maximize performance on quality and lag, in contrast to the commonly used fair sharing of resources in clusters. Deployment on an Azure cluster of 101 machines shows improvement by as much as 80% in quality of real-world queries and 7× better lag, processing video from operational traffic cameras.","inCitations":["cbbf860f8065a3e1bd72a07d4cbac5f798065ca1","66dd732e588bac4580342da21302c36270d615c5","193342874858249aed4796cee35a8bec1b70e236","94d96a4e255519b75b2d1f8aaa322aba1cb77822","1775944e16cbafc703fd62793fa5e93ca2c9a7a1","5715e1e106dae3a49a40314e3b05c142d38da6d9","36a64cb68a3da37ed9d54f03750e1f1ac6d3d336","0c9bccd940a26e5074165b2ce082db9c4eac0fd8","391a6a423e06b0767e9fc9df4f43c5533c0ab662","081fdeea36d4b56a71e87b5b0de191aa368261c8"],"pdfUrls":["http://www.cs.princeton.edu/~mfreed/docs/videostorm-nsdi17.pdf","http://www.cs.princeton.edu/~haoyuz/publications/videostorm-slides.pdf","http://www.cs.princeton.edu/~haoyuz/publications/videostorm-nsdi17.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/zhang","http://www.cs.cornell.edu/courses/cs6453/2017sp/slides/approxvideo.pdf","https://www.microsoft.com/en-us/research/wp-content/uploads/2017/02/videostorm_nsdi17.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-zhang.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-zhang.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_zhang_haoyu.pdf","https://www.systems.ethz.ch/sites/default/files/hadp2017-benjamin_rothenberger.pdf"],"title":"Live Video Analytics at Scale with Approximation and Delay-Tolerance","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Algorithm","Apu Nahasapeemapetilon","CPU cache","Central processing unit","Computation","Data rate units","Graphics processing unit","Memory bandwidth","PCI Express","Parallel computing","Pipeline (computing)","Program optimization","Software pipelining"],"journalVolume":"","journalPages":"83-96","pmid":"","year":2017,"outCitations":["274b913658674eb107f9edc0714937fd5f1fcbcf","25f855c968af75e4617f25c71aee3cedec1dedaf","73e30965ab41161ef7ecbed00133a931dbc2efba","5ca076b1bd1bca64e5029627111e49ce0e4c4f5a","6debd9d773c7aca19f18f3b4640c45f8ae12b254","7ebb9fad71ce8e08d5284b7644a5452cff6c75b3","b85df0212d624cbcf52108969ba722fe5d24cb2e","6074c1108997e0c1f97dc3c199323a162ffe978d","0c9a56eb4f45d3969943e8cff74593e9c6c5f549","363d109c3f00026f9ef904dd8cc3c935ee463b65","239f4e993a97984c1e0dde4032c5c2f6ab05dd22","d14509b6b012b4856ef9cd55e89065893dda8c95","080aebd2cc1019f17e78496354c37195560b0697","5c36d8bb0815fd4ff5daa8351df4a7e2d1b32934","e32f5699635c0733106e52f5d2e3965268080be6","2900ebddc2dfb1e4bb7d7eac7384d7f4512b2b9a","399e1c9da99634c30350651e9001eec806c4ebd3","8480af6ef75446b1d4046127f723c4d065c64917","0433bb657317ac22f7c66d71dfd14c8ead607d73","3547ac839d02f6efe3f6f76a8289738a22528442","0a59166593f0a2fa260f16fd853299c9f0863fdf","0e6b0665e0fc3c0c152885869f6c0d339aba06a1"],"s2Url":"https://semanticscholar.org/paper/7a3f1da4f346d3f6968f5b38c6cdb0c01ee4c6ca","s2PdfUrl":"http://pdfs.semanticscholar.org/7a3f/1da4f346d3f6968f5b38c6cdb0c01ee4c6ca.pdf","id":"7a3f1da4f346d3f6968f5b38c6cdb0c01ee4c6ca","authors":[{"name":"Younghwan Go","ids":["2222195"]},{"name":"Muhammad Asim Jamshed","ids":["32628418"]},{"name":"YoungGyoun Moon","ids":["2313756"]},{"name":"Changho Hwang","ids":["9767431"]},{"name":"KyoungSoo Park","ids":["1944837"]}],"journalName":"","paperAbstract":"Many research works have recently experimented with GPU to accelerate packet processing in network applications. Most works have shown that GPU brings a significant performance boost when it is compared to the CPUonly approach, thanks to its highly-parallel computation capacity and large memory bandwidth. However, a recent work argues that for many applications, the key enabler for high performance is the inherent feature of GPU that automatically hides memory access latency rather than its parallel computation power. It also claims that CPU can outperform or achieve a similar performance as GPU if its code is re-arranged to run concurrently with memory access, employing optimization techniques such as group prefetching and software pipelining. In this paper, we revisit the claim of the work and see if it can be generalized to a large class of network applications. Our findings with eight popular algorithms widely used in network applications show that (a) there are many compute-bound algorithms that do benefit from the parallel computation capacity of GPU while CPU-based optimizations fail to help, and (b) the relative performance advantage of CPU over GPU in most applications is due to data transfer bottleneck in PCIe communication of discrete GPU rather than lack of capacity of GPU itself. To avoid the PCIe bottleneck, we suggest employing integrated GPU in recent APU platforms as a cost-effective packet processing accelerator. We address a number of practical issues in fully exploiting the capacity of APU and show that network applications based on APU achieve multi-10 Gbps performance for many compute/memory-intensive algorithms.","inCitations":["e7c997bb82031f3fe4125b1fe000aa4215763cad","8fe193cdf4a263139110f7c39db8246e19f22d84","83a31c52bed8d3845201acb7a5b4603212b9e8b6","5a8cd841f59a68c948c7aa05359c7df32dbc8d5c","2e7c1a2953e737ea43237c313751d3e5c5f73250"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-go.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_go.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/go","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_go.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-go.pdf"],"title":"APUNet: Revitalizing GPU as Packet Processing Accelerator","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Amazon Web Services","Bayesian optimization","Best, worst and average case","Big data","Cloud computing","Curiously recurring template pattern","Experiment","Jumpstart Our Business Startups Act"],"journalVolume":"","journalPages":"469-482","pmid":"","year":2017,"outCitations":["0b4b28d8be5cab638d675af26a8b96ebbf469f04","52d81096f46be0e75f85e0b7eeda65640c281630","47b627916586fa7e0ba64f0fcdb80a5037d66dc7","88dfee10842bbfd2ebc74980ab64c1cac5753883","2dcb0ed27b6a35b1dfe97b45604302a1f3705c01","1592fe924114866c1ac559bae33ea789930daa98","191c14ec67c561c6a3e3ce21c0a7e59e3afe490b","23e3c3c2dba3cad503de6834f6fb680d3bfdcfbd","23b8a55785318ce90957a392607e24f620c4fccc","5ba6dcdbf846abb56bf9c8a060d98875ae70dbc8","572dd2d5d75227bb878430c9375b9be92cc7e6e9","9da1d06e9afe37b3692a102022f561e2b6b25eaf","0b95a8628f90a78909447c4cfee2dce7cb92dd52","c43bdddf596e0ca8115201027dc2eb374a78f101","1d27d04e8cef4d32cb4e022c9f493a40a019f59f","2a7d3b967a356c2a42f729048b0d3511b0005351","0d868efa67bf06b1f784d60769c082fd9a58893e","316486bada6023816c785c0d4eb401658737be3f","43af0459ad86b3a7530e43c1916c63c1c656711a","26f58c28de7469dc6b6846d37953bbbe3f4fc0e9","5f41cc7c081b294f684928c35a08626490ec4f8a","daa63f57c3fbe994c4356f8d986a22e696e776d2","417f02dfc599699c94e732f3600d559d8e41fa17","24281c886cd9339fe2fc5881faf5ed72b731a03e","2cdcddb08ae6060e94cba6c9b2b58b87324e686f","2d8450ec56926a34fe1c25180f0b303c5cc67f2d","04e24be4c25539e4b4fa0498c85b3a3e2d026c02","3000e77ed7282d9fb27216f3e862a3769119d89e","208cdf363b4fc8343815393aed9551eed033df18","4c422d3b8df9b140b04d436d704b062c4f304dec","cd5a26b89f0799db1cbc1dff5607cb6815739fe7","9b707fda4ef927f92d9ecb86dea82bd1ede59d49"],"s2Url":"https://semanticscholar.org/paper/274a6c951c4aa82e6ef6b9f63c11f0ef66722c20","s2PdfUrl":"http://pdfs.semanticscholar.org/5242/0c1238997d8eb970f7a9a61813b11b05e2e9.pdf","id":"274a6c951c4aa82e6ef6b9f63c11f0ef66722c20","authors":[{"name":"Omid Alipourfard","ids":["2802655"]},{"name":"Hongqiang Harry Liu","ids":["1925072"]},{"name":"Jianshu Chen","ids":["1720246"]},{"name":"Shivaram Venkataraman","ids":["2697906"]},{"name":"Minlan Yu","ids":["1914822"]},{"name":"Ming Zhang","ids":["1720939"]}],"journalName":"","paperAbstract":"Picking the right cloud configuration for recurring big data analytics jobs running in clouds is hard, because there can be tens of possible VM instance types and even more cluster sizes to pick from. Choosing poorly can significantly degrade performance and increase the cost to run a job by 2-3x on average, and as much as 12x in the worst-case. However, it is challenging to automatically identify the best configuration for a broad spectrum of applications and cloud configurations with low search cost. CherryPick is a system that leverages Bayesian Optimization to build performance models for various applications, and the models are just accurate enough to distinguish the best or close-to-the-best configuration from the rest with only a few test runs. Our experiments on five analytic applications in AWS EC2 show that CherryPick has a 45-90% chance to find optimal configurations, otherwise near-optimal, saving up to 75% search cost compared to existing solutions.","inCitations":["748f97611f2c0a543d5a0e4de6360906cd0a80ba","b323515ac22fb05ac740d097482b751141b52b23","147ff168c5512b8bee49f4a1374f6f25298d95bc","1804e67480b9c46b377d0a102e26d3a9a1a9139b","83aaf61e91053745e667427d2132527b8a05ef8a","53cc6bf305539b4bd8829df42996e0eb12512434","8e5cc516f0e6b62af0ef0fdb1069a93113539beb","7325ef2e79191f143361b22ba486032a29643011","301d189e85def6eaddbc7152416df1511b55e82b","284b7631a9961f69eae1e0bac49438aee34edaa0","576f13a5f349ecc60e5e491395e8aa7a9c9f0c05","83c798881b911f7a15e5022ab4d0973fffcd040f","d308092a5da30ef6687b6a26287f1e54ba4c5e10","36a64cb68a3da37ed9d54f03750e1f1ac6d3d336","5655f16d3c46537f951b5686c905f15c2f35991c","537efae13f33ad932034b8ad1db72a83d3691473","7818619eb25c7c1bb470a5b5572fa0371de721bc","162be49582b29ed18775f089810fb8cdc2ed6808","71cf6dd78c50f1e7b647e35e4783f0aea79ce76c","00d3d1554166ab1dd91089111dabac7ca456f5be","20fd19bb5f49fd37832d0d3e2564d7ff0cc072a7"],"pdfUrls":["http://shivaram.org/publications/cherrypick-nsdi17.pdf","http://www.cs.yale.edu/homes/yu-minlan/talk/nsdi17-cherrypick.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_alipourfard.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-alipourfard.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-alipourfard.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_alipourfard.pdf","http://www.cs.yale.edu/homes/yu-minlan/writeup/nsdi17-cherrypick.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/alipourfard"],"title":"CherryPick: Adaptively Unearthing the Best Cloud Configurations for Big Data Analytics","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Best, worst and average case","Failure rate","Multiprotocol Label Switching","Network performance","Network topology","Routing","Time complexity"],"journalVolume":"","journalPages":"347-362","pmid":"","year":2017,"outCitations":["442a21840c5e54856e3f78c61a0ba48125e486b4","2b91ee9218f5a26e655544ad0ff4694fa30692d7","3e8ee62447587d3a875dc2f77a6df4dfda9be2de","7ed8dd92f4a174b630836700cf12d0adebd5c708","58099048c6dd8b6a7dcfac0855deb546e50024b3","159f53ab0a7360ae4595d338111c5cc3a4e7c316","945cf68786a81f2ba5d694c2a620260ac10d7f07","19114b7a2f5243a47e80590cc11a2d8ec5b96308","152d4269babc64a75fe7ba1abe68c517844f6bec","1b11d4b0b04e0eb061029b57e1a1c436193f13b1","6ae27ff737c6379298edf6aa069df1e2565feb7c","766e33d87a1719d877ffdeb9250aa53629a13177","2a78b294405635b93089806246f33204cc332985","6d6030e70859795569baceaba58abb17ec62cca8","2fdfb9098803f9b7d523d9bf67dca8b53cd28cf9","0b78e4ffc95c53549fad9ee5740dd6bcc3c5a07e","16d95a30bf189a0fe37af03eee9cc8af49709cd2","016ca0cee16190907a911d874e98fbc6dfa5a36c","cda625e14bc5d265b9a411400ec4203a97c528e6","4d03b65744ce64166457436b24d6db23d3c3e493","54eb6bc34c46eef4521d8cac273101432d1fdd01","2a628e4a9c5f78bc6dcdf16514353336547846cc","7b26ef4490794a4e98faa47aa3c10484239a5e5e","16ac1193b1f28c7157a7c4a6be12b4b63bb18fbc","0597e39c6b3df734f3dee2be3d8f7773eb5fd2b2","1a6bac41dd71e7ac50581e413125b263c6a53a1d","153d3de36f985349963b0bff1f0e4a9c63d7521f","7bcc53f1baf3358517a602d856192faea9442c91","5996fc1dd83cf4cb70723f168622791178776bca","0dc44c3dbaeec29ed5e9b9dd196ff637b5def17d","a6bdd76880dcdf67512b6450457ec804a029300d","1dd35aa72f87396ac339399fc53aa251bdaf4e83","2b4d720c6cb9bcd7c4fd8e1b615e6184ea43d633","8cba7283df5e44f5e4c60753f0c59a3f0b303b7b","232e9d2ac80f62500075aa687f55ce21da5f1c90","06688b20889484482c1703bec9c34eaa1e09e9ab","3c903855e111dc5a2bbd38e64f4a199f14fc29fd","274946a974bc2bbbfe89c7f6fd3751396f295625","4d6916eca48349f87ec1509207177c1c82e61746","1dc62b09b964b8faeecbc03270f7d7a5f2fee733","2730c3ec2908d852e73a62f93302e0e8bfe5510e","4687fdf3c77ef00700fdf1399f7dd81bfe87ef97"],"s2Url":"https://semanticscholar.org/paper/12418c86dee2ce9b95b0bf46d40fe66c762d0410","s2PdfUrl":"http://pdfs.semanticscholar.org/5ecc/82e93bbe370cda324eb89f1e65d9cc8496dd.pdf","id":"12418c86dee2ce9b95b0bf46d40fe66c762d0410","authors":[{"name":"Yiyang Chang","ids":["2629017"]},{"name":"Sanjay G. Rao","ids":["32782897"]},{"name":"Mohit Tawarmalani","ids":["1749225"]}],"journalName":"","paperAbstract":"A key challenge confronting wide-area network architects is validating that their network designs provide assurable performance in the face of variable traffic demands and failures. Validation is hard because of the exponential, and possibly non-enumerable, set of scenarios that must be considered. Current theoretical tools provide overly conservative bounds on network performance since to remain tractable, they do not adequately model the flexible routing strategies that networks employ in practice to adapt to failures and changing traffic demands. In this paper, we develop an optimizationtheoretic framework to derive the worst-case network performance across scenarios of interest by modeling flexible routing adaptation strategies. We present an approach to tackling the resulting intractable problems, which can achieve tighter bounds on network performance than current techniques. While our framework is general, we focus on bounding worst-case link utilizations, and case studies involving topology design, and MPLS tunnels, chosen both for their practical importance and to illustrate key aspects of our framework. Evaluations over real network topologies and traffic data show the promise of the approach.","inCitations":["356f393023478396bdfb84409a97dd8aaf9e12f6"],"pdfUrls":["http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_chang.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/chang","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-chang.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-chang.pdf","https://engineering.purdue.edu/~isl/papers/nsdi17-final59.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_chang.pdf"],"title":"Robust Validation of Network Designs under Uncertain Demands and Failures","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Domain Name System Security Extensions"],"journalVolume":"","journalPages":"131-144","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/196df26297e68c9aa03cb771d7008ce71ef43b19","s2PdfUrl":"","id":"196df26297e68c9aa03cb771d7008ce71ef43b19","authors":[{"name":"Haya Shulman","ids":["1686383"]},{"name":"Michael Waidner","ids":["1803045"]}],"journalName":"","paperAbstract":"","inCitations":["1f10d74e409c46b50735729b6cd0c3b621bb62d5","9c66d83a5700e0a6b0bdc1f48d8db5774ea6f6ac"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/shulman"],"title":"One Key to Sign Them All Considered Vulnerable: Evaluation of DNSSEC in the Internet","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Aggregate data","Computation","Cryptography","Information privacy","Interactivity","Least squares","Least-squares function approximation","Plaintext","Server (computing)"],"journalVolume":"","journalPages":"259-282","pmid":"","year":2017,"outCitations":["32ad30a791a7b1bd7ee7e84e9cd7fdfa477b2337","04948723dec0e6724777ee56f0d10168cce44921","c549f66aca1f25f44be71cbfc40481fc06adb106","078f2d64bae80c49cc65aedc40fd7f45f127d64a","3945bcc35b2b82c593984503f9ba4c32562e57dd","34947a0301ecedfe16df9abd5c4ee75f318df7ff","27c53991fa216fcde5af8ff36fc6853efea8e6f8","44ca8016d618a915fc6a5f727def2699d2e6b178","1808b64aec21863489f0fe66f250890a3ac2b843","4d8e2657d6c9032c28ac4878a442e83dd99b672a","09af9108cb5c196d5c15a6f3d26e604434203bea","f98cfc3c092d69c068054698bcb4c1b6840644c6","6393288400aadae9687d7082644f4b2e65adfe05","0c017744351094c581cf619bbbda8164fbbdad0a","1ea800c00dc8eb2e37ad2f13c135f4afe231e45c","bac41b59697da3ca5c80ca08f2bbbc97a3576248","2073b5fb43cefe522c20a6b550e25f654077edd3","73fbbf4126098d50de0e40d0ee314ddeb691dd2a","557d8b988bca3d0033189723d11102e04c0c67c0","27e9745fc94ccf6039dd1804cbb99760544fc59b","249d2e15cfcd531e3f91d561877d5b23d31ec2e8","6aa234f9c33ee957d6f34dfe85f2efcdfaa85211","0e9c50180730bfc455003cd6ed883b8020eedbb3","0b7e6c5d49b7681fa7426b86040072e3b36a2223","283ecc8622694c070fa53aee7a1c37dadc603f8d","3f40a5b0bcf4401c3f8efdbb539deec2763ad916","698f4d12530c6953e89338d4dd7531171be19ce2","f6dbdf621b0acc9a131f7f2a4d3efbd4bfb0db58","e50ae4d480d84c7cbdb8edcebf13e57f5a47c8ad","19c3736da5116e0e80a64db35afe421663c4b4a8","21f47e1d9078d12de1bd06341619923e8b9d85bb","22330328669bded692399a15d85fef3373117533","02dad9c51e3a2e2117ffc41d624de4a090271d1f","bcb49a06e4fb7ea831257e146073d84234f4d238","67f3f39ddfe53cc73e0d355cf342f4d091aaee8c","8fff335957604e0790b5b8591c9e335936272fd9","15799e114a32f53f67e0a18edd347aa831745bd5","d94ba52bd05fe12926836c3332e2fd895e78ed30","121fd7d0a401c67a0fdc369c48c2b3a16daaa56a","5313470490703d8d4d3d2710f034890ea78826d6","61a297247f899995789dc6e32bcf3972502374b8","4a29060831fdf21fb61ed6a8bfba062945a3d5e4","4577a392ecc0e0666fb0b705cd5520d0ff3e2f18","f71db4d70d4cc9e931a63dde7a6db8dad10a61a0","3d5c4a2eed55772238f41bf60a51addbeca2b92e","19db199fd25aa604618d13e80cf317f0858d5604","1d9cf87fa6d6175a2c1543afff263113657765f6","15075f37c428827209a2bc8b1595a04d5a21dc8b","32334506f746e83367cecb91a0ab841e287cd958","453664306db9078a9bfb0d0f924ea590beb0f1f1","3310cb2b0f1a473e6f98cdec6eb53ec6a962ac87","d04f7f8eed11e5e58a41e314b00e49d7424d82ec","2c0a4fb8335cd7a84a74abefbb6eaef4b23d1e4a","35516916cd8840566acc05d0226f711bee1b563b","277cefef176e4e0a52d5aa9359b9915eb5528fd3","b913cf330852035f49b4ec5fe2db86c47d8a98fd","33148623fc14ea5735e73dd716d030ab17118299","20d1c524fd1557e76a687ffab57f96364beb6fe7","21fe30f93a1ce4e3de2b68ab613573ac8d4eb0e4","6223684e14778e4d7948e994d2169ebf38e0a95f","29543bb7c680dde79f374e73930ca68833e2fb37","04b0c0a177661656eb1e3eb6d0aeebb150fa4cd7","02a356366cc651e69df7c442deff9dcaa3cc8a5f","7d1394fb6b041ed376c99cb230133023a59830e4","60682144f3554174654248c4dd46db46e5b1cd37","24b481a4e55ce6a6473054acb0da1cb96ad83e5d","15c76f461543c44a8b9d8b32b2bbd18c595aea52","1a33c542b064f95eb6fc9b0003e80ff4f1b9289a","517d4d45013e3b040cec89ba1cffbd4a7eb0122d","23864b54c1ee459fc39664ce947c0595794ea0b6","66818f952327b9145d3c7f6ef392240f06767755","5b566b58184e302e1bd364903010fcc55a226fd3","64028c85cd7b7e42f208e29734028572d7735c61","5de068c94fbe9976a7017ce0451c05941a2fe70a","8c43726d7229a6dea25d3f510ca4b8e681117b60","208448ed57cb0ff70866cb3828b06610c3ff25fd","a089defc1eea22b4d3afaeccf031ae110d7af459","d36111fceeff7faba6c6526f6a3ec05dc99d3250","32bd62191f501753b8307bef23758adb50d95627","1aeddb4b15bbb4524b42934594909a34965de1dd","d53c7989acf948fec62d4b1cfcb6c328df048638","8d3be6feedf4302be1d76ab0f53924ae6e777f9f","6ad481b4915f40c7b34256fbdc62a4aeccc3fbaa","2a266546c2609f079529688de7acbe0213f47373","2aa24ddd5c4eea28fc3b751fb5915c01d9337626","7a278ee0578f194700cadc3811cdda4ec751f88a","1055042686c15a71e71c3c7bfedccba267456221","31445e3bd3672ed743c4a089cc0db4f23357f0f2","54d539d7558b6db3a3043fbbe4c71abe3fb629db","81acd0334fcfbff15bc4bb2e688c27dbe95bc16a","147a76ea2d635de2dfd6b6eb1b53defdeb6e8c4a","c6c63ebd731565b7d26f6e42028173f60f5b5883","63c0fce10eba509738e72bd1bd8770e11cd64a26","8ad88f65222febc015b2a74d7c75b835c617ad4a","101bb77cb2c8b2bfcde41973ac3473db325d7e6d","12add45f5a0cc3d9a9a694d3a3802843438208e0","bb63c68855d42c95623ed9362d0853ea1d4cc858","6f11f215003af55d0f5628b24e1a54ee10ecd21a","24a19ef2d8b5c0aef7f22793a268b3c16d339352","1e0c2bbba98c3a6970eb88f3250a328e6893be66","b0e32f83369313c18e3ad38b47a0f0dbe42decac","215e514f25e02d979552992ea3044999cf5fe9dc","2949851ab9827fdd334ecc3b392296df2aacaf92","6b3aea37625702e98e5033e1107403e319b4df01","4aeefad3378d26ca0563e843fdfb5532070a9be3","2173406c4ca5fff0de66e8cbed4cb01ca959cb31","14d19771bc69f1d41f63052e56e134f9ed569c1e","a853e0842d74fa3ff146f45ea7f2ed52dac08d1a"],"s2Url":"https://semanticscholar.org/paper/28a6e6ceb0a92de7a49048d094321af5fab227a0","s2PdfUrl":"http://pdfs.semanticscholar.org/ec08/be24d9031ad420a03d401b53a9b49ec2cd34.pdf","id":"28a6e6ceb0a92de7a49048d094321af5fab227a0","authors":[{"name":"Henry Corrigan-Gibbs","ids":["1715309"]},{"name":"Dan Boneh","ids":["1752788"]}],"journalName":"","paperAbstract":"This paper presents Prio, a privacy-preserving system for the collection of aggregate statistics. Each Prio client holds a private data value (e.g., its current location), and a small set of servers compute statistical functions over the values of all clients (e.g., the most popular location). As long as at least one server is honest, the Prio servers learn nearly nothing about the clients’ private data, except what they can infer from the aggregate statistics that the system computes. To protect functionality in the face of faulty or malicious clients, Prio uses secret-shared non-interactive proofs (SNIPs), a new cryptographic technique that yields a hundred-fold performance improvement over conventional zero-knowledge approaches. Prio extends classic private aggregation techniques to enable the collection of a large class of useful statistics. For example, Prio can perform a least-squares regression on high-dimensional client-provided data without ever seeing the data in the clear.","inCitations":["409503078e6fa6a6f90fa144859cafbf5ef83498","2eaf1165b7f26cd1743e0f01de5b8662a8f4a1a3","232bb5913f12cdcf8419a3e44d06a5d6fffe2c9b","0646a88dfd7e7ce7233041eaad62076ccc55624c","d705cc4656b997f0b9cde0ac5fb5e476625f0e03"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-corrigan-gibbs.pdf","https://crypto.stanford.edu/prio/paper.pdf","https://arxiv.org/pdf/1703.06255v1.pdf","http://arxiv.org/abs/1703.06255","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/corrigan-gibbs","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-corrigan-gibbs.pdf"],"title":"Prio: Private, Robust, and Scalable Computation of Aggregate Statistics","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Ambient network","Experiment","Mi-Case","Network performance","Ray tracing (graphics)","Testbed","Transmitter","Wireless access point"],"journalVolume":"","journalPages":"213-226","pmid":"","year":2017,"outCitations":["8ee2e4cdc964b0dad050112ddd28f20c6827fa5e","27644a68d3a0dd999b040ec47f08560bbce71773","2fca6867babd34da9f04c26d20c4915e4bcfe8cb","4e1e0e545ba6086c5d3c1b26de5e1d1150fe4dd1","831ed2a5f40861866b4ebfe60257b997701e38e2","46614df4d37cac7d647aec72a8bf6279fcdf1bfc","e5edfbdf645a3dbcdaf7d9fcbf350c67fbbadae5","2448ba93c7993a0ab7a6c45a96640d34d298fbd0","85fdc9788c9353a95831939c3954e181e92616fe","e3b29456e4a3fa24217f030b585719f9b6748918","671ec6b2b7997f61192a184632203b525c9bee23","05fe031e53dd8990e7076a91277cb2b74e22b811","048050777395f86219216960e8eadab6ebd476eb","4b8b4e8506ddb07390213c277e832a309224a325","6f07a10dfbd583fdda034c7d606e53148f162f2d","08e113957de42813c5b90b3f9a8a0d1cef667f61","1bc04cbbce54bc027b6147eb0a49189a2691a35c","8317f40c569af2b5bb0aefbb6b07d6a991c1204e","f87aa8b1087f11606cff27da4d60852d6671993a","ce3813f215293e0f8ba79b2f8c88cbe3ec15cfb1","3789f0b79c16e8baa7e4fdf0dc90d0920a611299","cba5934149976560bbbe589756ed371730386ea3","600376bb397c5f3d8d33856b3a6db314b6bda67d","0d8dba43dfe0d165804d9fa0098ed0ada6a9c402","30f67b7275cec21a94be945dfe4beff08c7e004a","47439480b8a13ea60aeef644f2f4aac0b3329a6f","666c44973030409a1b89d933b1461ded5b656269","09c8f664a5e1a0c8ee51dbb87b2d977ede4875a6","06e8e428d6c1e36575657c6c4aeda65e4930ef4b","58392cd42505bf2bc0675610188f6465bc20fd6f","6f7a8ba88be527dcff7496e2f72681b6de10e03c","4c5d4150aedca478e69eda5a20270a485f51d48d","0cd493a73a827f6be241239017b3eaa2d995d2a2","671ef43e50af2bd00cb91b4aad6815c1b95083dc","fc32f882e0ed37ae786ac9a2063418d92f5b52d5","a115ef0244b2add4f528bbc994c2a779a5a9a185","552aedbe4645afa87a5f54805e144e05057696da","02d843e3a008e76cf6a4c23bd01023d264b05686","ce919f7990812f2b73de5a13cb9f1d3b12f31ac9","1943466070019e48204ebbee0914d87ced4ba09a","f3784fa2ab5085b2cfcb19c1ca2f9ae1220a083e","cc1c0876c066b2e11bad73c71c27632872a68ae0","a9bd9cf0e5ffe1bf44ce6742eb5bd1bb85c5c475","0f3230715c53618e531d66befce53159e730d374"],"s2Url":"https://semanticscholar.org/paper/460464955cee59f610c94c9360cad879edb5d880","s2PdfUrl":"http://pdfs.semanticscholar.org/9c8d/1035d701fa169579e3d83f8d6408757663f7.pdf","id":"460464955cee59f610c94c9360cad879edb5d880","authors":[{"name":"Teng Wei","ids":["4043890"]},{"name":"Anfu Zhou","ids":["2786986"]},{"name":"Xinyu Zhang","ids":["1775391"]}],"journalName":"","paperAbstract":"60 GHz millimeter-wave networks represent the next frontier in high-speed wireless access technologies. Due to the use of highly directional and electronically steerable beams, the performance of 60 GHz networks becomes a sensitive function of environment structure and reflectivity, which cannot be handled by existing networking paradigms. In this paper, we propose E-Mi, a framework that harnesses 60 GHz radios’ sensing capabilities to boost network performance. E-Mi uses a single pair of 60 GHz transmitter and receiver to sense the environment. It can resolve all dominant reflection paths between the two nodes, from which it reconstructs a coarse outline of major reflectors in the environment. It then feeds the reflector information into a ray-tracer to predict the channel and network performance of arbitrarily located links. Our experiments on a custom-built 60 GHz testbed verify that E-Mi can accurately sense a given environment, and predict the channel quality of different links with 2.8 dB median error. The prediction is then used to optimize the deployment of 60 GHz access points, with 2.2× to 4.5× capacity gain over empirical approaches.","inCitations":["9905d9e816d7106bed6496eb8a3ad90947342afe","56ee03a70a10d1a0dfcff621ae60aef76fc43ad7","73f615dc7f8162998016e7d990872087040afd96","e785649d3e19bc31d6fa19319e0f8e60928459a4","91ef11f547c6641cdfb634670137cb621b90b22f","9823f8c8c43b64cc6c0c7fd09e9380d908122148","4cbbcb448dfb96f83e05af0ba85dc0e8b47e7fb8"],"pdfUrls":["https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_wei.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-wei-teng.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/wei-teng","http://xyzhang.ucsd.edu/papers/TWei_NSDI17_EMi.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-wei-teng.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_wei.pdf"],"title":"Facilitating Robust 60 GHz Network Deployment By Sensing Ambient Reflectors","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Algorithm","C++","Centralisation","Chipset","Convex hull","Emulator","Experiment","Explicit Congestion Notification","Forwarding plane","Gigabit","High- and low-level","High-level programming language","Multi-core processor","Operating system","Router (computing)","TRAVERSE","Throughput"],"journalVolume":"","journalPages":"438-451","pmid":"","year":2017,"outCitations":["3b988049dd8f62f772281e90196bbd793700c86b","0433bb657317ac22f7c66d71dfd14c8ead607d73","1aafc7066e52f18dee78103822da24a5d85da93c","39300a6bb64f813bd233343b840cb169d8d0527f","4a098868891474ba73ea338e6f56033d1827d216","1eddf92320697dbaae59cb84fafd5af73e0fc865","de17cf40a4db13315c631c597959ae26f691f2fa","14c84514d25336223473290fe7c13ad66a68ef64","0b4e7e7a67778cebc846dfe848302dff57bf613d","3dde3fec553b8d24a85d7059a3cc629ab33f7578","06db78ece7ba41bccab5df77240541e32cffd623","00afe47832bc165dcc3744e33550252d997286c3","0586f39a5280d49e62b49838c229dcb37d105994","2fa434d3310c478f589d8ff9f2ac89e995bf9ab9","00ddc85d502aa4bdc45a3b8b9099fad75938b50a","2077579d62fc090d4ddf45f107ffae0468936165","122229239aeba1eb4f1623adb40f1845c582a520","274b913658674eb107f9edc0714937fd5f1fcbcf","531957a3e9e47f1993e99bab2391cd828393e2d2","764d7de61421968d6b477f0c055d72dcb0893544","62ab98f05621ed6bc174337d1cbf7065350776f3","ad308f3480ad25452398ea39edb5e9ebeb3454f7","22bb3ad75755e046bfd051d41ad7f8c1dbed2e2d","69766466cb19395064bc556af78b19cd2583041d","025652412d507a8cf98ecacd8a44d32ce28995e1","19d97ac569fb27bc5fc71deca04c36a64278c99d","9edfe7c6166d08eaf0b7dd865537e2c1c0ed082a","11040f24714857941c569df70b21c4c8655e074a","4e4f4b3d04f1e1ec2b3a18318d9a42886b10ad25","0e2249e3b0cd1fa9a7e0eee847b58be1cf2ec707","1dea114401f53d188fea7f528ff3068db80e71b6","25f855c968af75e4617f25c71aee3cedec1dedaf","035e903cc8946617cf1b3b69d9093f7052caa71c","4d9adb7a49d468800f9315ef971fdedb4b607b7c","3e7fd5ac3fc1ab19c985c97a0614e4109fa91583","aad6cb88b6802a11b921b0dccc429caec7bf163b","034b937edbff280dfdd7b2e98639655fd3587402","3963ee1d7f31625cdc7db4489e7970c6b4d32324","177d039a925fcf384ba868d65b6449746726b127","61aa09bc1a3eae17480645c90b06a18cbd62d9af","089b10645ee63cd9c5bb4ab661141dd813408e15","0b630b9afeb3d69645845c6cc124cb08d3d85a62","094aca6103f4079521e6a596d099ed37f7d2b498","2b73665da8fa582422997321d832803b6cbe9078","0a59166593f0a2fa260f16fd853299c9f0863fdf","940563def60eb2e29d1cddf20c5576cd93bbd421","114e68ae77738097ba690499dccffe817da1b839"],"s2Url":"https://semanticscholar.org/paper/07d40084599302c18ef4498ac18e90162098b146","s2PdfUrl":"http://pdfs.semanticscholar.org/8613/dda8d2703249fbdb13bde1c4a68ea6a52ada.pdf","id":"07d40084599302c18ef4498ac18e90162098b146","authors":[{"name":"Amy Ousterhout","ids":["1961095"]},{"name":"Jonathan Perry","ids":["21653817"]},{"name":"Hari Balakrishnan","ids":["1712771"]},{"name":"Petr Lapukhov","ids":["9759285"]}],"journalName":"","paperAbstract":"Flexplane enables users to program data plane algorithms and conduct experiments that run real application traffic over them at hardware line rates. Flexplane explores an intermediate point in the design space between past work on software routers and emerging work on programmable hardware chipsets. Like software routers, Flexplane enables users to express resource management schemes in a high-level language (C++), but unlike software routers, Flexplane runs at close to hardware line rates. To achieve these two goals, a centralized emulator faithfully emulates, in real-time on a multi-core machine, the desired data plane algorithms with very succinct representations of the original packets. Real packets traverse the network when notified by the emulator, sharing the same fate and relative delays as their emulated counterparts. Flexplane accurately predicts the behavior of several network schemes such as RED and DCTCP, sustains aggregate throughput of up to 760 Gbits/s on a 10-core machine (⇡ 20⇥ faster than software routers), and enables experiments with real-world operating systems and applications (e.g., Spark) running on diverse network schemes at line rate, including those such as HULL and pFabric that are not available in hardware today.","inCitations":["b74d2874646d36b36eee5c836adf6b29d9173425"],"pdfUrls":["http://www.usenix.org./system/files/conference/nsdi17/nsdi17-ousterhout.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-ousterhout.pdf","http://inat.lcs.mit.edu/papers/Flexplane-NSDI-2017.pdf","http://wind.lcs.mit.edu/papers/Flexplane-NSDI-2017.pdf","http://people.csail.mit.edu/aousterh/papers/flexplane_nsdi17.pdf","http://nms.lcs.mit.edu/papers/Flexplane-NSDI-2017.pdf","http://nms.csail.mit.edu/papers/Flexplane-NSDI-2017.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/ousterhout"],"title":"Flexplane: An Experimentation Platform for Resource Management in Datacenters","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Dragon Ball Z: Budokai Tenkaichi 3","Ground truth","Nonlinear system","Sensor"],"journalVolume":"","journalPages":"499-513","pmid":"","year":2017,"outCitations":["bc77ba8996555dcfa129553b0bafaaabfe962813","6363fb9caaf28cf6b4b403725d0b8962ed45c00a","18316f5001c4b5535c2d39f9de6324acaf8b887d","29e9cd18af650b7e448dea668121a1d98afd3c46","05fe031e53dd8990e7076a91277cb2b74e22b811","736899cb551d20199dd04ea9ee0390a46a1a1007","c04cd3dc971734ebe2ba1aa113e417e8b28b248c","363bef3ed1e7dc709add30c31afe6824403768e7","18f45272373ad42f00a6ce1941743e8a76c50a59","02ee38745baa9b17505a04ea7e4f8b92af798f58","926862f4facebf5f76dd5f75d178c8d13d5f7468","1e6a938c749ba5a90aa2a7d921b814e932993f4f","73254e2eddc19102e42787603b8ab06af650a0d2","f084662d653f0aea52682da144a7af39c180e86e","82dbf4eb8e02ca69beaba66f4fddb1a72ea7404b","16ccb8d307d3f33ebb395b32db23279b409f1228","9d791c9868915cc27fc69849694551e396695123","7c037a591ca9ac0c8fa2ff0079d41518731c84d4","53de0815f11357c707f6f98a0a89b41f8d90f95d","18b94ae2f53920d884f77e9aa8a32c80f3005759","c3543736a6f6372dac4cd54b5b5e4acfe5b0f152","08616ca445012df0e3c982f742d2662bf0f0ce6e","82802e411495bbad77fa2415c6d4633dde180764","7bdb1640e8b76880a538e37c4b393b578f3b0f32","d56397d6b2b255a71642c1e09769e5b83c403cc7","bfb456caf5e71d426bd3e2fd529ee833a6c3b7e7","e5edfbdf645a3dbcdaf7d9fcbf350c67fbbadae5"],"s2Url":"https://semanticscholar.org/paper/60b035d5c39df79d984b385eb2dd68288adea8fd","s2PdfUrl":"http://pdfs.semanticscholar.org/60b0/35d5c39df79d984b385eb2dd68288adea8fd.pdf","id":"60b035d5c39df79d984b385eb2dd68288adea8fd","authors":[{"name":"Mahanth Gowda","ids":["39309263"]},{"name":"Ashutosh Dhekne","ids":["3333096"]},{"name":"Sheng Shen","ids":["2211812"]},{"name":"Romit Roy Choudhury","ids":["1694368"]},{"name":"Lei Yang","ids":["2197142"]},{"name":"Suresh Golwalkar","ids":["9753166"]},{"name":"Alexander Essanian","ids":["9771782"]}],"journalName":"","paperAbstract":"This paper explores the possibility of bringing IoT to sports analytics, particularly to the game of Cricket. We develop solutions to track a ball’s 3D trajectory and spin with inexpensive sensors and radios embedded in the ball. Unique challenges arise rendering existing localization and motion tracking solutions inadequate. Our system, iBall, mitigates these problems by fusing disparate sources of partial information – wireless, inertial sensing, and motion models – into a non-linear error minimization framework. Measured against a mm-level ground truth, the median ball location error is at 8cm while rotational error remains below 12◦ even at the end of the flight. The results do not rely on any calibration or training, hence we expect the core techniques to extend to other sports like baseball, with some domain-specific modifications.","inCitations":["533bb475a9373a233f6fe0881850a200210bc26a","3cb86d6757d03312754ea655ec97b2b856c34c15","4d271267c20c4f6a93b7f22728cb65aba36596b4"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-gowda.pdf","http://synrg.csl.illinois.edu/papers/cricket-nsdi-2017.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/gowda","https://courses.engr.illinois.edu/ece598rr/material/cricket-nsdi-2017.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-gowda.pdf"],"title":"Bringing IoT to Sports Analytics","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Backscatter (email)","Data rate units","Denial-of-service attack","Digital data","E-textiles","FM broadcast band","FM broadcasting","Modulation","Radio broadcasting","Radio frequency","Smartphone"],"journalVolume":"","journalPages":"243-258","pmid":"","year":2017,"outCitations":["2d12b6189a0681b933f9a96b8ab14daac2bcfd73","8012327465664ca6a64ee4d202536ec6c6d024f1","77cbb0b6e8264a244f230f5b0acabc3e1a121df2","0c9b68449b6241478ba38c2af220b393db86e206","667cca11a46b4360dd3c85d374cebcfb00e8d1e6","15a03a6f03a98e0fc1f64020247ea6c8479668a1","64807002e1cdb189e90c23a78e328800502fd495","9d8086fc8d0d56ea16f7a06013a924b30cfbe2a8","02c75551123cae6dfbb0c69de96a199c974bcf89","91bdacc904edb540fa57ea9a4535a1a1d79d855b","df1b9d344a07c5de55486772a43b8ef3fc4f8a56","8ecd08b194529ff6b8e8fc80b5c7a72504a059d3","1ad6819ab62788a132f4d0773717fdacdd55af6a","18336fdfca9e54b4a1a0dc03a0eaa66379778133","27553dbe98c4c7f7d420a3694d4be4507db01790","27d4dc8b28a22edd561b9fd38d481adb4e1504f4","8347fa4ad280baf119580cc680fd85ddb16d7236","498d2ed40427eeb78799fa96ac0f5a58c6648d05","624af79d7d5d66fe8f272a1c84af520618fbc936","21d0f3b4c847e04be0f3735f5f55bffe32e942e3","c70e4a09a00c302f26ce60ac15e4e208af3b0621","8e2821d7185de16bf88a4c90383ef3690ec04248"],"s2Url":"https://semanticscholar.org/paper/2a12a97476635f48467dfb2356e0038eae7b7e44","s2PdfUrl":"http://pdfs.semanticscholar.org/d094/a2ad8996c88cc486b0bd58bcc697bdc54440.pdf","id":"2a12a97476635f48467dfb2356e0038eae7b7e44","authors":[{"name":"Anran Wang","ids":["37449345"]},{"name":"Vikram Iyer","ids":["39552361"]},{"name":"Vamsi Talla","ids":["2950667"]},{"name":"Joshua R. Smith","ids":["34103349"]},{"name":"Shyamnath Gollakota","ids":["1805554"]}],"journalName":"","paperAbstract":"This paper enables connectivity on everyday objects by transforming them into FM radio stations. To do this, we show for the first time that ambient FM radio signals can be used as a signal source for backscatter communication. Our design creates backscatter transmissions that can be decoded on any FM receiver including those in cars and smartphones. This enables us to achieve a previously infeasible capability: backscattering information to cars and smartphones in outdoor environments. Our key innovation is a modulation technique that transforms backscatter, which is a multiplication operation on RF signals, into an addition operation on the audio signals output by FM receivers. This enables us to embed both digital data as well as arbitrary audio into ambient analog FM radio signals. We build prototype hardware of our design and successfully embed audio transmissions over ambient FM signals. Further, we achieve data rates of up to 3.2 kbps and ranges of 5–60 feet, while consuming as little as 11.07 μW of power. To demonstrate the potential of our design, we also fabricate our prototype on a cotton t-shirt by machine sewing patterns of a conductive thread to create a smart fabric that can transmit data to a smartphone. We also embed FM antennas into posters and billboards and show that they can communicate with FM receivers in cars and smartphones.","inCitations":["8edf2ad191c35a53b4ed9b7e66c676cb26826c09","bfdd63cc828f28b071b00c9f442b6d1db26297e7","2b6b6d894d3929a02a78e3e3630a70272d7cf5d7","a39107bd293cf0f5d9674223c4194eed0761745e","625a3af5ee72738153a6d314d2d6869d1870f757","07e62e29133f5ac1dc57da34347c49427282ebff","3217e9e09d892ac55339f319b4eda32dea631214","24b910feb038317a8a6304621cc765d7710b3081","bc25550b5ce2da576db2e6958a5e51c836c2eff1","11c846a6291b8500f9f0c673038c7552cf1058d7","0d023aa7b708a02ebeb7853565c9d0f607932ae7","aa0f89e887eec490f4fa8cceb03764c4c0c179fb","093003a5bf55abb088903800ddf012855bea6c07"],"pdfUrls":["http://arxiv.org/abs/1702.07044","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-wang-anran.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-wang-anran.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/wang-anran","http://homes.cs.washington.edu/~gshyam/Papers/fmbackscatter.pdf"],"title":"FM Backscatter: Enabling Connected Cities and Smart Fabrics","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Approximation","Communications protocol","Computation","Load balancing (computing)","Network congestion","Network switch","Packet switching","Routing"],"journalVolume":"","journalPages":"67-82","pmid":"","year":2017,"outCitations":["194786ec31e5b515b073e1ddded8ea8e9454eb7e","84e0660e922da41223b9723bef60f5350a98d427","1aafc7066e52f18dee78103822da24a5d85da93c","1eddf92320697dbaae59cb84fafd5af73e0fc865","06beeda7be321eb0a294af55b7689d22d77a5b2b","ec2d30a6be8ee4c9927fc59f702c9b5ff4206de9","00afe47832bc165dcc3744e33550252d997286c3","7a278ee0578f194700cadc3811cdda4ec751f88a","1447be3d899115a834874e585256360911036a4d","094aca6103f4079521e6a596d099ed37f7d2b498","3b988049dd8f62f772281e90196bbd793700c86b","363d109c3f00026f9ef904dd8cc3c935ee463b65","11040f24714857941c569df70b21c4c8655e074a","0847dfb07af6685f96b885a93c2cd4dfb4c3d1a9","b3493a8ec43df1861c5d7037ce57bcff7d343dfc","4b69324981ac45543fd60bd2e2cf487a76ed57ff","12d3952369fd92db86d4a3fff0a6fa8de3509095","034b937edbff280dfdd7b2e98639655fd3587402","235da9c0f828b60300f7e5cfa2ca6aaa116dd14c","1d1af146f23af1b1bb39b1f750c6e10b35f62b97","544b0ba4ae011fe26c3f207a7c6f9d6de04468ae","238dd4c308c1ee6ef3809fdf15fdc87be74bdbc8","14c84514d25336223473290fe7c13ad66a68ef64","5b999d36d5230eca01532b357c7cf338a5e0d641","2e4ab1140b454fc6dacf4d23d3663aa34c741577","025652412d507a8cf98ecacd8a44d32ce28995e1","2986f9db238c57b638d54248c4ed1fcb5e4f459f","61aa09bc1a3eae17480645c90b06a18cbd62d9af"],"s2Url":"https://semanticscholar.org/paper/0c2670b22448bfc1d1d537619d9041b6db7a45cb","s2PdfUrl":"http://pdfs.semanticscholar.org/eb4a/6bd071b9a43d3aae85f215896d77e80b8bb9.pdf","id":"0c2670b22448bfc1d1d537619d9041b6db7a45cb","authors":[{"name":"Naveen Kr. Sharma","ids":["35640685"]},{"name":"Antoine Kaufmann","ids":["6164629"]},{"name":"Thomas E. Anderson","ids":["1748580"]},{"name":"Arvind Krishnamurthy","ids":["1689594"]},{"name":"Jacob Nelson","ids":["2240839"]},{"name":"Simon Peter","ids":["2126015"]}],"journalName":"","paperAbstract":"Recent hardware switch architectures make it feasible to perform flexible packet processing inside the network. This allows operators to configure switches to parse and process custom packet headers using flexible match+action tables in order to exercise control over how packets are processed and routed. However, flexible switches have limited state, support limited types of operations, and limit per-packet computation in order to be able to operate at line rate. Our work addresses these limitations by providing a set of general building blocks that mask these limitations using approximation techniques and thereby enabling the implementation of realistic network protocols. In particular, we use these building blocks to tackle the network resource allocation problem within datacenters and realize approximate variants of congestion control and load balancing protocols, such as XCP, RCP, and CONGA, that require explicit support from the network. Our evaluations show that these approximations are accurate and that they do not exceed the hardware resource limits associated with these flexible switches. We demonstrate their feasibility by implementing RCP with the production Cavium CNX880xx switch. This implementation provides significantly faster and lowervariance flow completion times compared with TCP.","inCitations":["39010bdc7ed8d67cc5f1b7868a74885f87d1bcfe","b5e0b49ae23980a58eb1aec555bb1a1cfba64ca3","571a253f7c5ed3517657ce8a49c25f0ebccc3d79","a0081a90edd415be337fa851ddbf1485bbeea6c6","046b41fae099cf2e5c459da615cb401cc9bd3246","176d9770d290a878a7d5efbfcfe37cb401749375","43f610fcb2becae60483f1e2366c19b953780dfa","0d573d5f27504e51727b8c1f2be2f206e6a9cc18"],"pdfUrls":["https://homes.cs.washington.edu/~antoinek/documents/17nsdi_flexswitch.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-sharma.pdf","http://homes.cs.washington.edu/~arvind/papers/flexswitch.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/sharma","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-sharma.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_sharma.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_sharma.pdf"],"title":"Evaluating the Power of Flexible Packet Processing for Network Resource Allocation","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Cache (computing)","Correctness (computer science)","Datapath","Failure rate","Firewall (computing)","Immutable object","Middlebox","Reachability","Scalability","Verification and validation"],"journalVolume":"","journalPages":"699-718","pmid":"","year":2017,"outCitations":["16d95a30bf189a0fe37af03eee9cc8af49709cd2","27f4001214ce0d449eb05d33626f444526accc7c","186388efa5fc67b940bda85881977b3efd8b879f","016ca0cee16190907a911d874e98fbc6dfa5a36c","119af470b90b725c847c4b1fd25aea9a6c5b2b57","19114b7a2f5243a47e80590cc11a2d8ec5b96308","8d976ffd66e11526d88083b0ed1fba29866252f0","30a7bba8d47d7eca9f7826a721e62032a5c8e77a","260376f12d3df66f105f03b5afd03c5562c5a96f","383bd23079fbe5194f1843d59967d602140d73c1","168d5cbbc2251d1afd71d9c7f29dfa2a5d597b58","4866f9428056529a77889569d24397489b77c502","75aa5650e95026b4ce5e0f6166ed8809ebffbf83","3de4aaba1034065cde1ea3784ea5dfb2504fb43a","1451cbe10acd01d5a7925c90dd22db8359abd23f","0385a0c8b707d70bef33bb308d321b2647da0ca3","28ed63405cc70fbcef04b04fd3e61fd7b23b59bc","08a572c06bdaa78d85a287111832d188e8e07f0b","1c0c851e96fa13fc45e3298f4715f5d5d0a97e41","55e4c1c02a7499cc99082ceaaf13d32af46ce845","1b82b8e7e1d66e2186b083450e665d4ef1babd99","2257a1b615511177da021ee72ddffe8fbb2849cc","24a963758371e511e3749c865b14f697358f025c","07ca726af9c235573654b85e8d478bd7303aa62f","04b319357d6bab89ec9575f4b044d7609aa4296a","4d638f59bf6c9d1150b99743e281932e3b9c1959","507b5fe36714eb6aa8acd96d1eef14212eddb82b","0236458f3f78ec42fbdfe931a13cd200ef97a0c7","86a7d2cf1473e597b196a96d922a457ea686fa21","4534c15b4760cb29a0ce74fcd43297fe83f2f277","91a0b2b741fef4e50357d7eeca52d03457fb4118","9e778ebe9a4b0955b802f7e46323dcffc6174f94","61797d1af87a27a89b5bb5fd4a03de061e5dc0e3"],"s2Url":"https://semanticscholar.org/paper/29eb6849b0eb147673f51d6bc8a501131e4e7c52","s2PdfUrl":"http://pdfs.semanticscholar.org/29eb/6849b0eb147673f51d6bc8a501131e4e7c52.pdf","id":"29eb6849b0eb147673f51d6bc8a501131e4e7c52","authors":[{"name":"Aurojit Panda","ids":["3169583"]},{"name":"Ori Lahav","ids":["1808867"]},{"name":"Katerina J. Argyraki","ids":["1702632"]},{"name":"Shmuel Sagiv","ids":["1702872"]},{"name":"Scott Shenker","ids":["1753148"]}],"journalName":"","paperAbstract":"Recent work has made great progress in verifying the forwarding correctness of networks [19–21, 26]. However, these approaches cannot be used to verify networks containing middleboxes, such as caches and firewalls, whose forwarding behavior depends on previously observed traffic. We explore how to verify reachability properties for networks that include such “mutable datapath” elements. We want our verification results to hold not just for the given network, but also in the presence of failures. The main challenge lies in scaling the approach to handle large and complicated networks, We address by developing and leveraging the concept of slices, which allow network-wide verification to only require analyzing small portions of the network. We show that with slices the time required to verify an invariant on many production networks is independent of the size of the network itself.","inCitations":["4059d74b7c3de3fa0ed5a22f55e5ac3c21f9975b","6e7640c890edf815eb8a22e5f6b6d625a12676cb","a88d74590c07b2bd62176e3e1788e4ad4224cdb7","5a000302035aaacb52a884683d32bffcd43df717","c6b91eaa1a045ec6302fbb01baee2b9be3d97855","304ba54357f0ebd37d35d33fe8b3703c979b514e","841dd77064cd38a749c550f85ee1336733eee300","29f8c9d31e25979f1106ea716627578487e9b62d"],"pdfUrls":["http://arxiv.org/pdf/1607.00991v1.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/panda-mutable-datapaths","https://people.eecs.berkeley.edu/~apanda/assets/papers/vmn.pdf","https://arxiv.org/pdf/1607.00991v1.pdf","http://arxiv.org/abs/1607.00991","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-panda-mutable-datapaths.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-panda-mutable-datapaths.pdf","https://people.eecs.berkeley.edu/~apanda/assets/papers/vmn-nsdi17.pdf"],"title":"Verifying Reachability in Networks with Mutable Datapaths","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["CPU cache","Change detection and notification","Content delivery network","Digital distribution","Digital video","Distributed computing","Hidden Markov model","Hill climbing","Hit (Internet)","Server (computing)"],"journalVolume":"","journalPages":"483-498","pmid":"","year":2017,"outCitations":["23a9e1f8cefc76b71f0cf5e1ccf5a6485c19cadf","01a326535590a1c4c19367cc1b5e6ed827330ab8","0da3e7bf3125534a7fe08c1d630b3cf32259c5fa","301f660f8cb2336829aef07dd534a51e22f22017","fe416dfe577e6d77bd5c9c6af514e665f90af94a","1c7d0f188a8033d8a14ab3ae30662f7e85fa65b6","13a4ac8f6000812c712702c73683ffc1e3e7c577","f220a5165d73c8829d4d852f294c2894ac290162","19c3fcffda8e6e5870b3a533c483bca024501ab5","1d1d26cdf8f923a1114aaf120ae2947170207142","fe20c9537ea0be2f2a79388a53e1f2fb4b7fe771","060d964a36ffa603c4f21f76188b4845835086eb","f8aa33900f552f8112d6186d78bc845d2dfc0007","a20097a100edc22dcf685605dd935f4ae8234ae3","a1edd2178bb0bf2061aab69d5e866f928b6e0292","bde2b660b1fa21da4d483b2ac1ba169f0a57f21b","73ba74bfbdd56c291f8619019350ebfdb8416c5e","532787be1a70aebc1c0b975e31a81c538927f0af","bb5e43dd30a3a60df42652d56781568f5cd0a99d","1d5d0550c1def1293a5a965db6de866156e6e359","4bc9cb4e174ac934cba417400f61df28b07753f2","15a1e04faa63dae8e8cef5d8cb1478ea2655d124","e0508499b4cf5794d5aeaf717e7ad9541e9c2bba","3523903cefcf1f06798e6ea398870fc6bfe23924","13c1a3b9ae98870859e49596102318019174073a","0c577868739d3938aeb8dd9cbb679603026b8ad1","32f6ded4e88667f34fe49a0ee80d9a9093b00547","0b6e205fbbd179291c3ed198db6f403ca74624a1","0ad3358ffc0d5e44311160767cc0fb65ccd25b00","dfbaf25ce830248b52cc504b690086fa88971525","0e2303bc719e965bc09cab0d486bb3553cdd2d21","0fd4a1b1b92a65b70fad60ad6e95ed54e8f6e86a","82248b6188d24e884820161fcc37f6ce4d3fbbbe","26cc13fd4b68aabd7181111dce93b3249ce570c4","4cead48e2eac91560105871b78268e3164eb382b","813007c4ca412b1b3d8eba4aad66e53ce3cd77a8","1354abf8baa8b6d39c65758072ae9d0b07227d5c","0720cfa5330462593b20ea0bbb7d8b5862a6b730","4a58e3066f12bb86d7aef2776e9d8a2a4e4daf3e","0a40663fdcf7c5fb7cfc459693116c41309e7eca","0552f48a63628c52c0f34e61067b77a87bc7379b","0d39a7260dbe21cf6498187824fa0b1de92c1a47","3d5b229981595a5864270d9336e941e0ae374fec","029ef1c1c1646e5650260d99e0b837d4e524d559","1594118f2696b573f08510cf837f3b37db87face","ad74b4fd7c3dfeef100d9497a8a43c201fb05077","95676cb40e90e80cd09d25836da0f69b164f27df","1fc74811ceb2bb88aa852ecaa3484155ce7d210f","0277480cced7d09474dda4dc4f7b9381bd4c895a","235ffbe72353aaa49d38fd973fa67cc2a15310fb","4b4ee1ee9bbfd9527fba0bbd761bd61a59f96a48","1dd353938063795c06ef21d8b0b3ef3b45a2fdc1","e60d043d8eeeefd399131f5ddfc606ef45549d50","61d3de9ef68f4878d1a3ba48e278d067c3834d58","39838d42b98b2c7b65a440cc6a8c50caecdd7855","0e6b0665e0fc3c0c152885869f6c0d339aba06a1","17567c8bcf41cc189b4f8e5f9c8cd666bb4d3da9","e5ff40f9b7f7ea5d047cd27cc889cbeb1790cb53","c5d954d13c1c620d78ebaba9afa120733e90ed09","1ecb0e58cb0e5331ee3e0082673a2a981284397e"],"s2Url":"https://semanticscholar.org/paper/8f49ae0e014262cc5fb60a06e8e2bab0651100d4","s2PdfUrl":"http://pdfs.semanticscholar.org/e7bb/88d0bd83b9b81e93e987787f2366dce5f313.pdf","id":"8f49ae0e014262cc5fb60a06e8e2bab0651100d4","authors":[{"name":"Daniel S. Berger","ids":["1998879"]},{"name":"Ramesh K. Sitaraman","ids":["1719320"]},{"name":"Mor Harchol-Balter","ids":["1738043"]}],"journalName":"","paperAbstract":"Most major content providers use content delivery networks (CDNs) to serve web and video content to their users. A CDN is a large distributed system of servers that caches and delivers content to users. The first-level cache in a CDN server is the memory-resident Hot Object Cache (HOC). A major goal of a CDN is to maximize the object hit ratio (OHR) of its HOCs. But, the small size of the HOC, the huge variance in the requested object sizes, and the diversity of request patterns make this goal challenging. We propose AdaptSize, the first adaptive, size-aware cache admission policy for HOCs that achieves a high OHR, even when object size distributions and request characteristics vary significantly over time. At the core of AdaptSize is a novel Markov cache model that seamlessly adapts the caching parameters to the changing request patterns. Using request traces from one of the largest CDNs in the world, we show that our implementation of AdaptSize achieves significantly higher OHR than widelyused production systems: 30-48% and 47-91% higher OHR than Nginx and Varnish, respectively. AdaptSize also achieves 33-46% higher OHR than state-of-the-art research systems. Further, AdaptSize is more robust to changing request patterns than the traditional tuning approach of hill climbing and shadow queues studied in other contexts.","inCitations":["076538d1114ea07d2ed373bce513ec566aed7d5c","e9a1f0bb78f2746b18cec0514805ed91f23ccc10","237d67f89d957068b83b3b3930ab7bf13b8d0e4f","0357d8655c6788bf0041b8446c038a808c209338","157295da1d2e67b8286bff1ff03ae0dd248b7a17","2dc3d8536a8fa4660c6e842ef17c2d1553fceea6","0f35d1156d2667232855578b50b8fb02ea5bbf51","e593411ab69421d57e7fb69d53662e3c78340512"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/berger","http://www.pdl.cmu.edu/PDL-FTP/associated/nsdi17-berger.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-berger.pdf","https://people.cs.umass.edu/~ramesh/Site/PUBLICATIONS_files/nsdi17-berger.pdf","http://www.cs.cmu.edu/~harchol/Papers/NSDI17.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-berger.pdf"],"title":"AdaptSize: Orchestrating the Hot Object Memory Cache in a Content Delivery Network","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["4K resolution","Computation","Data compression","Encoder","Functional programming","Inter-process communication","Parallel computing","Programming style","Thread (computing)","Video decoder","Video processing"],"journalVolume":"","journalPages":"363-376","pmid":"","year":2017,"outCitations":["be972aeaff3e5eb1de64c02bef0465108f983402","15c7d3d5cfce46110a5aa5c6a482e359a96082b4","a69bed21143feab0849f6f5aa88e011dbb24abad","0541d5338adc48276b3b8cd3a141d799e2d40150","0d62530196b73076bcc1eb8bbd294aa680fc0e2b","332f77fd05703c1607e3b57884ad31fb1fad0104","56df56dbab7e0b022a51e5a038c1119fcd36f137","4c9cec89a2c9c8173ee53ab4cda2c021421eb7a5","0558c94a094158ecd64f0d5014d3d9668054fb97"],"s2Url":"https://semanticscholar.org/paper/5e36511b8cab586d69047adfb03971380c17d427","s2PdfUrl":"http://pdfs.semanticscholar.org/e665/4c70c990b64eb951771ece0a10c8bd001c56.pdf","id":"5e36511b8cab586d69047adfb03971380c17d427","authors":[{"name":"Sadjad Fouladi","ids":["37770113"]},{"name":"Riad S. Wahby","ids":["3031766"]},{"name":"Brennan Shacklett","ids":["9751328"]},{"name":"Karthikeyan Balasubramaniam","ids":["34713726"]},{"name":"William Zeng","ids":["40068050"]},{"name":"Rahul Bhalerao","ids":["39807402"]},{"name":"Anirudh Sivaraman","ids":["39118448"]},{"name":"George Porter","ids":["1892184"]},{"name":"Keith Winstein","ids":["2203149"]}],"journalName":"","paperAbstract":"We describe ExCamera, a system that can edit, transform, and encode a video, including 4K and VR material, with low latency. The system makes two major contributions. First, we designed a framework to run general-purpose parallel computations on a commercial “cloud function” service. The system starts up thousands of threads in seconds and manages inter-thread communication. Second, we implemented a video encoder intended for fine-grained parallelism, using a functional-programming style that allows computation to be split into thousands of tiny tasks without harming compression efficiency. Our design reflects a key insight: the work of video encoding can be divided into fast and slow parts, with the “slow” work done in parallel, and only “fast” work done serially.","inCitations":["6c5631bb8bb0caa14704ef497d744ffa60675d0f","193342874858249aed4796cee35a8bec1b70e236","7a1fd1aebe0618d1ffb7a9819266b9c2039bba17","86991eb6eed3e12f5b3985340416302a2208bceb","0657ec025e7097d06a798a4eb2f9253fdaef3e68","957e98a2084f6c2d22694aadd22f57070b5d7e23","7e4bc8c54dc01bb8019455a119e3d3666b3162b8","56df56dbab7e0b022a51e5a038c1119fcd36f137","0c9bccd940a26e5074165b2ce082db9c4eac0fd8","db5aa66ec7e20068d4c5d26f6002838f9a49d349","4e4870cac092580f2e156fcbdabead7d4326b55a","841dd77064cd38a749c550f85ee1336733eee300"],"pdfUrls":["http://www.cs.utexas.edu/~swadhin/reading_group/slides/exCamera.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-fouladi.pdf","http://www.cs.cornell.edu/courses/cs6453/2017sp/slides/tinythreads.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/fouladi","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_fouladi.pdf","http://cseweb.ucsd.edu/~gmporter/papers/nsdi17-excamera.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_fouladi.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-fouladi.pdf","http://platformlab.stanford.edu/Seminar%20Talks/Sadjad_Fouladi.pdf"],"title":"Encoding, Fast and Slow: Low-Latency Video Processing Using Thousands of Tiny Threads","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Algorithm","Autostereogram","Consistency model","Correctness (computer science)","Distributed firewall","Simulation","Software-defined networking","Strong consistency","Structured text","Turned A"],"journalVolume":"","journalPages":"329-345","pmid":"","year":2017,"outCitations":["17d122f143726288da193a767fd0a7634010f0ff","2730c3ec2908d852e73a62f93302e0e8bfe5510e","3e0080a34eca4eabb9b371c2b3c369dc4dc90112","0e93ce47cc5e1be1e91145b93fe98c1e242670f5","4534c15b4760cb29a0ce74fcd43297fe83f2f277","10baa5b029b3dcf3e67eab0234a0ea64294559a0","1dc62b09b964b8faeecbc03270f7d7a5f2fee733","1164ec0b8d2bd8e95b9fc07e9669ff9d4d379c64","0a664d20663d6b201290adf7431fd57252c54646","5acc6e0d4011d81419b81d7cd383bed48c4cb22c","18fa3a12532504d678e546d58ffdc5365e727ebd","00cf4b13a1bd202ccebe1e7bd0587f11e98ec3d6","c079867c1782b958b3f1c6ea63a38c4256ce8fdb","3f0fe61d13447ebdc7222e568064532252fbb532","16b0a02e2db3e3beb3dd0ce83e610549f271c9f1","9002e502571e65ad59dfdd59717538cd4ad74868","2fb179c0b0ad6cf37f6272db05ccfad708a82f2d","b46e192c84945528f6029138fdb26a9629f2dc6c","3d3abf7b60d6e762d635c3b997d48ddb1bc76eb6"],"s2Url":"https://semanticscholar.org/paper/23bde3dadb4effccb3b539c5ce46c295a11615bb","s2PdfUrl":"http://pdfs.semanticscholar.org/23bd/e3dadb4effccb3b539c5ce46c295a11615bb.pdf","id":"23bde3dadb4effccb3b539c5ce46c295a11615bb","authors":[{"name":"Aurojit Panda","ids":["3169583"]},{"name":"Wenting Zheng","ids":["7494341"]},{"name":"Xiaohe Hu","ids":["34825255"]},{"name":"Arvind Krishnamurthy","ids":["1689594"]},{"name":"Scott Shenker","ids":["1753148"]}],"journalName":"","paperAbstract":"We consider the following question: what consistency model is appropriate for coordinating the actions of a replicated set of SDN controllers? We first argue that the conventional requirement of strong consistency, typically achieved through the use of Paxos or other consensus algorithms, is conceptually unnecessary to handle unplanned network updates. We present an alternate approach, based on the weaker notion of eventual correctness, and describe the design of a simple coordination layer (SCL) that can seamlessly turn a set of single-image SDN controllers (that obey certain properties) into a distributed SDN system that achieves this goal (whereas traditional consensus mechanisms do not). We then show through analysis and simulation that our approach provides faster responses to network events. While our primary focus is on handling unplanned network updates, our coordination layer also handles policy updates and other situations where consistency is warranted. Thus, contrary to the prevailing wisdom, we argue that distributed SDN control planes need only be slightly more complicated than single-image controllers.","inCitations":["49a4227a15be8845dc1698483d17d77765578e2f","b3da33936070038c2ec26fe9fa4489060b32b001"],"pdfUrls":["http://www.usenix.org./system/files/conference/nsdi17/nsdi17-panda-aurojit-scl.pdf","http://www.cs.duke.edu/courses/spring17/compsci590.7/Papers/scl-preprint.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-panda-aurojit-scl.pdf","http://people.eecs.berkeley.edu/~apanda/assets/papers/scl.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/panda-aurojit-scl"],"title":"SCL: Simplifying Distributed SDN Control Planes","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Adversary (cryptography)","Ecosystem","End-to-end encryption","Identifier","Overhead (computing)","Personally identifiable information","Privacy","Proxy server","Relay","Throughput","Tor Messenger","Trusted Execution Technology","Trusted execution environment"],"journalVolume":"","journalPages":"145-161","pmid":"","year":2017,"outCitations":["04269ca9938b4d99658a3527cde3eff2b502f269","06bf84f98e7dd39be8d96eb67bafbf56d61bc715","2d968ef0c5ad0cc6718e2f8b40ce7f4c323dbbdd","5b2092b54860f134f78b2ec884c910750def71e6","1648be4fa6a517cdad08c6299e20869427242d02","17f19d9ec093ef82a10f1276fc53c10d4667836d","7cbbab21c6f6fb54a968005afa21468b825f1d1e","21f47e1d9078d12de1bd06341619923e8b9d85bb","566333376dd1af014555b4cf82cda42c22501013","11dabc4a43d72c78e0d05b8f8bc599620840ff1a","d550c945a24211ed94c89f104698f1998b3fcb64","0a35c32ebc233556d11c2038f5a4362f2c40b2a9","07f0e56d1c37c213cd5c617dbfba5a0549629a19","d9ef20252f9d90295460953e8ab78667b66919ad","6b6fae57882fd193461fca64654107068ce9fd9a","806df240622f866fd8bb4b31b292822dd2aeaf0a","b0ac2616034f56ab1469afb935b55fe7e37f8f41","345947186f190649c582204776071ac9a62e8d67","5fd8edc50805f796daacb9737e1a7b2a9f5a5c2f","5ac7a4dca5509c9dee49d96b4c3c62cc1d0bb9dd","a8369392447c083d2be1b74753f68f87811c72f5","108747579aef6bf029623639a86070feaf5cad41","14d19771bc69f1d41f63052e56e134f9ed569c1e","4c60ec65bd28c6637f82ee3f6ad28d6eaa9c4824","178ab90ac932cdd58eaeffa742e9711430bc9a23","133e0e83dc6877c6d417431e875cd57876153893","708a3c03556b5bc20b5bd8e58ef2f47f6a9fc7d2","35516916cd8840566acc05d0226f711bee1b563b","6bd5352a8b42520aad1c03e9940568b6c41978aa","0f19202d0ad4ddb2041540e6ba4dec4e677224fd","ec79422e0bfdb61d8b6d2a6ec5b2dfbcab970852","48a068fc680131e6c0f215ee41318086a5befec1","30909df12b1b01760ae4c5406e15f302a6524446","01fde8698110cf46ff48a17c65f2658dab4c323c","2633619177fcb13211008c6f8b952933afc01cde","7f489d9801e0674f4436beb34ea8b8695050d5fe","0469044c24ac4897fcffc3c7db6a2d9c7fd08848","7fc6e368df553233b61981dbb34772f5d8013821","6d15489d862e9399807f8aaac50241b440e98663"],"s2Url":"https://semanticscholar.org/paper/6cfe1e553cb48c7087bb61e80031c415978a4ede","s2PdfUrl":"http://pdfs.semanticscholar.org/99de/1c59e2e530a7ed9c27251a00ef5e833ff35b.pdf","id":"6cfe1e553cb48c7087bb61e80031c415978a4ede","authors":[{"name":"Seong Min Kim","ids":["2105818"]},{"name":"Juhyeng Han","ids":["9765412"]},{"name":"Jaehyeong Ha","ids":["9775571"]},{"name":"Taesoo Kim","ids":["3254849"]},{"name":"Dongsu Han","ids":["1729324"]}],"journalName":"","paperAbstract":"With Tor being a popular anonymity network, many attacks have been proposed to break its anonymity or leak information of a private communication on Tor. However, guaranteeing complete privacy in the face of an adversary on Tor is especially difficult because Tor relays are under complete control of world-wide volunteers. Currently, one can gain private information, such as circuit identifiers and hidden service identifiers, by running Tor relays and can even modify their behaviors with malicious intent. This paper presents a practical approach to effectively enhancing the security and privacy of Tor by utilizing Intel SGX, a commodity trusted execution environment. We present a design and implementation of Tor, called SGX-Tor, that prevents code modification and limits the information exposed to untrusted parties. We demonstrate that our approach is practical and effectively reduces the power of an adversary to a traditional network-level adversary. Finally, SGX-Tor incurs moderate performance overhead; the end-to-end latency and throughput overheads for HTTP connections are 3.9% and 11.9%, respectively.","inCitations":["be16f521ebdbe1acea867c9ce8100692d9f56308","d32d738f04d5c4ae4d12be1f6de88b132a7b12a7","334ec6e57110ece9f482f9ec2e85412b0be8072a","2087f336b0eb38fc60a24a32ec0821fc8fe2b2aa","8ca1436fe1e9bbdb39a92178fa80c7869d92573d","85741fa2a0fb1060c138b1b11a0906381661fbcb","a355edbb24d406761407e2728218d2192f2c1fcf","e41440cff90683629228b308a94e48c7af11ca36","b053033ad436cd404bb0eb2e75b3aac83b70d62c","2ee14b821b4084aa1b9237390e280daf450419e5"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/kim-seongmin","https://taesoo.gtisc.gatech.edu/pubs/2017/kim:sgx-tor.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-kim-seongmin.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_kim.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_kim.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-kim-seongmin.pdf"],"title":"Enhancing Security and Privacy of Tor's Ecosystem by Using Trusted Execution Environments","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Algorithm","Classless Inter-Domain Routing","Interaction","Machine learning","Mathematical optimization","Program optimization","Relay"],"journalVolume":"","journalPages":"393-406","pmid":"","year":2017,"outCitations":["26c2fc621d06f4b85cf145b04c963d4f2d59ccc0","73f512de77dad7d0abe8076a856727021b9493d3","6a97303b92477d95d1e6acf7b443ebe19a6beb60","39b575b35f2be0dfe42763737a696ec4de218950","0154103e091dea574c39f3c89d52ccfefc06af6c","0f21eea1b6c1cfe89a3ef0a120ec62b9f7c3fda7","411eb6534d39a37ed43443ba1d2e168c73171330","11aad3a9bd17be8bd73dbde5f084ca7b623096f3","3bd6bc388dea99b023c6695bd287eac8f5d28c0a","1a50e63ebf99d47e69175e16db9c621f9c558e1a","257105d4299bec5eb639c510bd0b24f808bb102d","aa027c65df541aa926da13c19f36e72773068af2","02d1105bec3877ed8cd2d28f76b67ae8ba3f2331","65bcc96576f30e7c976fa5d27b4e3e8ab9d70874","09bdc85bea8970b7d77250ffa7b8788ce1f38d53","8a66bf39ce825bd4fd1d4428f97d56d1e145dada","3ff93ff1ccbfce995067a4617d73ea30115318b6","4cf28bd50dbc329901552c249580ce1e34f66cba","2d27cf59a420f46fc890ca501caabb53e1f57964","002efcf9f0b58af153556b84395a37f6171195da","6f54a7933235ced5684e3bff18f7e5dc40510018","56893647902b4ab971fd092ce78687675b6942a7","03955172eeb34b27be2ae82c129c6bc2fa7178c9","2e8a322666a89adf83e8e0e7cbc5142fba5e7b01","2b02f1b0a887d912bd3362472689ccff118faf1e","65fd142f37c315cdf892184f8fb21281b88f6269","1771487ec938af4b26a8f830fb0faee25c4843ad","6b6a5fe05f19bd4322a43b0f688b854db40a2fdd","35dde872db190b3bc990ba94eed2a7f9d95c0126","22bd3a35b9550bc5b570a0beee5648eb9033be3b","1b3c86ad6c149941750d97bd72b6b0122c1d8b5e","88e271cfc3ca9d4db09a0f29d4a2568246cab0ef"],"s2Url":"https://semanticscholar.org/paper/0b86ab09a837281b2403fbd24b7f3aea3512dac5","s2PdfUrl":"http://pdfs.semanticscholar.org/0b86/ab09a837281b2403fbd24b7f3aea3512dac5.pdf","id":"0b86ab09a837281b2403fbd24b7f3aea3512dac5","authors":[{"name":"Junchen Jiang","ids":["1727978"]},{"name":"Shijie Sun","ids":["1770094"]},{"name":"Vyas Sekar","ids":["1732751"]},{"name":"Hui Zhang","ids":["39280957"]}],"journalName":"","paperAbstract":"Content providers are increasingly using data-driven mechanisms to optimize quality of experience (QoE). Many existing approaches formulate this process as a prediction problem of learning optimal decisions (e.g., server, bitrate, relay) based on observed QoE of recent sessions. While prediction-based mechanisms have shown promising QoE improvements, they are necessarily incomplete as they: (1) suffer from many known biases (e.g., incomplete visibility) and (2) cannot respond to sudden changes (e.g., load changes). Drawing a parallel from machine learning, we argue that data-driven QoE optimization should instead be cast as a real-time exploration and exploitation (E2) process rather than as a prediction problem. Adopting E2 in network applications, however, introduces key architectural (e.g., how to update decisions in real time with fresh data) and algorithmic (e.g., capturing complex interactions between session features vs. QoE) challenges. We present Pytheas, a framework which addresses these challenges using a group-based E2 mechanism. The insight is that application sessions sharing the same features (e.g., IP prefix, location) can be grouped so that we can run E2 algorithms at a per-group granularity. This naturally captures the complex interactions and is amenable to realtime control with fresh measurements. Using an endto-end implementation and a proof-of-concept deployment in CloudLab, we show that Pytheas improves video QoE over a state-of-the-art prediction-based system by up to 31% on average and 78% on 90th percentile of persession QoE.","inCitations":["7059afc68674fa925c48bb43284aab829f23a058","e961d8ea7a52b1a0c04aec159fa2d5d68ccf1e8c","53cc6bf305539b4bd8829df42996e0eb12512434","c541f3eb52c85fde5175d3e1e2e024e6dad9299f","0bdb6e2cb1d8960ecf754fd4d28ea11714178fdf","4f529a014523fc1a54c03f781d49309f847bbfea","cd8d1f75d152d3982e567c3483bc2bfd46a6cfb0","7c4a7c37102f5cf97137c27181dcb7f24d3f32ef"],"pdfUrls":["https://www.cs.cmu.edu/~junchenj/pytheas.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-jiang_0.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-jiang_0.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/jiang"],"title":"Pytheas: Enabling Data-Driven Quality of Experience Optimization Using Group-Based Exploration-Exploitation","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Computer cluster","Experiment","Multiplexing","Non-blocking algorithm","Optical fiber","Optical interconnect","Series and parallel circuits","Simulation","Switching time","Telephone exchange","Testbed","Time-sharing"],"journalVolume":"","journalPages":"577-593","pmid":"","year":2017,"outCitations":["015cd839205cbb6534642bbdc05a3e85fe239d4b","231ba17921ebd80e95771e28dfb5082e169d5a53","68d3a881fb6ead85f093061a2e4f9e8058dfb738","2efa784f3271a88ae5f214ad609b8de5840add92","1eddf92320697dbaae59cb84fafd5af73e0fc865","0558c94a094158ecd64f0d5014d3d9668054fb97","08d410ea6f0c3934324467d809e2ea6ffc8a9a73","a8aeef42aa8387d7a00b143dd9699666a8249380","288763b8420ef17baf2f0214cf283433fcb4a447","282c6a3b573051e3e799d73cfc623ccbd68bcd6a","f6b99e81495bee0fe9ed29809470d1a636a5f128","8af2b5b01cdf781464c9d4ec5286bfaa8cdb9dc8","5cc9393e67a5ad6a08bd6e8efb768064b7f22482","5f3f9223c5c9f896be099bc177929febad508407","9146f5ad699bd4754a272c2e4daf1bc89198af6c","6cef37401134e650bcf60748c2a8ead42af56b66","856d255abc8d50aaa3d4e8bb59e3b53311adf900","058f6752d85a517aae298586fdf117acdd7560ea","56abb48a526e875551b28b2e430feef241e0b437","941512cb0e100560fa7db2b5883b06b004ea0a66","8d60ae4c2df409e4ab1d7e518b39e4d91dc6c6a7","8ba231591f574c5aeee7d1f5bb8a0b2a54ca0160","a273ab99c686b59eb06526b5ac9ec06bc811dc36","0f3bceece9e421adb3a14046a2f0b4baa4c90dfe","44a7bb35c10f94af012507f6d8eb6e4593d1536e","0368d2445d3ee4205ee73da933cb8b810a89091c","11a4744f7f0883c4232a9f5aaca8b9d29bfaa762","4a60d79b042a6c1d67a9c20c076357a9fd65b670","19ff9dac013d1ebca1ea1c9845325c9ddafdf93a","235da9c0f828b60300f7e5cfa2ca6aaa116dd14c","b4aeb961f5f87217d024dd952a3c258fa340c3ad","2b11bd49d4eba42a74263c1b90709123d31f29f6","157629dc2a9d2c2c7696e021ff8c1d5a6e7b4197","a05548af9f54a7cd57a5c3f2d51b9e76f559f04a","534ee575a6b0c37e03d1dddb92493b57e9271298","0c44588bdcbb82c7183958abab5ebc89c0e650f4","5e292a3dca061e0547a7dde8f238532666b25a27","a5a034c673eb5240cbe074b20704fdf99f80555f","663e064469ad91e6bda345d216504b4c868f537b","130d640b53a1d6700b67a4ea4256071ae18e0ee8","7b5144c88098a183eb2f8395276b0be6196a442b"],"s2Url":"https://semanticscholar.org/paper/606b8763a3ed206716bf61a5b00afd048907f6e3","s2PdfUrl":"http://pdfs.semanticscholar.org/606b/8763a3ed206716bf61a5b00afd048907f6e3.pdf","id":"606b8763a3ed206716bf61a5b00afd048907f6e3","authors":[{"name":"Li Chen","ids":["1725490"]},{"name":"Kai Chen","ids":["40611817"]},{"name":"Zhonghua Zhu","ids":["2495971"]},{"name":"Minlan Yu","ids":["1914822"]},{"name":"George Porter","ids":["1892184"]},{"name":"Chunming Qiao","ids":["1680749"]},{"name":"Shan Zhong","ids":["16074166"]}],"journalName":"","paperAbstract":"Existing wired optical interconnects face a challenge of supporting wide-spread communications in production clusters. Initial proposals are constrained, as they only support connections among a small number of racks (e.g., 2 or 4) at a time, with switching time of milliseconds. Recent efforts on reducing optical circuit reconfiguration time to microseconds partially mitigate this problem by rapidly time-sharing optical circuits across more nodes, but are still limited by the total number of parallel circuits available simultaneously. In this paper, we seek an optical interconnect that can enable unconstrained communications within a computing cluster of thousands of servers. We present MegaSwitch, a multi-fiber ring optical fabric that exploits space division multiplexing across multiple fibers to deliver rearrangeably non-blocking communications to 30+ racks and 6000+ servers. We have implemented a 5-rack 40-server MegaSwitch prototype with commercial optical devices, and used testbed experiments as well as large-scale simulations to explore MegaSwitch’s architectural benefits and tradeoffs.","inCitations":["33e28ab30ce23a4abeedeae3f4213fcba80d1947"],"pdfUrls":["https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_chen_li.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/chen","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-chen.pdf","http://www.cse.ust.hk/~kaichen/papers/megaswitch-nsdi17.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-chen.pdf","http://cseweb.ucsd.edu/~gmporter/papers/nsdi17-megaswitch.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_chen_li.pdf"],"title":"Enabling Wide-Spread Communications on Optical Fabric with MegaSwitch","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Backtesting","Data structure","Debugger","Debugging","Software-defined networking"],"journalVolume":"","journalPages":"719-733","pmid":"","year":2017,"outCitations":["273de61c65c39e0e55942ea166a473e63ddaa02c","114f664a25c411b708c0f0058c3f455b5a1f3e9b","6c10b6e6e098dfc52e48023e2db0709ce140fbc6","153506e97f5db120d28f0f4c726cbb5d751baa00","17a23aaab0a713b7863ada44eca0c252a243c6b1","119af470b90b725c847c4b1fd25aea9a6c5b2b57","24a963758371e511e3749c865b14f697358f025c","ad8c8feae36e649d885af3df3d427a3ea40651c2","50b3005872797dd0d559306e9105a2ccc40b4d1a","083e9b12c5566d953efdf6d90e77638a6b0c3693","3960dda299e0f8615a7db675b8e6905b375ecf8a","13042f371ddb28793bf4329702a8df8082a76532","2077cc18da002721390a23392ce4a25d19c3e2a2","24c3330d34d640945e0eb99fe4a0b1c31695a8cb","2839048b432d1563f292a485fa59443bb19e2d78","05607111cf79330d56164a10d351dbf94e2cfa44","6410b6cc29af234544f7706194aba20d6c4c90ae","0558c94a094158ecd64f0d5014d3d9668054fb97","00db012933a992dcd072eb7559f65a69ff257602","111864cac232d8a9c170bd63069eb4af155a9f7b","12789fd5b47542937d1b83ef8b99bdb9c7a70dec","6409e64aed68fcc9e3fdc35b87dd168eeb440d32","61797d1af87a27a89b5bb5fd4a03de061e5dc0e3","138856ad6b8b4cca92965aacb20961aaa4e34a92","2d1c0b3b79d618bb50e111360fc4211f6f262bcb","3ec1a36e9e12a85d02adaa8ed682ee04f73ae332","121180b8c56026deb122eb738547944417239c66","260376f12d3df66f105f03b5afd03c5562c5a96f","99854e92c37b986b4f1ce2c15efc2ea6220ba8fa","405377ca200df3f7da390c37516fe13582e70776","2fac216f660ddd5c8eabcaadb342ed117b32bb2b","3136ad216d30bdff223e5c3f02e07f980a6a45a5","016ca0cee16190907a911d874e98fbc6dfa5a36c","0314da057cfbf61d752674b7d8527e8be9ddc3b8","4350f7972bde4655c29d297b732edb67f36eb827","0c97dfc049282a97222999ee4ddfa216a72c74a1","79aec2093b2a1b0197e7d145b5cf86abc70fee3e","0a7151c200bf97973453ec05a28012cf03cf906b","2b0c044181e70ee8eacd2db26c31a03d5ec24c9c","069103feb2d2d3f1b0115b484d5c2f978a983df0","6801c6db43e280e2fab4268d4fd3eccc5957413a","3d95c58c595130caa94cdc1fcdb0f9b9f12cb805","2afc8d9b3a0d17fb926a6a6dd05b1fb307130a27","33c9bc92c2a5ef616618c0d569b71733c62c8603","1f0ea586a80833ee7b27ada93cc751449c4a3cdf","51d1cfdf9233cab9cc40f72bf049c2ad2f36082c","211b998175c29dd62e7f854301ed88bcb03a1fa5","35339f6f2e99c04920f21883df1db8004436cdc7","19114b7a2f5243a47e80590cc11a2d8ec5b96308","240b650045b4f59c58220e9cbac7f2f91bdaa3ec","516cf9cc4d0886e1cd91832230a2d7645426a3ec","0385a0c8b707d70bef33bb308d321b2647da0ca3","46bcd5cfb3fa13aeb81fa7811b86dfa22bbb0310"],"s2Url":"https://semanticscholar.org/paper/28c5d290a2b044dc4a3352ee9e692de48c82e57d","s2PdfUrl":"http://pdfs.semanticscholar.org/6eae/eedd90f536f30c9df2b264feffd23c5d03a7.pdf","id":"28c5d290a2b044dc4a3352ee9e692de48c82e57d","authors":[{"name":"Yang Wu","ids":["2549020"]},{"name":"Ang Chen","ids":["2421465"]},{"name":"Andreas Haeberlen","ids":["1719236"]},{"name":"Wenchao Zhou","ids":["33779522"]},{"name":"Boon Thau Loo","ids":["35206168"]}],"journalName":"","paperAbstract":"When debugging an SDN application, diagnosing the problem is merely the first step: the operator must still find a fix that solves the problem, without causing new problems elsewhere. However, most existing debuggers focus exclusively on diagnosis and offer the network operator little or no help with finding an effective fix. Finding a suitable fix is difficult because the number of candidates can be enormous. In this paper, we propose a step towards automated repair for SDN applications. Our approach consists of two elements. The first is a data structure that we call meta provenance, which can be used to efficiently find good candidate repairs. Meta provenance is inspired by the provenance concept from the database community; however, whereas standard provenance can only reason about changes to data, meta provenance can also reason about changes to programs. The second element is a system that can efficiently backtest a set of candidate repairs using historical data from the network. This is used to eliminate candidate repairs that do not work well, or that cause other problems. We have implemented a system that maintains meta provenance for SDNs, as well as a prototype debugger that uses the meta provenance to automatically suggest repairs. Results from several case studies show that, for problems of moderate complexity, our debugger can find high-quality repairs within one minute.","inCitations":["728cb61e78d55bc5039ed78920b20259a1135cb3","64ad3b92f61a441c5b4080b0ac9291109a919886","3efbf0223dc54fa48bcfd9652333911c4d796ecc","53c0617eb76ed39f3ba9f3a45374839d7904ef93"],"pdfUrls":["https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_wu_yang.pdf","http://www.seas.upenn.edu/~yangwu6/paper/metaprov-tr.pdf","http://www.cis.upenn.edu/~ahae/papers/meta-provenance-tr.pdf","http://www.cis.upenn.edu/~yangwu6/paper/metaprov-nsdi2017.pdf","http://www.cis.upenn.edu/~angchen/papers/nsdi-2017.pdf","http://www.cis.upenn.edu/~ahae/papers/meta-provenance-nsdi2017.pdf","http://www.seas.upenn.edu/~angchen/papers/nsdi-2017.pdf","http://www.seas.upenn.edu/~yangwu6/paper/metaprov-nsdi2017.pdf","http://repository.upenn.edu/cgi/viewcontent.cgi?article=2064&context=cis_reports","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/wu","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-wu.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_wu_yang.pdf","http://www.cis.upenn.edu/~yangwu6/paper/metaprov-tr.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-wu.pdf"],"title":"Automated Bug Removal for Software-Defined Networks","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Algorithm","Amortized analysis","Border Gateway Protocol","Classless Inter-Domain Routing","Datalog","Experiment","Forwarding plane","Insertion sort","Reachability","Real-time data","Software-defined networking"],"journalVolume":"","journalPages":"735-749","pmid":"","year":2017,"outCitations":["1f0ea586a80833ee7b27ada93cc751449c4a3cdf","20f63c31f73ce4b110acd21554824a40d62516aa","119af470b90b725c847c4b1fd25aea9a6c5b2b57","5692a5398e92ec43703145d512eef4d06a2a2fc8","0e74750ccdd195fa55369a68c7cc0e354ffee9d8","ab435079fd1e6b39a71cc4ec682494afec1ffd32","b5aea92d2d5d5037572745be233ae581b4ce0cc5","37179bfc4836890a32950ea2fb74795823284362","7af6489d51eb9d55a0298b778bb822c7f75e9936","1396d46b92058a1834757f208058014be8e39219","2827d635444c744217d3f292b6ed0d750bc7c6fa","60cdcebff3ea7032443ce2de76b37dc1512682cc","00cf4b13a1bd202ccebe1e7bd0587f11e98ec3d6","29620a4f3b46dc7bbc70d3cde868b0c687d46ed7","4004e51f8f6bb775bd394942007f761d42fdaaad","d65504b3b0e66ed41cf98f381c6071748b65b340","24a963758371e511e3749c865b14f697358f025c","121180b8c56026deb122eb738547944417239c66","9c6d7d0537d2011fd61cc9fd8cda5a21c939b52a","016ca0cee16190907a911d874e98fbc6dfa5a36c","0355a7b4c66e42b73fa3d0d7198ce68b2dbcd5be","0d7ecd90182b2d28433209897650427c5de10bb6","2a0d9931c1e794ffe96c4b6c37507e96a3c4cafc","0ea5ac1eb04bcf16a8856d886be45ec90044a4c3","5c627f0a893f19012dc9183dddd2925219cb02a5","0385a0c8b707d70bef33bb308d321b2647da0ca3","28ed63405cc70fbcef04b04fd3e61fd7b23b59bc","08a572c06bdaa78d85a287111832d188e8e07f0b","211b998175c29dd62e7f854301ed88bcb03a1fa5","36f396b52f93fa52742ce5052a40c1c90ea726e3","2f032f3faecd3bdacfa34db26c49c0688d818af8","07ca726af9c235573654b85e8d478bd7303aa62f","73966d417bdfe0fd2f1bfd82e7dddf51ccbda961","8dd84ffc12f27531d0a5ff2aba1ec326139d194a","9e778ebe9a4b0955b802f7e46323dcffc6174f94","44b3b0573fdf6fc9889dbb3badf134dd092bb2d1","1164ec0b8d2bd8e95b9fc07e9669ff9d4d379c64","04b319357d6bab89ec9575f4b044d7609aa4296a","61797d1af87a27a89b5bb5fd4a03de061e5dc0e3","507b5fe36714eb6aa8acd96d1eef14212eddb82b","fca51a1d1275524ebb39037edb3b79c830a9faf3","2f976aa22e08e4233c8d1dd82343bfd3a124d9ac","156d17c97a2955f0fcd5b3360129bb23f2ed9538","19114b7a2f5243a47e80590cc11a2d8ec5b96308"],"s2Url":"https://semanticscholar.org/paper/ad806d9c69ab834d814865958cd3ded4df4f12f9","s2PdfUrl":"http://pdfs.semanticscholar.org/ad80/6d9c69ab834d814865958cd3ded4df4f12f9.pdf","id":"ad806d9c69ab834d814865958cd3ded4df4f12f9","authors":[{"name":"Alex Horn","ids":["2834533"]},{"name":"Ali Kheradmand","ids":["4314485"]},{"name":"Mukul R. Prasad","ids":["5755087"]}],"journalName":"","paperAbstract":"Real-time network verification promises to automatically detect violations of network-wide reachability invariants on the data plane. To be useful in practice, these violations need to be detected in the order of milliseconds, without raising false alarms. To date, most real-time data plane checkers address this problem by exploiting at least one of the following two observations: (i) only small parts of the network tend to be affected by typical changes to the data plane, and (ii) many different packets tend to share the same forwarding behaviour in the entire network. This paper shows how to effectively exploit a third characteristic of the problem, namely: similarity among forwarding behaviour of packets through parts of the network, rather than its entirety. We propose the first provably amortized quasi-linear algorithm to do so. We implement our algorithm in a new real-time data plane checker, Delta-net. Our experiments with SDN-IP, a globally deployed ONOS software-defined networking application, and several hundred million IP prefix rules generated using topologies and BGP updates from realworld deployed networks, show that Delta-net checks a rule insertion or removal in approximately 40 microseconds on average, a more than 10× improvement over the state-of-the-art. We also show that Delta-net eliminates an inherent bottleneck in the state-of-the-art that restricts its use in answering Datalog-style “what if” queries.","inCitations":["48b486667e0b99dbe874bde113b0520d5168c17d","c60960f93f657205b0f6247e00c79c97203e9a51","3efbf0223dc54fa48bcfd9652333911c4d796ecc","0e0f7fa2de3f757a51e747399d93c570249e72ac","b74d2874646d36b36eee5c836adf6b29d9173425"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/horn-alex","https://arxiv.org/pdf/1702.07375v1.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-horn-alex.pdf","http://arxiv.org/abs/1702.07375","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-horn-alex.pdf"],"title":"Delta-net: Real-time Network Verification Using Atoms","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Benchmark (computing)","Centralisation","Communication endpoint","Cubic function","Data aggregation","Data center","Expectation–maximization algorithm","Explicit Congestion Notification","Linux","Network congestion","Network packet","Network utility","Software deployment"],"journalVolume":"","journalPages":"421-435","pmid":"","year":2017,"outCitations":["0831a5baf38c9b3d43c755319a602b15fc01c52d","0509b4554cf388bd091e5151851a25ae8c1f3826","b3493a8ec43df1861c5d7037ce57bcff7d343dfc","114e68ae77738097ba690499dccffe817da1b839","4a098868891474ba73ea338e6f56033d1827d216","7ad0e1e0f2b3ae40cc9e1075faea5407169a15a2","094aca6103f4079521e6a596d099ed37f7d2b498","327a02b19a60319cc35be860ad0259a5c1aef920","c3c262b8e56536d14826926b69af59eaefc29bc2","4687fdf3c77ef00700fdf1399f7dd81bfe87ef97","2f85f20a076cb91dcdf4b3e5b16886ee9b6b3543","3b988049dd8f62f772281e90196bbd793700c86b","cbc67813565acd9e9772d08583a0f197f81b09b7","15e176fc33eff28d9379a689dbd90211841eb1b0","12e531184ab28a0ff925a8c7d63fe774fe2dbf21","1eddf92320697dbaae59cb84fafd5af73e0fc865","058f6752d85a517aae298586fdf117acdd7560ea","37e882e696162cbce0d2a4f4f022162a418a58dd","19ff9dac013d1ebca1ea1c9845325c9ddafdf93a","1dc62b09b964b8faeecbc03270f7d7a5f2fee733","132f00de21cee656d00ad6779f1926070ad59544","3f200c41618d0c3d75c4cd287b4730aadcf596f7","1abd8490033d3a8e5f832fc34e0d4fa69775adf1","2ce9340c3d7bcdb79f8174c45a920617d7451c2c","3e7fd5ac3fc1ab19c985c97a0614e4109fa91583","0b7301fe4766447af960f9a2c06ccde042538e9c","81176da076bb31862cec89c84b5ffb92a622e6ee","13cf338de9edf78be449df692477762cfa9b6f0e","2a628e4a9c5f78bc6dcdf16514353336547846cc","231ba17921ebd80e95771e28dfb5082e169d5a53","0a974f9a517409cf80c1f38e5d805c2c3da35f6a","61aa09bc1a3eae17480645c90b06a18cbd62d9af","de17cf40a4db13315c631c597959ae26f691f2fa","122229239aeba1eb4f1623adb40f1845c582a520","9dc60d74e8eb2213d43e507d04a84ac85ab833c4","2d4906884bc5309f1539195ff5b181d41a15ff60","235da9c0f828b60300f7e5cfa2ca6aaa116dd14c","12f86f055dd6c866b3795e1fe35931159337a26e","2de63b0c867b290d4f7217459c968aa98e5ad39d","764d7de61421968d6b477f0c055d72dcb0893544","65da29a03c8905cbc0614612d1632864336c4786"],"s2Url":"https://semanticscholar.org/paper/093b8adeb29ee4c17b3528c1b9791f275630c8f2","s2PdfUrl":"http://pdfs.semanticscholar.org/8dd2/371b1291c0311967e4f1330f53da4b3d503f.pdf","id":"093b8adeb29ee4c17b3528c1b9791f275630c8f2","authors":[{"name":"Jonathan Perry","ids":["21653817"]},{"name":"Hari Balakrishnan","ids":["1712771"]},{"name":"Devavrat Shah","ids":["1777471"]}],"journalName":"","paperAbstract":"Rapid convergence to a desired allocation of network resources to endpoint traffic is a difficult problem. The reason is that congestion control decisions are distributed across the endpoints, which vary their offered load in response to changes in application demand and network feedback on a packet-by-packet basis. We propose a different approach for datacenter networks, flowlet control, in which congestion control decisions are made at the granularity of a flowlet, not a packet. With flowlet control, allocations have to change only when flowlets arrive or leave. We have implemented this idea in a system called Flowtune using a centralized allocator that receives flowlet start and end notifications from endpoints. The allocator computes optimal rates using a new, fast method for network utility maximization, and updates endpoint congestion-control parameters. Experiments show that Flowtune outperforms DCTCP, pFabric, sfqCoDel, and XCP on tail packet delays in various settings, converging to optimal rates within a few packets rather than over several RTTs. Benchmarks on an EC2 deployment show a fairer rate allocation than Linux’s Cubic. A data aggregation benchmark shows 1.61× lower p95 coflow completion time.","inCitations":["ed94b0106b125a786698865e99bb889bf1f75552","959cdc393f0d9c5e04dfce997d68cbe410abce68","2c713ea0f3dacc2ce4189891a57c69aec0707c52","948a9f289bef8c94eedb30ec530423d02e1ff991","293ca58169024b0f40ae3342200737767321f6b1","9bbd5be2829e49b1fac7f034baf7499cb069db95"],"pdfUrls":["http://nms.csail.mit.edu/papers/flowtune-nsdi17.pdf","http://dspace.mit.edu/bitstream/handle/1721.1/103920/MIT-CSAIL-TR-2016-011.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_perry.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_perry.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/perry","http://dspace.mit.edu/bitstream/handle/1721.1/103920/MIT-CSAIL-TR-2016-011.pdf?sequence=1","http://wind.lcs.mit.edu/papers/flowtune-nsdi17.pdf","http://inat.lcs.mit.edu/papers/flowtune-nsdi17.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-perry.pdf","http://nms.lcs.mit.edu/papers/flowtune-nsdi17.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-perry.pdf"],"title":"Flowtune: Flowlet Control for Datacenter Networks","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Access control list","Apache Cocoon","Complex network","High- and low-level","Network planning and design","Performance Evaluation","Program lifecycle phase","Refinement (computing)","Routing","Run time (program lifecycle phase)","Software bug","Software development","Software-defined networking","Stepwise regression","Top-down and bottom-up design","Verification and validation"],"journalVolume":"","journalPages":"683-698","pmid":"","year":2017,"outCitations":["24a963758371e511e3749c865b14f697358f025c","00cf4b13a1bd202ccebe1e7bd0587f11e98ec3d6","ce2462f499f1f95cd958596e761ed5df9aaf9013","089b10645ee63cd9c5bb4ab661141dd813408e15","30a7bba8d47d7eca9f7826a721e62032a5c8e77a","55ef72fe52990f491ab939b91d75b7899a66180f","7da879c2007aa302b2537546277e83d09f65b957","19114b7a2f5243a47e80590cc11a2d8ec5b96308","488420924de0af51a5ae7f86d3b29392c29601bc","468c3683e86fb3fbce53f640a3fd6250e4efd291","016638985012e34b31274ed33988ccc43477e5d8","98fef2c0314077d23cf2e6dd45bc8bac0180abfd","f30ce102ab26ded26d52a0a39a2400c17ceca85f","27f4001214ce0d449eb05d33626f444526accc7c","016ca0cee16190907a911d874e98fbc6dfa5a36c","2077579d62fc090d4ddf45f107ffae0468936165","9e778ebe9a4b0955b802f7e46323dcffc6174f94","61797d1af87a27a89b5bb5fd4a03de061e5dc0e3","405377ca200df3f7da390c37516fe13582e70776","08a572c06bdaa78d85a287111832d188e8e07f0b","36f396b52f93fa52742ce5052a40c1c90ea726e3","507b5fe36714eb6aa8acd96d1eef14212eddb82b","1d2ce8f0c129985fcf2dea5cac6823bfcac90938","4687fdf3c77ef00700fdf1399f7dd81bfe87ef97"],"s2Url":"https://semanticscholar.org/paper/47e913e15a4662889044a359fecd55edcd75350f","s2PdfUrl":"http://pdfs.semanticscholar.org/f371/6f1b8bc7e9c1ef131629798be42d52ea226c.pdf","id":"47e913e15a4662889044a359fecd55edcd75350f","authors":[{"name":"Leonid Ryzhyk","ids":["3150866"]},{"name":"Nikolaj Bjørner","ids":["3140749"]},{"name":"Marco Canini","ids":["1709876"]},{"name":"Jean-Baptiste Jeannin","ids":["2272322"]},{"name":"Cole Schlesinger","ids":["1859909"]},{"name":"Douglas B. Terry","ids":["1680763"]},{"name":"George Varghese","ids":["1746289"]}],"journalName":"","paperAbstract":"Building software-defined network controllers is an exercise in software development and, as such, likely to introduce bugs. We present Cocoon, a framework for SDN development that facilitates both the design and verification of complex networks using stepwise refinement to move from a high-level specification to the final network implementation. A Cocoon user specifies intermediate design levels in a hierarchical design process that delineates the modularity in complicated network forwarding and makes verification extremely efficient. For example, an enterprise network, equipped with VLANs, ACLs, and Level 2 and Level 3 Routing, can be decomposed cleanly into abstractions for each mechanism, and the resulting stepwise verification is over 200x faster than verifying the final implementation. Cocoon further separates static network design from its dynamically changing configuration. The former is verified at design time, while the latter is checked at run time using statically defined invariants. We present six different SDN use cases including B4 and F10. Our performance evaluation demonstrates that Cocoon is not only faster than existing verification tools but can also find many bugs statically before the network design has been fully specified.","inCitations":[],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-ryzhyk.pdf","https://mcanini.github.io/papers/cocoon.nsdi17.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-ryzhyk.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/ryzhyk"],"title":"Correct by Construction Networks Using Stepwise Refinement","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Authentication","Cloud computing","Computation","Confidentiality","Data breach","Encryption","Program optimization","Query optimization","Relational operator","SQL"],"journalVolume":"","journalPages":"283-298","pmid":"","year":2017,"outCitations":["104eb3716d8b2d7e6d69805357d5b7fb87caff3e","3784b73a1f392160523400ec0309191c0a96d86f","1bb07c114cb447552d36a95445cc207f496d85aa","17f19d9ec093ef82a10f1276fc53c10d4667836d","7aaede70f5efcb1542a80707c1f0f8b01955a7d2","35a24265019c8c0c08a24e4f1865e71938f5ea86","6d6bd93c620885cb5ddd5abfac19efffac132cd5","244f7c483b1035144f04f7c58f20c3f806d3f1b3","13868fa5a86ebde021a1c91415fb9bb718c4a804","7d9fb3131e9830ec034844742c9a4d476c42c54b","3ca369fa2cadb403db7ac5e75deefd9acbb10723","9436b2e2c095edab3bdd12d49abf177ca62342d9","47a7e2ac4ad74a45c6ff47d43c47ff6126573c8c","ec79422e0bfdb61d8b6d2a6ec5b2dfbcab970852","0832933a67612dc18e0f70cb0ed949fef1a830a5","0558c94a094158ecd64f0d5014d3d9668054fb97","080ed793c12d97436ae29851b5e34c54c07e3816","5ac7a4dca5509c9dee49d96b4c3c62cc1d0bb9dd","22a5eeb8608b35e371b7544a54fabeadca8866e3","4beef78e9b21611a59237b63d512014e47f32d5e","080f44d89bf6f4404f476ffec8d2f8ad3f60e07d","fb7f27650f30aefa7786c874da4b7cc27a11b9df","8fa56ecfb46b8dadf8a4dd063d15da5b975c83f1","281abfbab7e5f4a388adeae8e7b0680b2ba5356e","2813c3351838e036f52bcaa94eb7203bf4d9e7d3","6871b95c14dccca7636b498b5d363a743c5288e6","92eaba06af12761b5c64b84e6028d21cd05af9dd","b0ac2616034f56ab1469afb935b55fe7e37f8f41","74df90c73883c7192ec36def60ac560e37b8f1c7","4c60ec65bd28c6637f82ee3f6ad28d6eaa9c4824","3b2849c55fe6fd719cc298be03292a93ce78d107","2420f3bd82b9b9a4fc99fa1e3b79b4cb6d6c3fef","2ed92ed2d4420bcf4844e335cdcd71c0b1e9160e","20b63210954f7c5a70664f301dcd7196856ccfa7","2065450d96aca38c79cad5172b58660765533650"],"s2Url":"https://semanticscholar.org/paper/415012ec86c7a6acebd34bf7eb02eff46dd96e68","s2PdfUrl":"http://pdfs.semanticscholar.org/83eb/b8c63c6516243b20767323a5d3f7051a75f6.pdf","id":"415012ec86c7a6acebd34bf7eb02eff46dd96e68","authors":[{"name":"Wenting Zheng","ids":["7494341"]},{"name":"Ankur Dave","ids":["2959744"]},{"name":"Jethro G. Beekman","ids":["3107642"]},{"name":"Raluca A. Popa","ids":["34523435"]},{"name":"Joseph Gonzalez","ids":["30503077"]},{"name":"Ion Stoica","ids":["1716557"]}],"journalName":"","paperAbstract":"Many systems run rich analytics on sensitive data in the cloud, but are prone to data breaches. Hardware enclaves promise data confidentiality and secure execution of arbitrary computation, yet still suffer from access pattern leakage. We propose Opaque, a distributed data analytics platform supporting a wide range of queries while providing strong security guarantees. Opaque introduces new distributed oblivious relational operators that hide access patterns, and new query planning techniques to optimize these new operators. Opaque is implemented on Spark SQL with few changes to the underlying system. Opaque provides data encryption, authentication and computation verification with a performance ranging from 52% faster to 3.3x slower as compared to vanilla Spark SQL; obliviousness comes with a 1.6–46x overhead. Opaque provides an improvement of three orders of magnitude over state-of-the-art oblivious protocols, and our query optimization techniques improve performance by 2–5x.","inCitations":["6f8fe3cbacb8436615e886b6188e2e62fd1a5b3c","24bb8328ad26f21ca2e2322ec2c5da16586dccac","f4ed6e5506b62faa5df8bb1407921b9d04052cdf","0bd8f0ab2ade3cbb560dca22c2f5dfd203f4cfd3","796de1fa2703e049cfc24be1a9ac260a987b93ce","d034fa0209b2b2e8c68dfdb77f4bb5672a4c7713","60a72da351f9e706b1417c5ce531aa661f314456","8b338e925ae623adbc4cf387d3dd7ccf839d66e6","9ca155165434e4dfd0832e4b325c88381dc603de","70d6082e2920ceac947989f3adc45c6a9aa9c226","0646a88dfd7e7ce7233041eaad62076ccc55624c","a355edbb24d406761407e2728218d2192f2c1fcf","091c3ab3e30621efc6326c4438b3300d203d8ddc","ed84133ca8ef37a273d4b187202f55c6618b953e","38a54f9bbbfc46599770a28999365144a273783f","56ee02f6ca43075036c8d783b76b7ffd0105727f","4130a8dce26eaa8d0f19b9f3b2bfdc8a58a8c5e6","80621d09c3d3dd896c7e2bff083b9e702dc2ed29","2fea0c41dbd7878d6b285b9f3dc62e32adba94d6","8569785f80712b5787e12b86a3870a28c0182b2c","334ec6e57110ece9f482f9ec2e85412b0be8072a","53f18a9a84c41ff532302166f4456856f3711830","0d6647696799a1f2471555f19fc050aaa8a926ea","b3f2a11d45757e675be123d55ec0eb192bcca990"],"pdfUrls":["https://people.eecs.berkeley.edu/~wzheng/opaque.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/zheng","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-zheng.pdf","http://platformlab.stanford.edu/Seminar%20Talks/Raluca_Popa.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-zheng.pdf","http://inst.eecs.berkeley.edu/~cs261/fa17/scribe/Opaquep.pdf"],"title":"Opaque: An Oblivious and Encrypted Distributed Analytics Platform","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Arithmetic coding","Baseline (configuration management)","Byte","Dropbox","Fault tolerance","Huffman coding","JPEG","JPEG 2000","Lossless compression","Open-source software","Parallel algorithm","Pebibyte","Petabyte","Software deployment"],"journalVolume":"","journalPages":"1-15","pmid":"","year":2017,"outCitations":["26d98ce36db100aee0867c397a331253ac7cd573","65ae594f1243b8239cabf35764198443614c4325","04d0add7245a1ab6c49498f8ae2e308794369b36","9b96c86217891961f877d938718f2f31943a3ea7","11a7e426012fcec35c32fdea0b60b874783c682f","94aa01189f997afd56241ac4130e2c32e3420b66","e711b68e3fe1964aeedde33b38cb43c5a7fee743","508c2172d12bbc2b749ee79c8fea158bfac0f1c6","10925faac07bbeeecf7d7d50f6df2d0143c2426f","44607270754f8521d6c4d42297aa881393f4f8e0","29146d2b80bc8c56f7e18efe8d2c92354254e947"],"s2Url":"https://semanticscholar.org/paper/9fe5c41f28af93b1789a44fc9f232cfff146e870","s2PdfUrl":"http://pdfs.semanticscholar.org/9fe5/c41f28af93b1789a44fc9f232cfff146e870.pdf","id":"9fe5c41f28af93b1789a44fc9f232cfff146e870","authors":[{"name":"Daniel Reiter Horn","ids":["2810695"]},{"name":"Ken Elkabany","ids":["2964002"]},{"name":"Chris Lesniewski-Laas","ids":["3237897"]},{"name":"Keith Winstein","ids":["2203149"]}],"journalName":"","paperAbstract":"We report the design, implementation, and deployment of Lepton, a fault-tolerant system that losslessly compresses JPEG images to 77% of their original size on average. Lepton replaces the lowest layer of baseline JPEG compression—a Huffman code—with a parallelized arithmetic code, so that the exact bytes of the original JPEG file can be recovered quickly. Lepton matches the compression efficiency of the best prior work, while decoding more than nine times faster and in a streaming manner. Lepton has been released as open-source software and has been deployed for a year on the Dropbox file-storage backend. As of February 2017, it had compressed more than 203 PiB of user JPEG files, saving more than 46 PiB.","inCitations":[],"pdfUrls":["http://arxiv.org/abs/1704.06192","https://arxiv.org/pdf/1704.06192v1.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-horn-daniel.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/horn","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-horn-daniel.pdf"],"title":"The Design, Implementation, and Deployment of a System to Transparently Compress Hundreds of Petabytes of Image Files for a File-Storage Service","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Application programming interface","Business logic","Firewall (computing)","HOOD method","High- and low-level","Internet protocol suite","Intrusion detection system","Middlebox","Multi-commodity flow problem","Protocol stack","Source lines of code","State (computer science)","Stateful firewall"],"journalVolume":"","journalPages":"113-129","pmid":"","year":2017,"outCitations":["04f6a5dc6c2aac0586f8f1e83b434ea96fffcd66","0433bb657317ac22f7c66d71dfd14c8ead607d73","225603198cc415d363db8a8a2bd30b0df3c963b1","4859d7eb90e7a662536cb0ae8272898239cf396b","6354917580770e081618c4cab9de04a007fef167","3547ac839d02f6efe3f6f76a8289738a22528442","25f855c968af75e4617f25c71aee3cedec1dedaf","73e30965ab41161ef7ecbed00133a931dbc2efba","0a59166593f0a2fa260f16fd853299c9f0863fdf","17c18f25346fddc11bb5f2448e9b705ef8585d21","0cbd8cc50dd35561b2adf2194715f58fc7e7651d","b85df0212d624cbcf52108969ba722fe5d24cb2e","363d109c3f00026f9ef904dd8cc3c935ee463b65","06c9511a3a29f1afa3971b1885ad56b5a890dbdc","239f4e993a97984c1e0dde4032c5c2f6ab05dd22","6a7fa6f50777fb8783e5c9d1e9685eb153cddd45","5cb88831f543d30cc688fedc445d4e358ef73626","e298114c5abac2b048020d658ecfb7d73d6a422a","336b4f3099b8f629adc20a69aba15257e53539f9","4d03b65744ce64166457436b24d6db23d3c3e493","8e226c40a8c056dc4c348eef256b711902e1d943","46a38fb1e26c9957111d154c6fc2c39101ff0ba1","6694a3e4351562cc810a7e14fc6f19647b7f8c71","09bd66ed15985caa6b0bf1d54a36b508141ed128","005718daa82f7880b5b1f3b01e0e8f6aad2b5751","7129b305ce45f83127e928e8510da9fae0783905","5e8145c020e23f89c2377fdea4a4b06016d3101b","08b9e9756a5da46f9bbeb9286eaff5b3640705c8","6debd9d773c7aca19f18f3b4640c45f8ae12b254","afa6dee5c3439e28bc2cfb216f43c21f1f586fbc"],"s2Url":"https://semanticscholar.org/paper/78ea9dea4915d5b2a86eb1854145c91ac2c8aba5","s2PdfUrl":"http://pdfs.semanticscholar.org/78ea/9dea4915d5b2a86eb1854145c91ac2c8aba5.pdf","id":"78ea9dea4915d5b2a86eb1854145c91ac2c8aba5","authors":[{"name":"Muhammad Asim Jamshed","ids":["32628418"]},{"name":"YoungGyoun Moon","ids":["2313756"]},{"name":"Donghwi Kim","ids":["6190270"]},{"name":"Dongsu Han","ids":["1729324"]},{"name":"KyoungSoo Park","ids":["1944837"]}],"journalName":"","paperAbstract":"Stateful middleboxes, such as intrusion detection systems and application-level firewalls, have provided key functionalities in operating modern IP networks. However, designing an efficient middlebox is challenging due to the lack of networking stack abstraction for TCP flow processing. Thus, middlebox developers often write the complex flow management logic from scratch, which is not only prone to errors, but also wastes efforts for similar functionalities across applications. This paper presents the design and implementation of mOS, a reusable networking stack for stateful flow processing in middlebox applications. Our API allows developers to focus on the core application logic instead of dealing with low-level packet/flow processing themselves. Under the hood, it implements an efficient event system that scales to monitoring millions of concurrent flow events. Our evaluation demonstrates that mOS enables modular development of stateful middleboxes, often significantly reducing development efforts represented by the source lines of code, while introducing little performance overhead in multi-10Gbps network environments.","inCitations":["be16f521ebdbe1acea867c9ce8100692d9f56308","8ca1436fe1e9bbdb39a92178fa80c7869d92573d","bf006dc952ff01f6daaa87933bb812859127ed1c","304ba54357f0ebd37d35d33fe8b3703c979b514e","e41440cff90683629228b308a94e48c7af11ca36"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-jamshed.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_jamshed.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_jamshed.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-jamshed.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/jamshed"],"title":"mOS: A Reusable Networking Stack for Flow Monitoring Middleboxes","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Algorithm","Amazon Elastic Compute Cloud (EC2)","Centralisation","Correctness (computer science)","Data center","Emulator","Experiment","Gaia hypothesis","Machine learning","Speedup","Synchronization model"],"journalVolume":"","journalPages":"629-647","pmid":"","year":2017,"outCitations":["b293405e9b3cfac8c58083b38bdc85d18dd0c187","0144941d255dad89d3d90c2d131a15cc01df9829","122a631fb23d06e86bbf0d3d1905e3496539234e","1a034af839d43be34dcf492112ebd0870be230d5","5c3785bc4dc07d7e77deef7e90973bdeeea760a5","725abc1a03355d8928d2c60898ef76f652454f01","b78c04c7f29ddaeaeb208d4eae684ffccd71e04f","a8e8f3c8d4418c8d62e306538c9c1292635e9d27","2d83ba2d43306e3c0587ef16f327d59bf4888dc3","411eb6534d39a37ed43443ba1d2e168c73171330","07bd2985ebe29eaa182569e1fd3e3e0f9df4c14a","187d3d8109e51b5e2c4941048b0fd6cf1d464370","04ca5de59edbdd49a9c0502c58331524d220bc8c","1e987ea60c476bbabbb306e2e795bfb81ecc97aa","8aa09720221bdeef43e150fc7f6896f71600fb86","0346de4027e75bc194811be80421c6e403495c7a","2a628e4a9c5f78bc6dcdf16514353336547846cc","bb2b45a0e650ca87590cfa3df93066eecf4e54f6","09396d113a7f5ce282574ff8aa02bf93003bee03","0558c94a094158ecd64f0d5014d3d9668054fb97","2645a136bb1f0af81a526f04a1c9eb2b28dccb1b","0b99d677883883584d9a328f6f2d54738363997a","215aa495b4c860a1e6d87f2c36f34da464376cc4","34b8809c214db18544ce93674bf85fce0e8b3330","12325eaa502bc78762e628c1eecf1181841a75a7","0607c1e5ed0fa225a9f2d20ae7ae526397adf96b","0546fa6622b8b8db8527be777a692d88c5c037b0","098cb3139059c6c8b51da998a5df585d6552c475","45c11575829c295731535e04bfcbe1ea6c33343a","0e9bac6a2b51e93e73f7f5045d4252972db10b5a","17f70b9d1fcf3b31948ffa578ac89399751fe73d","0ad8e89091eed09217e66adc98136126addc2619","0122e063ca5f0f9fb9d144d44d41421503252010","0788cda105da9853627d3e1ec8d01e01f7239c30","510ac232c61e2b1fea3bf107dca4cde3663bc852","3b2697d76f035304bfeb57f6a682224c87645065","0a68c6226e04180671a474c73fa0a2b4a154d129","052b1d8ce63b07fec3de9dbb583772d860b7c769","4aa4069693bee00d1b0759ca3df35e59284e9845","2a894be44d07a963c28893cc6f45d29fbfa872f7","fcc9a75d0cd12cfce81fcd22b22867f76b258e0c","5aaa65fbe2abe27afb237b2f40909d686b14b1ee","2d66dac85b819503ce6d311d37770e31bdf36692","3bb6d5834bfb355553588e382ac5f9fa8a8d831d","1e638c29489e006c6227aa2bb84d88d9f2597468","62f991612959e6fff29128b1d1a54596f6504029","2b3113b7fda6414548e88fc664f3be96d5209830","1637ac4fed83b8309df2de07fbeb8b2511bb1170","28b95582aea29cd700a99cc4ddf8cc5a91270446","043afbd936c95d0e33c4a391365893bd4102f1a7","4d2069788d8041e50f0107db060e14b196747602","5c36d8bb0815fd4ff5daa8351df4a7e2d1b32934","044e2d7359411351afe78726e2a44b01284e905d","3c029e72f5c75c8dd87a6acd43d05f23407e39cf","2746a16b1cddf914f25acd9835ee4e6ea9ab44db","7717b438da4ec3ca4247ff7abf6dd603e91fe41d","4f1b0ecec49193d3621199db0763baa8722f99f1","080f44d89bf6f4404f476ffec8d2f8ad3f60e07d","6721de68fe57a4e01901450e1dfd381f065cc580","0de0c3240bda7972bd0a3c8369ebc4b4f2e4f9c2","75a6bdbeaf768e40a0e3dff8d589af7746e68f72","3f339760068da1db481c670490aa146975f892d6","26f1b2bf3f13707e6be671a10c5a1f057bce2515","154e4aaf1da9e5ed6ebf5e216adbaaa85324d39c","722fcc35def20cfcca3ada76c8dd7a585d6de386","73f512de77dad7d0abe8076a856727021b9493d3","71fca39ad4de8f844aa547683bcbae6eab92ecb0","09dc889030f6da66664bd7d14af4cda00d857833","31bd159b02068fbe1994b7a5e9d7b91adab0d142","3784b73a1f392160523400ec0309191c0a96d86f","3bd6bc388dea99b023c6695bd287eac8f5d28c0a","36f49b05d764bf5c10428b082c2d96c13c4203b9","a6a8313f30420c60e7eaa9f34ea5a41833695af1"],"s2Url":"https://semanticscholar.org/paper/0ccb8f05b8550c6059c9dd0be4ae171576daab0f","s2PdfUrl":"http://pdfs.semanticscholar.org/2db5/306c3679642bfbffc684de986cff80baf4c7.pdf","id":"0ccb8f05b8550c6059c9dd0be4ae171576daab0f","authors":[{"name":"Kevin Hsieh","ids":["33828705"]},{"name":"Aaron Harlap","ids":["3459901"]},{"name":"Nandita Vijaykumar","ids":["1920997"]},{"name":"Dimitris Konomis","ids":["9758493"]},{"name":"Gregory R. Ganger","ids":["1707164"]},{"name":"Phillip B. Gibbons","ids":["1974678"]},{"name":"Onur Mutlu","ids":["1734461"]}],"journalName":"","paperAbstract":"Machine learning (ML) is widely used to derive useful information from large-scale data (such as user activities, pictures, and videos) generated at increasingly rapid rates, all over the world. Unfortunately, it is infeasible to move all this globally-generated data to a centralized data center before running an ML algorithm over it—moving large amounts of raw data over wide-area networks (WANs) can be extremely slow, and is also subject to the constraints of privacy and data sovereignty laws. This motivates the need for a geo-distributed ML system spanning multiple data centers. Unfortunately, communicating over WANs can significantly degrade ML system performance (by as much as 53.7× in our study) because the communication overwhelms the limited WAN bandwidth. Our goal in this work is to develop a geo-distributed ML system that (1) employs an intelligent communication mechanism over WANs to efficiently utilize the scarce WAN bandwidth, while retaining the accuracy and correctness guarantees of an ML algorithm; and (2) is generic and flexible enough to run a wide range of ML algorithms, without requiring any changes to the algorithms. To this end, we introduce a new, general geo-distributed ML system, Gaia, that decouples the communication within a data center from the communication between data centers, enabling different communication and consistency models for each. We present a new ML synchronization model, Approximate Synchronous Parallel (ASP), whose key idea is to dynamically eliminate insignificant communication between data centers while still guaranteeing the correctness of ML algorithms. Our experiments on our prototypes of Gaia running across 11 Amazon EC2 global regions and on a cluster that emulates EC2 WAN bandwidth show that Gaia provides 1.8–53.5× speedup over two state-of-the-art distributed ML systems, and is within 0.94–1.40× of the speed of running the same ML algorithm on machines on a local area network (LAN).","inCitations":["fa0412fc819fce2468a65b65a2820247c2776760","02533c75f2fe991638c963bd107aa1d28b916b6e","d0556be65e8564ab8bb3e26b6a0146a62027bc40","6cae9ad284a73471a8ed9e483b1673a60d61d946","09276906df8cd0942d114dcfbf350a31c7205a5f","3f99bb743fa9576f8da7d168f3858dd0acf35e79","ecf5efd5fe18860b42a1abd198e94a868dbf944c","011b55926aecfd0baf33eb467bea5a3f0bcc2d28","381b008b49d04c1bd5ff00649521fa028b9d3ea8","e188b85218c7e31c8073bfaad73287059ff57c50"],"pdfUrls":["http://www.ece.cmu.edu/~safari/pubs/gaia-geo-distributed-ML-at-LAN-speed_nsdi17.pdf","https://users.ece.cmu.edu/~aharlap/papers/nsdi-2017.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_hsieh.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-hsieh.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/hsieh","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-hsieh.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_hsieh.pdf","http://www.pdl.cmu.edu/PDL-FTP/BigLearning/gaia.pdf"],"title":"Gaia: Geo-Distributed Machine Learning Approaching LAN Speeds","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Apache Spark","Central processing unit","Memcached","Operating system","Paging","Remote direct memory access","Slab allocation","VoltDB"],"journalVolume":"","journalPages":"649-667","pmid":"","year":2017,"outCitations":["47f5bba54710b0e1663e9336790cb4609d16077d","5616fe711d3134f0f336a82548891ba86562fcbc","490431788e3b7aa36a60a7156c55e9ab3796af04","2510fa746a2ac5a7af009eee14a922958c9e1f2a","0ecad2b630fce029c1b7b577ed56e18fbba001ce","2988e34168fa91398fa397baf823af2063893e9c","756d1f8f07a83f3cfc0edaa81493a9f109628e1b","867ad29b3392965e40ede63f3cdbfdedac1c781b","0ad8e89091eed09217e66adc98136126addc2619","daf0cd0076b388712ea12ec4105572997fc50cdf","028378b395dc2a11e8ccc3d994df228340fd9697","3a043714354fe498752b45e4cf429dbae0fb2558","60ddf74dd5b443c3bfb59fe876b42f9d6112c4fb","3e257f01e3ee71545d824a1615c35659525b856a","4eab97d0d1c75641671aa5b7761978322d904c5c","28000a585fdd7b0c11b3d9a9b7008fbc4afafd92","43776b15c034076a36b7143d58af8e04715e41d0","3cb34f7a770836bcfeef28f844d670b8a014ffa8","1e954c5cf302d76483ec0cc0049b4b1220077750","29a7e3bd8a2ab6ae962de935e3b2eabf09557189","1b6f6168fa67ec9141ac1494a7d0f28995d51d3b","00dca7217305a31dcf5108eb7ecf862dd4827823","8e8e622d5fab4c1d2a5bc7783db84e62cc570f9a","08632fe2b934ed15d3499e7321282c81adc2c390","984953d5143743c713006474239729d2396ad3b4","14390fd81841cc4bb3d3764042481fc0a0e89e7b","742c641506ac9efc3281af2effb31f2fb31b2dd4","1aefeed6a487431dc1c1137d8b18ad299b328d73","559e4671b87c3f76d3c485ebdaefe734323879f0","c01d5136874e5f5b46bed068bd2da87f162718e9","468043e200bb5844a4ce6ed906f29453894778ff","006cd63664db53494cc61a44d5c6ebc668dc4b6a","04ccdfc19e675b4b8439ebecddab093ab7c605fa","4721ad0db596f3f78ddb31b4305ddbde35f8f181","544afa259d6dfe0214f029a9fa515dd0482dbba2","0270c2056eb50b5d4597afa722c50abf21e67a82","013a3ba3ee318047ef0f2f3097a8d4c6208401f4","327a02b19a60319cc35be860ad0259a5c1aef920","0558c94a094158ecd64f0d5014d3d9668054fb97","25a973aa67a796233c2b988eae3ae02645216e8f","13b6dd42357b77a2e01915f164ab5740a791d2f5","0706356c9ab6014d6b04577d38289ea8328291a5","31b27a3b4ff89993eb92e8b1353edead8d5f2520","624ab00ed715888d15e42246cb3c87fd13123082","917d89c22bec482e6cc56e26c3a1bda5302e4800","080f44d89bf6f4404f476ffec8d2f8ad3f60e07d","07367703f587dbc3313cc613289c4330cebe5c8c","07add9c98a979e732cfa215c901adb1975f3f43a","225129e1c1626d7e1c2b5fd6146a90ffd137ba02","6304a1e1712b5ee19880d6d1a359b9041f191979","29a1148d75878671dc3663bf480e33d7bd91597d","33e64874996ac6d163e4e5a97e28b617de7cc0f5"],"s2Url":"https://semanticscholar.org/paper/2eff823bdecb1a506ba88e1127fa3cdb1a263682","s2PdfUrl":"http://pdfs.semanticscholar.org/b6b6/8de1eaf5f28dea6596990c83f363c44ea208.pdf","id":"2eff823bdecb1a506ba88e1127fa3cdb1a263682","authors":[{"name":"Juncheng Gu","ids":["3034469"]},{"name":"Youngmoon Lee","ids":["8650889"]},{"name":"Yiwen Zhang","ids":["34619093"]},{"name":"Mosharaf Chowdhury","ids":["2579531"]},{"name":"Kang G. Shin","ids":["1730051"]}],"journalName":"","paperAbstract":"Memory-intensive applications suffer large performance loss when their working sets do not fully fit in memory. Yet, they cannot leverage otherwise unused remote memory when paging out to disks even in the presence of large imbalance in memory utilizations across a cluster. Existing proposals for memory disaggregation call for new architectures, new hardware designs, and/or new programming models, making them infeasible. This paper describes the design and implementation of INFINISWAP, a remote memory paging system designed specifically for an RDMA network. INFINISWAP opportunistically harvests and transparently exposes unused memory to unmodified applications by dividing the swap space of each machine into many slabs and distributing them across many machines’ remote memory. Because one-sided RDMA operations bypass remote CPUs, INFINISWAP leverages the power of many choices to perform decentralized slab placements and evictions. We have implemented and deployed INFINISWAP on an RDMA cluster without any modifications to user applications or the OS and evaluated its effectiveness using multiple workloads running on unmodified VoltDB, Memcached, PowerGraph, GraphX, and Apache Spark. Using INFINISWAP, throughputs of these applications improve between 4× (0.94×) to 15.4× (7.8×) over disk (Mellanox nbdX), and median and tail latencies between 5.4× (2×) and 61× (2.3×). INFINISWAP achieves these with negligible remote CPU usage, whereas nbdX becomes CPU-bound. INFINISWAP increases the overall memory utilization of a cluster and works well at scale.","inCitations":["044f5a9c7b571f42cb47c7bc82a2aeb9752002f1","a1c66612e768989e510e9c7cd584b3081973c80a","4a1aa8a3564c2dc5546299755220d39f3ab9a373","d62daff09dd5082b895e8355315e1ae480c87e32","b8431ade39d7171469029a5c15542ba642e51b07","43e9cd8221c82d1777303692f2989beb223c4530","9bbd5be2829e49b1fac7f034baf7499cb069db95","13e7fc7a16889060740fefe6ff864a6c182e8240","7206aead5a341f361e6571d607f3c032e65e2f7e","3105cd78fb5f9c62ccf0346e061579e2bcd130c6"],"pdfUrls":["https://www.eecs.umich.edu/eecs/about/articles/2017/infiniswap-nsdi17.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-gu.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-gu.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/gu","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_gu.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_gu.pdf","https://kabru.eecs.umich.edu/wordpress/wp-content/uploads/infiniswap-nsdi17.pdf"],"title":"Efficient Memory Disaggregation with Infiniswap","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Data center","Failure rate","Fault detection and isolation","Network switch","Router (computing)","System call"],"journalVolume":"","journalPages":"595-612","pmid":"","year":2017,"outCitations":["332f77fd05703c1607e3b57884ad31fb1fad0104","00ddc85d502aa4bdc45a3b8b9099fad75938b50a","5b999d36d5230eca01532b357c7cf338a5e0d641","310e5383a34e95cc41299ecc6f6329511afc0986","53abb9ca99f1c9e8038dcc0bfe4ccdf770a55db3","0ec58ad7dffcc53018a786c069cb604ef1be5aae","3b57dfb13c0993d573696d9e3696722d92721690","73a6eb2ae5e9aa37babb95748c4d8ecee7efaf22","9289860d43896b2d174a136eb56f03bb1b05e8d9","2860d9a1daa69c65bca16c1aaaf7a98e1b2407c5","14b82ab954a85cb8b336e86cf536c5701ca722e9","27ff8aa0929f4552ecb64e7200ae717e68446598","38f0ec358c3f0952927370d314779a9ea7e0f34e","42f6218131551632370e5e8f88370d04b220002a","4e34c29eb03589bf17356c01e85f18a0720121cc","235da9c0f828b60300f7e5cfa2ca6aaa116dd14c","1e4da813c29a65f19f6e9432cb4efe8b7d45ac1d","0f35b3fd2ef4638a23ee07db4057cc78365c982a","46eba995c5371d7966d59549f61c203cecd1d3c7","2b0c044181e70ee8eacd2db26c31a03d5ec24c9c","11a4744f7f0883c4232a9f5aaca8b9d29bfaa762","0541d5338adc48276b3b8cd3a141d799e2d40150","3386a3417920dd16efec5459b9b48930ece73dd8","fa48ebc1b3462f133f977d0c2dc737655adea7a6","0aeb77fb41dc8e863e054fcffea7b8b3011515ce","170d979cc755c3fc91dfe51eb07e5e0def9ad249","2c5484ca39ca9c704512cb01a1196239a50b38db","65da29a03c8905cbc0614612d1632864336c4786","5b1ba2ca198353b83b50f210de131dc764d9f990"],"s2Url":"https://semanticscholar.org/paper/6163d31dd51332eec9056e1e88e2f1aa0df947d6","s2PdfUrl":"http://pdfs.semanticscholar.org/8ccf/2885d3bb874b619ce19f9b2a302dae2a2f54.pdf","id":"6163d31dd51332eec9056e1e88e2f1aa0df947d6","authors":[{"name":"Arjun Roy","ids":["37504857"]},{"name":"Hongyi Zeng","ids":["2407352"]},{"name":"Jasmeet Bagga","ids":["2875087"]},{"name":"Alex C. Snoeren","ids":["2199298"]}],"journalName":"","paperAbstract":"Datacenters are characterized by their large scale,<lb>stringent reliability requirements, and significant appli-<lb>cation diversity. However, the realities of employing<lb>hardware with small but non-zero failure rates mean that<lb>datacenters are subject to significant numbers of failures,<lb>impacting the performance of the services that rely on<lb>them. To make matters worse, these failures are not al-<lb>ways obvious; network switches and links can fail par-<lb>tially, dropping or delaying various subsets of packets<lb>without necessarily delivering a clear signal that they are<lb>faulty. Thus, traditional fault detection techniques in-<lb>volving end-host or router-based statistics can fall short<lb>in their ability to identify these errors. We describe how to expedite the process of detecting<lb>and localizing partial datacenter faults using an end-host<lb>method generalizable to most datacenter applications. In<lb>particular, we correlate transport-layer flow metrics and network-I/O system call delay at end hosts with the path<lb>that traffic takes through the datacenter and apply statis-<lb>tical analysis techniques to identify outliers and localize<lb>the faulty link and/or switch(es). We evaluate our ap-<lb>proach in a production Facebook front-end datacenter.","inCitations":["0af828156d457bb1c1f4f7e16bf6c0e83d7a5d4d","63efcd0695d3de798e2743739c8b6a32a568fb84","df5a202e7e19eb48d59a86fcbdb4ce85629cc43d","5eb4c0b0c9766ab86b54c01847fc9730fe4ab657","5ae5348b9558729b98a70a7abed4145adeb45bbe","602fe41b74da4d92051f63b5a95831b6ad2b5552","066c934380feb46f38f8f78566f03eb7eb3a1e11"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/roy","http://cseweb.ucsd.edu/~snoeren/papers/fault-nsdi17.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-roy.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_roy.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-roy.pdf"],"title":"Passive Realtime Datacenter Fault Detection and Localization","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Backward compatibility","Field-programmable gate array"],"journalVolume":"","journalPages":"227-242","pmid":"","year":2017,"outCitations":["a7e8413633fd975873c12376de85d63b192a49d8","a20a2c0f9f585d62e7439ee3ede3574ff6cf7283","96656b7aba10c673624a02008425e87fa4f90485","1897a4cc61979f316f762ca1a4eb08785a74d8bd","690aad60d85651f47dbf7a771ed789c61c9ba6f6","392fd12eab11fbb62e7812574c1d956fffb023e4","1a8a6790496ab3b0aa0fee7de8f24918e553964c","3ba5aafbb9cd584cd6d10c24c456a46ac43dfc2a","1171619efdfc2f0a3ecfa94b079fed9ce8d9fb0c","16e7cf26e1331e0308cfabb779b6e4402e0ae888","428c601c818fb069e2a36cd13e18804964a39011","e04ad88f3b1144f9f0024327063e914eb2c39d59","28b7be3423437fb21a6c2f68a4bdf115eefd35a0","ea4adc4a65af056d3fb8c21bad372fe96c68b264","0698e451ea91ea5df2e9c9c096d16b729d8e1a6c","9632a7fb9dbca558990febc543da0d16a98ab6a8","912e1a8ec8ec6c290a6f4e00ecde9a8874fcceb7"],"s2Url":"https://semanticscholar.org/paper/3de2e76ea71f9c785c25a29578507ee00dcfc174","s2PdfUrl":"http://pdfs.semanticscholar.org/ccf0/36633b9fb78e8f01026d43d4917468f31505.pdf","id":"3de2e76ea71f9c785c25a29578507ee00dcfc174","authors":[{"name":"Romil Bhardwaj","ids":["1875774"]},{"name":"Krishna Chintalapudi","ids":["1751888"]},{"name":"Ramachandran Ramjee","ids":["2794488"]}],"journalName":"","paperAbstract":"Carrier sensing is a key mechanism that enables decentralized sharing of unlicensed spectrum. However, carrier sensing in its current form is fundamentally unsuitable when devices transmit at different power levels, a scenario increasingly common given the diversity of Wi-Fi APs in the market and the need for WiFi’s co-existence with new upcoming standards such as LAA/LWA. The primary contribution of this paper is a novel carrier sensing mechanism – skip correlation – that extends carrier sensing to accommodate multiple transmit power levels. Through an FPGA based implementation on the WARP platform, we demonstrate the effectiveness of our technique in a variety of scenarios including support for backward compatibility.","inCitations":[],"pdfUrls":["http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_bhardwaj.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_bhardwaj.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/bhardwaj","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-bhardwaj.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-bhardwaj.pdf"],"title":"Skip-Correlation for Multi-Power Wireless Carrier Sensing","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Entity","Experiment","Line-of-sight (missile)","Privacy","Simulation"],"journalVolume":"","journalPages":"163-176","pmid":"","year":2017,"outCitations":["a6bb7731d5f9e7c03b50cb691cd067596a572246","36004fe08b740b6f02ea6f3023c1005717cdb0b4","e67410d5ef6a064afd20d93650f39129d00f1a32","88079b9ceae1981815a5f8564b7b1890094d28ab","c1814127cf4945977277e6f069a52e56db7a92dc","15bc1496ae89779f2e998a7da7567ec5bbd3a3a4","0bee052af002eb197277cd222d62154c7de4ac8a","05a926a71b0d36610360317d01d048dd2bbdad92","e6c7a3ccfb5fdefb7b7ce886f953e34299abdcba","3e6947ff582991d9b0e204a19e11552f7cec53d4","1780c8d2d933081022be209eb6ef1963852f7f75","14d19771bc69f1d41f63052e56e134f9ed569c1e","68152bedab7f7cf93136b75ac31b45db2278bdf8","ce0c9434e4ac7d8deb408a058642230609f0c4e3","bdacfa6fc5dc122cb220fe547d705511b4731bf4","097c5c1e6c037288b28a10cab8c8abeb8d6eda10","01a29e319e2afa2d29cab62ef1f492a953e8ca70","2ab47454f59d9d8e55d4d8a69530562a3690794a","1d08d8e2d8e7d15d7cf453246f357cf4f74e9429","523c226a32361acf9c7f856c8d7e4eb8d59fe786","c64f19846edeaf53b6e64f90b4da49f0cc9929dc"],"s2Url":"https://semanticscholar.org/paper/491809aa5c65a608156baaf7e4ae319fca609366","s2PdfUrl":"http://pdfs.semanticscholar.org/4918/09aa5c65a608156baaf7e4ae319fca609366.pdf","id":"491809aa5c65a608156baaf7e4ae319fca609366","authors":[{"name":"Minho Kim","ids":["35949326"]},{"name":"Jaemin Lim","ids":["2470977"]},{"name":"Hyunwoo Yu","ids":["3435254"]},{"name":"Kiyeon Kim","ids":["1717183"]},{"name":"Younghoon Kim","ids":["2703779"]},{"name":"Suk-Bok Lee","ids":["3123308"]}],"journalName":"","paperAbstract":"Today, search for dashcam video evidences is conducted manually and its procedure does not guarantee privacy. In this paper, we motivate, design, and implement ViewMap, an automated public service system that enables sharing of private dashcam videos under anonymity. ViewMap takes a profile-based approach where each video is represented in a compact form called a view profile (VP), and the anonymized VPs are treated as entities for search, verification, and reward instead of their owners. ViewMap exploits the line-of-sight (LOS) properties of dedicated short-range communications (DSRC) such that each vehicle makes VP links with nearby ones that share the same sight while driving. ViewMap uses such LOS-based VP links to build a map of visibility around a given incident, and identifies VPs whose videos are worth reviewing. Original videos are never transmitted unless they are verified to be taken near the incident and anonymously solicited. ViewMap offers untraceable rewards for the provision of videos whose owners remain anonymous. We demonstrate the feasibility of ViewMap via field experiments on real roads using our DSRC testbeds and trace-driven simulations.","inCitations":["7aaeeb9325398a9c421afb4d714a259587fc33e8"],"pdfUrls":["http://www.usenix.org./system/files/conference/nsdi17/nsdi17-kim-minho.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_kim_0.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_kim_0.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/kim-minho","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-kim-minho.pdf"],"title":"ViewMap: Sharing Private In-Vehicle Dashcam Videos","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Data rate units","Electron mobility","HDMI","Headset (audio)","Lifting scheme","Line-of-sight (missile)","Transmitter","Uncompressed video","Virtual reality"],"journalVolume":"","journalPages":"49","pmid":"","year":2017,"outCitations":["1943466070019e48204ebbee0914d87ced4ba09a","8e8ecfef9b375ec6660477ba21e71327c745b9c4","534ee575a6b0c37e03d1dddb92493b57e9271298","4b2f3372baef782618daf54e59782f251c58b97d","21c039e563ec0ca023a5b9c729e92a2fd611946a","7c3311642157c39e4afef58934cfa5cd3585af9d","c20eb6df3fea85baebc529fe7e77d03f7aa1a86b","1ec1e55baaabfbf4283d0151dd590519c4d574df","47240e17ac8fa393ec6e2db2dac68454e96c8495","839d13983d55f3aeeb8e644447fd9a4b5665fc56","26bfee054866d9a2d6e1c2d55d9b1dca408a916c","092b58f5cf8eb1de4f1de470d781ed0d91d65d1a","ad6a85c685fbcf089cfd5a87c98557d7f4328e6a","08e6f96da8e44d6529d29fb2087f5bbf5684404d","5c9f2dc4df03ced1cd41e9d342e461a2c6efd6d6","a2ea288f10dbf019811f69917f2f2a3d07d46374","58392cd42505bf2bc0675610188f6465bc20fd6f","2d994df27d5c171e641289ad4dc3a1074996d3de","59bd84d84a3a448836bb8eb3e41c5d309dfa9597"],"s2Url":"https://semanticscholar.org/paper/92cc8cdaa0a414b7ed0641225ce58a4c07fc8063","s2PdfUrl":"","id":"92cc8cdaa0a414b7ed0641225ce58a4c07fc8063","authors":[{"name":"Omid Salehi-Abari","ids":["2276804"]}],"journalName":"","paperAbstract":"Today's high-end virtual reality (VR) systems require a cable connection to stream high-definition videos from a PC or game console to the headset. This cable significantly limits the player's mobility and, hence, the user's VR experience. The high data rate requirement of this link (multiple Gbps) precludes its replacement by today's wireless systems, such as Wi-Fi. In this talk, I present MoVR, a system that creates a high data rate, millimeter wave (mmWave) link between the PC and the headset. Specifically, I will explain how we address the two key problems that prevent existing mmWave links from being used in VR systems. First, mmWave signals suffer from a blockage problem. i.e., they operate mainly in line-of-sight and can be blocked by simple obstacles such as the player lifting her hand in front of the headset. Second, mmWave radios use highly directional antennas with very narrow beams; they work only when the transmitter’s beam is aligned with the receiver’s beam. Any small movement of the headset can break the alignment and stall the data stream.","inCitations":["88afa5c97259b6342457072ccf866abbbf027fd6","9ff85ebfdb8c4fd22a7a75003b054bf051cee4e8","8e071ad183c69841d3448ab5b254299a1779b56f","c9a44a37f4fb220a51b3eb37eb7642bb3b97c2cb"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-abari.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/abari","http://doi.acm.org/10.1145/3130242.3131494","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-abari.pdf"],"title":"Enabling High-Quality Untethered Virtual Reality","doi":"10.1145/3130242.3131494","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3130242.3131494","venue":"mmNets@MobiCom"},
{"entities":["Benchmark (computing)","Cache (computing)","Clipper","Machine learning","Model selection","Software deployment","TensorFlow","Throughput"],"journalVolume":"","journalPages":"613-627","pmid":"","year":2017,"outCitations":["c69f555adb1814e85d315387e99dc4a5a05f5a3e","17ab106e2ce0657e1face65ac910eec3683674f5","6074c1108997e0c1f97dc3c199323a162ffe978d","9952d4d5717afd4a27157ed8b98b0ee3dcb70d6c","5c3785bc4dc07d7e77deef7e90973bdeeea760a5","0641c61c2709ea41536cf78bcc6316fb4951b5ab","805d0da469da6ba7571ee75732ab66202aaea9e0","3b2697d76f035304bfeb57f6a682224c87645065","26bc9195c6343e4d7f434dd65b4ad67efe2be27a","046b7f6b48e4d9fcf173dea0a0802d7e87b383e1","0154103e091dea574c39f3c89d52ccfefc06af6c","17f70b9d1fcf3b31948ffa578ac89399751fe73d","87e782af17ee32570ec30c1fdc2b97f33b3053f6","7717b438da4ec3ca4247ff7abf6dd603e91fe41d","0c4867f11c9758014d591381d8b397a1d38b04a7","043afbd936c95d0e33c4a391365893bd4102f1a7","e7d53f538f5239739d1f943c81d17e4a167c65c6","3784b73a1f392160523400ec0309191c0a96d86f","0ad8e89091eed09217e66adc98136126addc2619","26e17f6b62a7caec660b3356d49e879e6e0eeabc","0122e063ca5f0f9fb9d144d44d41421503252010","0de0c3240bda7972bd0a3c8369ebc4b4f2e4f9c2","09f72f02083830c1881b86e6016e1fe3fe41f65f","4619a9ee024cbbf49947ef50eb2fc0f3d90f9180","073daaf4f6fa972d3bdee3c4e4510d21dc934dfb","01fcae344d2edb715bcc63a40b6052c0331741bd","3a33d36257a40d180bef5385c8586fb618fc1161","3c513e3f47c87da19a12cc65fb809eab671bf7ee","080aebd2cc1019f17e78496354c37195560b0697","6f54a7933235ced5684e3bff18f7e5dc40510018","722fcc35def20cfcca3ada76c8dd7a585d6de386","1eb131a34fbb508a9dd8b646950c65901d6f1a5b","e98b7a0cc384dc0eb8769557922f7dd01c9f3f24","09a503095db2d68b439e48d67481399198ed0e5b","91907feaf8dfb0bda37781cf1c17a961d50960b7","0558c94a094158ecd64f0d5014d3d9668054fb97","74fc396d0b8ec548d600395182f12c9b06cc84e9","0a3300d149a0f45623e5cde4f9114b9773b0054c","0b99d677883883584d9a328f6f2d54738363997a","65fd142f37c315cdf892184f8fb21281b88f6269","0626908dd710b91aece1a81f4ca0635f23fc47f3","061356704ec86334dbbc073985375fe13cd39088","5649e65179894dc8dc641fcb9aa10dee2b2ba7c6","1ff88585ce3fd5fdaab6573722d4874641359951"],"s2Url":"https://semanticscholar.org/paper/0a5ff7336879c99513dca6fce6ef44984ebf3f55","s2PdfUrl":"http://pdfs.semanticscholar.org/0a5f/f7336879c99513dca6fce6ef44984ebf3f55.pdf","id":"0a5ff7336879c99513dca6fce6ef44984ebf3f55","authors":[{"name":"Daniel Crankshaw","ids":["3283132"]},{"name":"Xin Wang","ids":["1705489"]},{"name":"Giulio Zhou","ids":["8383835"]},{"name":"Michael J. Franklin","ids":["1712149"]},{"name":"Joseph Gonzalez","ids":["30503077"]},{"name":"Ion Stoica","ids":["1716557"]}],"journalName":"","paperAbstract":"Machine learning is being deployed in a growing number of applications which demand real-time, accurate, and robust predictions under heavy query load. However, most machine learning frameworks and systems only address model training and not deployment. In this paper, we introduce Clipper, a general-purpose low-latency prediction serving system. Interposing between end-user applications and a wide range of machine learning frameworks, Clipper introduces a modular architecture to simplify model deployment across frameworks and applications. Furthermore, by introducing caching, batching, and adaptive model selection techniques, Clipper reduces prediction latency and improves prediction throughput, accuracy, and robustness without modifying the underlying machine learning frameworks. We evaluate Clipper on four common machine learning benchmark datasets and demonstrate its ability to meet the latency, accuracy, and throughput demands of online serving applications. Finally, we compare Clipper to the Tensorflow Serving system and demonstrate that we are able to achieve comparable throughput and latency while enabling model composition and online learning to improve accuracy and render more robust predictions.","inCitations":["d4db99796a41f9cfa9e7918619c3f9a8c9209d37","391a6a423e06b0767e9fc9df4f43c5533c0ab662","bc773c95cf3ac690d74163948e4df9055fa264f8","acaa6136ce98b086a7bcf5bed71ac34165939a08","08b2b8bb4fdbf613209bd24813d051eb13d164d8","093c3b389384812ea16f1ad18ce6c5f43c4f7106","c6b9fb2b5bf87d87550e2dee0d45cda00d6a3373","0154103e091dea574c39f3c89d52ccfefc06af6c","1f06cd0ba8ade1716c5526202d54fab7019c5092","66dd732e588bac4580342da21302c36270d615c5","9fec3836b3e9554b5dc065498eb2214762a5f69b","1bd049c431a3b763cfba63963435f6c91465cb35","9f631cd564b38d87eb33de12657b2b7de69119a7","9ca155165434e4dfd0832e4b325c88381dc603de","081fdeea36d4b56a71e87b5b0de191aa368261c8","a70ba22645eba9891e8cac8d08e36cc3d09e242b","4853a26200889f033c0f509abf0f91d8cafba55b"],"pdfUrls":["https://rise.cs.berkeley.edu/wp-content/uploads/2017/02/clipper_final.pdf","https://arxiv.org/pdf/1612.03079v2.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-crankshaw.pdf","https://arxiv.org/pdf/1612.03079v1.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/crankshaw","http://arxiv.org/abs/1612.03079","https://arxiv.org/pdf/1612.03079.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-crankshaw.pdf"],"title":"Clipper: A Low-Latency Online Prediction Serving System","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["End-to-end principle","Sensor","Systems design"],"journalVolume":"","journalPages":"515-529","pmid":"","year":2017,"outCitations":["c3034c2476af69e0e279899e3ffd0749a5e784f4","d754ce38cc84c35d20156aaf6726e3156b4b844f","486c3f1bded5dd34025135ffa5f1246fb556fb16","9370a3cbfef13d5cbf92a96315116bb2fbcd1601","cdcb4cf0271a1049c8240ea70fd8579bdcdf0c97","ad0abd106577f58475149c40c09e19cc429291bf","ba6a9101184856d9906299b2f8dc7336e6853320","3c29a7f3e25cb582326110308375b149e8a1239b","18336fdfca9e54b4a1a0dc03a0eaa66379778133","47d2d84efed00231d1e058e967d9cee898c7eefe","332e1f6b86760a02e17c0c98abc5b89bae9088a6","ca26e27de601999dd60284f201727d1b46725f6a","ebfc96d215389f1f284c1e51d20473fd935d6448","65ab5d4f190cacc3b021e9aae431a54a5bb0b378","089c550e616574fef1e8eb6b511bd092e277feb0","371c8b352ae4faaf052930039adf9dbeec5e6b5f","2e0b1facffd6e9a0b1bc6b87d1dab0874846fee0","088551fb13e50f25148429a467e397ef60199a91","14a1fa19d5c2cc8cdbe8e34cd62d3ca3a047b732","88b329bc40cc1786b5a25a4bd87a5ce6cf89e0f9","968f7ae59acf5350dae6862292ec4d22615346ae","4b0356fa20156907825f319a29c61f3f0aba31b1","1592fe924114866c1ac559bae33ea789930daa98","91d12b77cfb84e85c882fd57ab6e380c24dc24aa","50fc6949a8208486e26a716c2f4b255405715bbd","0e27540c58aca9081f63903ef64e10f17763196f","926fb71f444a1b5bd967cbbe51f125ba03c5981c","16d0a51e76bf2e5d13d785e3fe79fcb975f409ce","9b4684d15e622f1ccc3f0f2092c7d4dc98bb2c4a","07fab67a4903c6a5daadac3a3561569cd6db0357"],"s2Url":"https://semanticscholar.org/paper/4196cfaf354cd0cabab206bb932c135a173bf1b9","s2PdfUrl":"http://pdfs.semanticscholar.org/786b/30a6f49a513db1ef5cb55dfabd52076fb7be.pdf","id":"4196cfaf354cd0cabab206bb932c135a173bf1b9","authors":[{"name":"Deepak Vasisht","ids":["3027703"]},{"name":"Zerina Kapetanovic","ids":["2084050"]},{"name":"Jongho Won","ids":["2979895"]},{"name":"Xinxin Jin","ids":["5200121"]},{"name":"Ranveer Chandra","ids":["39403445"]},{"name":"Sudipta N. Sinha","ids":["1757937"]},{"name":"Ashish Kapoor","ids":["2189118"]},{"name":"Madhusudhan Sudarshan","ids":["32655294"]},{"name":"Sean Stratman","ids":["9764168"]}],"journalName":"","paperAbstract":"Data-driven techniques help boost agricultural productivity by increasing yields, reducing losses and cutting down input costs. However, these techniques have seen sparse adoption owing to high costs of manual data collection and limited connectivity solutions. In this paper, we present FarmBeats, an end-to-end IoT platform for agriculture that enables seamless data collection from various sensors, cameras and drones. FarmBeats’s system design that explicitly accounts for weather-related power and Internet outages has enabled six month long deployments in two US farms.","inCitations":["879a7fc87b9855b77786ac3bf5f97300a486df8b","561259884f6308a91fc60216b38b2ee64ddcafe0","076cefb7b5de0ad5b6ab53402f238e97359de39c","54a4992e1f56742c0ce7fc9cc08168c0d1d0ef9a","34d4e2b298e6e2fba9b222f090d2c5481c5af221","0a3ce42de0e5c126309ca3dfaf61ca1d259af5d7","71036a5e1489276628175390f82effb306adbced","395958ab32bc6f19b116643ee003d774e7527a32","8a060b3f57433680159c0295e86e23fe6723e787","3cb86d6757d03312754ea655ec97b2b856c34c15"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-vasisht.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/vasisht","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-vasisht.pdf","https://www.microsoft.com/en-us/research/wp-content/uploads/2017/03/FarmBeats-webpage-1.pdf"],"title":"FarmBeats: An IoT Platform for Data-Driven Agriculture","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Data store","Finite-state machine","NoSQL","State machine replication","Strong consistency"],"journalVolume":"","journalPages":"35-49","pmid":"","year":2017,"outCitations":["1a133e61010294b0cd77fa851dfeea7292e49439","e2c6297a9ad5118dc4a6a0dab6a2af2b83545e3d","e4c1d1ad684535bf835475aafb8fcfe5d23b0a93","206b20f225fc655dfac733b6f0bd8077ed86215e","039f09d49bc408db9e0e8429e6bd92be49c5f72e","02ebdcf8200135ec0433e12e4ef2459ac740370b","29a05cde1994548e2e9487822248c679626c6241","d12d1289d2384c2ce642f01855637b9f0519e189","9748241beb02ef1e2d0e6dc877c04b354033a838","088e3e939ad234b6fdd0e321290fb26937dc2553","5ea7103a1c39de9f96fefe5b02fd9306ae439c9f","517e239f97f50079bc557cccf1a6b56aa5736d30","a1c5e3904aa14e42e9ffa6f5903229245f1fa067","9aa0d7253574e50fe3a190ccd924433f048997dd","7062268b78dff4a8819fe3f1e89c6b5344f715a5","49af572ef8f7ea89db06d5e7b66e9369c22d7607","13f7c5807452ae602046582a385c0fb544ec5de1","d0b6d2075a653d60452b6df0fced4ee0ae093dd2","be1815b0102d79b62a14ae39867e3ecc8146cfe9","7afa08d7c1c6c8758ee1227437c69463d5441d09","3702d6e0c78050f3261fdbf0eb1aefbac59fb8cf","11d23a3e7b03ef9679bb4cd47c631118f56f67e3","5ba9e730afd256ed1138fb563e59c214c6ec9259","33457f49553d918e912c2d8c54b81f4fd8a4c234","068e59b88a1230d709d99c83a45d3a5b91260810","00f7b192212078fc8afcbe504cc8caf57d8f73b5","13d6c568c770ff5a070072e720fb34b0037cdab8","9f948448e7a5f0cc94cd53656410face8b31b18a","09d1a6f5a50a8c3e066fb05a8833bc00663ada0e","3784fcc2a0789ee1f0d26a34822b8138895e3340","07d847f310d5fa9138f461f0a25c5e0024f1c4af"],"s2Url":"https://semanticscholar.org/paper/01d8f75b6382c7534a67637249122de28a780ce9","s2PdfUrl":"http://pdfs.semanticscholar.org/0247/2fb494ab2e19aa0756bed34b9c6ea73baf4b.pdf","id":"01d8f75b6382c7534a67637249122de28a780ce9","authors":[{"name":"Michael Wei","ids":["38566150"]},{"name":"Amy Tai","ids":["37531541"]},{"name":"Christopher J. Rossbach","ids":["1692790"]},{"name":"Ittai Abraham","ids":["1804661"]},{"name":"Maithem Munshed","ids":["9773986"]},{"name":"Medhavi Dhawan","ids":["35081828"]},{"name":"Jim Stabile","ids":["5170084"]},{"name":"Udi Wieder","ids":["1753945"]},{"name":"Scott Fritchie","ids":["21841246"]},{"name":"Steven Swanson","ids":["1760342"]},{"name":"Michael J. Freedman","ids":["3122063"]},{"name":"Dahlia Malkhi","ids":["1767467"]}],"journalName":"","paperAbstract":"This paper presents vCorfu, a strongly consistent cloudscale object store built over a shared log. vCorfu augments the traditional replication scheme of a shared log to provide fast reads and leverages a new technique, composable state machine replication, to compose large state machines from smaller ones, enabling the use of state machine replication to be used to efficiently in huge data stores. We show that vCorfu outperforms Cassandra, a popular state-of-the art NOSQL stores while providing strong consistency (opacity, read-own-writes), efficient transactions, and global snapshots at cloud scale.","inCitations":["340d6db56d94623ac090599cf9ea5287370607ef","33f95f238e12e1790ad880ec40cf6c63ea4a70dc","797dad570f82414592a87ed7ebdce44f9801e8df"],"pdfUrls":["https://www.usenix.org/system/files/conference/nsdi17/nsdi17-wei-michael.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/wei-michael","http://www.cs.princeton.edu/~mfreed/docs/vcorfu-nsdi17.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-wei-michael.pdf"],"title":"vCorfu: A Cloud-Scale Object Store on a Shared Log","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
