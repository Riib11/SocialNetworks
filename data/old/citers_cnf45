{"entities":["Attribute–value pair","Computation","Direct memory access","Extensibility","FLOPS","In-memory database","JavaScript","Just-in-time compilation","Machine code","Network interface controller","Server (computing)","USB flash drive"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["1023b268d9f8d399f76dd34da8719a10d6439017","bfc464efbe615805d386ef5c882e4d0f97071ec2","0706225eeac0f855b19c365313db61252ecde0d7","39ac2e0fc4ec63753306f99e71e0f38133e58ead","65fbaf682da11c714110c95ab9a05562358ff040","0541d5338adc48276b3b8cd3a141d799e2d40150","3cae67dde8b20aa58ebd12def02c7fa8ad844de4","560bdd9aa5411b514662dc31ffda0a434e4176d1","2a9d09d8e2390c92cdaa5c8b98d6dd4cb394f638","0538e05e1ced11b91cda5d1aed88a73969def882","1220e4a011c46804d4369b5580dc7fb6e387af54","1ac1348938a45e1da84be8caac78e3097acaf0c1","284c50888bc0a85d871d65d18f0509a11f663907","0558c94a094158ecd64f0d5014d3d9668054fb97","7ead08393fa2000ea03bb1cc1e3e6e0ac991aac6","4acdb61098053f38d5500a9ef974d24828696b9d","a0031fc8c94eb2e18276cb8350e6d89f3926f606","5fe3090971c9fb42ca0bdb67141040017d9a3f8e","8318fa48ed23f9e8b9909385d3560f029c623171","742c641506ac9efc3281af2effb31f2fb31b2dd4","39a59c25e8fcdbb6304e70c86e263539af25e62d","2db2cd448948663f9bd4397dce4bff0caba3b97b","514a5c15e8cf3f681febecad954a4508d9189c99","7e4921a43378b2b7b9cf950604fe434e4b07da58"],"s2Url":"https://semanticscholar.org/paper/829aca8797d7587be04f99a0fd3061bcab1b4569","s2PdfUrl":"http://pdfs.semanticscholar.org/8678/56f061d8cab3ab8de84337f9a7a5034b7ee0.pdf","id":"829aca8797d7587be04f99a0fd3061bcab1b4569","authors":[{"name":"Tian Zhang","ids":["39345318"]},{"name":"Ryan Stutsman","ids":["3087426"]}],"journalName":"","paperAbstract":"Large scale in-memory key-value stores like RAMCloud can perform millions of operations per second per server with a few microseconds of access latency. However, these systems often only provide simple feature sets, and the lack of extensibility is an obstacle for building higher-level services. We evaluate the possibility of using JavaScript for shipping computation to data and for extending database functionality by comparing against other possible approaches. Microbenchmarks are promising; the V8 JavaScript runtime provides near native performance with reduced isolation costs when compared with native code and hardware-based protections. We conclude with initial thoughts on how this technology can be deployed for fast procedures that operate on in-memory data, that maximize gains from JIT, and that exploit the kernelbypass DMA capabilities of modern network cards.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/zhang","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-zhang.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/hotcloud17_slides_zhang.pdf"],"title":"JavaScript for Extending Low-latency In-memory Key-value Stores","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Amazon Elastic Compute Cloud (EC2)","Cloud computing","Comparison shopping website","Server (computing)"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["2862d11cc739a1c6baf6addb56502d869233c11c","207b2b45ae08fe3171ae12e2def3f57dd316f062","0935bb723e4071ccd4c2334d3b6d728faa111d11","12c28dd5ea0b2d0269a67a43c2eb0b1207b2b889","1804e67480b9c46b377d0a102e26d3a9a1a9139b","05be0db01d70bcce9530b462ab2368f9e15127d9","5c6086766fd09dda4de4e8a4fe4ac6bea42157c7","c7992b82d1e16849727a7d0add13f43162595d20","5edb4dd1952a63707f1ff73db5e507c21bb962f8","51694f797b0d4a7e03b1e9a6587a9d4976e92297","530b3179e8532e87520ccd0daebda3d81ef6319b","12635bdd3bd32f09c85a9070977a281fcb32ff61"],"s2Url":"https://semanticscholar.org/paper/613cdadb56592f704349bb25a359ebecd8fd9e0f","s2PdfUrl":"http://pdfs.semanticscholar.org/613c/dadb56592f704349bb25a359ebecd8fd9e0f.pdf","id":"613cdadb56592f704349bb25a359ebecd8fd9e0f","authors":[{"name":"Supreeth Shastri","ids":["7456408"]},{"name":"David E. Irwin","ids":["1697572"]}],"journalName":"","paperAbstract":"Infrastructure-as-a-Service clouds are rapidly evolving into market-like environments that offer a wide range of server contracts. Amazon EC2’s spot market is the clearest example of this trend: it operates over 5000 markets globally where users can rent servers for a variable price. To exploit spot instances, while mitigating the risk of price spikes and revocations, many researchers and startups have developed techniques for modeling and predicting prices to optimize spot server selection. However, prior approaches focus largely on predicting individual server prices, which is akin to predicting the price of a single stock. We argue that researchers should instead focus on “index-based” modeling and prediction that aggregates prices from many markets in each region and availability zone. We show that, for applications flexible enough to select and “trade” servers globally, making decisions based on broader indices lowers costs and improves availability compared to index-agnostic policies.","inCitations":["4ce8ad1513e84cb464efa68827119295530ebaa4","2d40bd8a14b429142e487282761a2a6b95d6b96b"],"pdfUrls":["https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-shastri.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/shastri","http://www.ecs.umass.edu/~irwin/trading.pdf"],"title":"Towards Index-based Global Trading in Cloud Spot Markets","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Change detection and notification","Cubic function","FITS","Flip-flop (electronics)","Protocol stack","SPDY","Throughput","Web service"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["0a62c0b8647804bb4247f6563f24488101952e9a","3d8fa14143e26d534a09a26b3e4dd3c6a83455c7","088a6aa4196456fc3d6415ddf7d5474bd4102f7a","b534337da8e86539f3e14eedabad7d473fdf3bde","0a6103c182ede82da9e726b1b50d8a2383bf418a","3bbffc0103e0dab4dd22c9234a831e17926fa1c6","45f8bf3c6bdf24aac09c45d114441f3b6fe23cbd","36ed5e0ca6d2023137094d04d56a34fe56915fa3","6aba884d517ab35a63e74da36d20207965eb7e0d","16d0a8ee484f4a34e1cdcda8a0c2453e2e962ada","143481d55d9f9d25e53f06a6afaf15feb7430c62","0ad4e891484031164b0f96f36874856d0ba5d532","065e1b5f59ccd2526117be9ec98c2df9e4172bea","5f1d959f1ea180d0612d5f0c8599d8b5e8c5d36d","533268c5e53e03760c0b0c39ce5ff6d3cb0da5e5","3711d6beb5c0c427d3306a3f979ae04968df2cc4","287e60321a08f8601161b8e79a6d9a3e5093d621","151a71cd659abdf5431ce1437968b72844055c7f","484db31fbaa7e71e33a82d3d5afe54c7c875feaf","08bb5149cc215c0714492b407145bbc93006f44c","2bce0f3e815c471702fb9db657914b6169098c2b","940989cf71be558d09c47aab670a0485c77cd216","7a59672b52480f653ab430284b91094e9093bd69","114f268992fcd5dccad6f55091445de06880bdb2"],"s2Url":"https://semanticscholar.org/paper/aba9a321a91fec94a60e5b21ed71099a91e68acc","s2PdfUrl":"http://pdfs.semanticscholar.org/cc98/82a64d6ff9af83c1eb558c251d447122b0fb.pdf","id":"aba9a321a91fec94a60e5b21ed71099a91e68acc","authors":[{"name":"Usama Naseer","ids":["34934599"]},{"name":"Theophilus Benson","ids":["2387791"]}],"journalName":"","paperAbstract":"The web serving protocol stack is constantly changing and evolving to tackle technological shifts in networking infrastructure and website complexity. For example, Cubic to tackle high throughput, SPDY to tackle loss and QUIC to tackle security issues and lower connection setup time. Accordingly, there are a plethora of protocols and configuration parameters that enable the web serving protocol stack to address a variety of realistic conditions. Yet, despite the diversity in end-user networks and devices, today, most content providers have adopted a “one-size-fits-all” approach to configuring user facing web stacks (CDN servers). In this paper, we illustrate the drawbacks through empirical evidence that this “one-size-fits-all” approach results in sub-optimal performance and argue for a novel framework that extends existing CDN architectures to provide programmatic control over the configuration options of the CDN serving stack.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/naseer","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-naseer_052317.pdf","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-naseer.pdf"],"title":"Configtron: Tackling network diversity with heterogeneous configurations","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Central processing unit","Electronic waste","Mobile device","Mobile phone","Moore's law","Server (computing)","Smartphone","Total cost of ownership"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["5016dedcbc51faec5f0aa0b5303a4e96c6e669de","869b1062a3aa62292b7ed7a7718974233c105383","08632fe2b934ed15d3499e7321282c81adc2c390","36275d14731ab7ac192eb4af487f5d34958ad084","50afa6f35a9be11a433c04876201f0fa209705b8","073e26aa7192825a8d872fb0c6f25bc31aca77cf","02b076a3f2bae519741124595244ad8a1b65cc4c","7e4bf4bce26804987fabf9a8cca182b5dd550a7e","0139dceb6cef21b234e454d53154f30391495862","7996c2337e5a381b10991350cfcf34797575d41d","93025ed9fa632e9e0fe15f5e3e9b7e2b7d04ffa1","0f44833eb9047158221e7b3128cde1347b58ccd6","21a0c328f428a1d4694246ed6c44ed472b74133a","3376943e260945e7d5fb3a20841ab9559279d5f0","0a613ed3377d76772dfeb3adc9280b91d3b87d75","0d8524a1eca5e41ee755acd30a0c28a782d05331","6330f075daf847554007b236b57293f8ccebca64","4831b7d887d6c67074d9b3143b1e9b130175f163","110c050c6c992d2b956f7b47d717810ac5c91bdc","0fa5a651cd4dd1f78546b2aa840b4b44aa807649","2c9b77a063a3459ed8f3be0c0066724a38e225e5","5e36511b8cab586d69047adfb03971380c17d427","5f7264e24101ac4d42d2ef9cedd5eae8e7512eec","2ea6e3243c9aa5d9910cf44c4f0e18002bf01638"],"s2Url":"https://semanticscholar.org/paper/db5aa66ec7e20068d4c5d26f6002838f9a49d349","s2PdfUrl":"http://pdfs.semanticscholar.org/db5a/a66ec7e20068d4c5d26f6002838f9a49d349.pdf","id":"db5aa66ec7e20068d4c5d26f6002838f9a49d349","authors":[{"name":"Mohammad Shahrad","ids":["2909388"]},{"name":"David Wentzlaff","ids":["1752172"]}],"journalName":"","paperAbstract":"The performance of mobile phone processors has been steadily increasing, causing the performance gap between server and mobile processors to narrow with mobile processors sporting superior performance per unit energy. Fueled by the slowing of Moore’s Law, the overall performance of single-chip mobile and server processors have likewise plateaued. These trends and the glut of used and partially broken smartphones which become environmental e-waste motivate creating cloud servers out of decommissioned mobile phones. This work proposes creating a compute dense server built out of used and partially broken smartphones (e.g. screen can be broken). This work evaluates the total cost of ownership (TCO) benefit of using servers based on decommissioned mobile devices and analyzes some of the architectural design trade-offs in creating such servers.","inCitations":["26b5be9d7327d095f5adff76134b0bbc914f56f2","299f9809da6a41fbea396ab728b3302819c887e7"],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/shahrad","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-shahrad.pdf"],"title":"Towards Deploying Decommissioned Mobile Devices as Cheap Energy-Efficient Compute Nodes","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Batch processing","Downgrade","General-purpose computing on graphics processing units","Graphics processing unit","OpenCL API"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["51280ae0374a3034fb98f59f878138dbb9aa8360","cb85c0ea860c073bb655e1082c75b9f40b020124","4719002c81cced8fa11fa228d4aa44777eabd944","9fb72d48e20450fb42448fe30d26f96a36b5db6a","269c24a4aad9be622b609a0860f5df80688c2f93","32bd15d39a63696ffa6fb11e2c2bb60f6355c6ae","04e9d7b1544ec76e3e5c24b46ccae5d5096b638b","aa931bfc67b3e7b56671e14facdfe7a85d26992a","3a33424cd2ad63cc056a2d9a06b8794d78ba5214","4954fa180728932959997a4768411ff9136aac81","054572f0a9cf49fa9757ce937d097de6200fe942","cf10de935c08c5b600fe2d08ed9ecf176f727837"],"s2Url":"https://semanticscholar.org/paper/47734696239c5090f81cf821a0962a0ab47d2376","s2PdfUrl":"http://pdfs.semanticscholar.org/4773/4696239c5090f81cf821a0962a0ab47d2376.pdf","id":"47734696239c5090f81cf821a0962a0ab47d2376","authors":[{"name":"James Gleeson","ids":["34999391"]},{"name":"Eyal de Lara","ids":["1879216"]}],"journalName":"","paperAbstract":"Emerging cloud markets like spot markets and batch computing services scale up services at the granularity of whole VMs. In this paper, we observe that GPU workloads underutilize GPU device memory, leading us to explore the benefits of reallocating heterogeneous GPUs within existing VMs. We outline approaches for upgrading and downgrading GPUs for OpenCL GPGPU workloads, and show how to minimize the chance of cloud operator VM termination by maximizing the heterogeneous environments in which applications can run.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/gleeson","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-gleeson.pdf"],"title":"Heterogeneous GPU reallocation","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Algorithm","Anomaly detection","Directed acyclic graph","Fault detection and isolation","Fraps","Platform as a service"],"journalVolume":"abs/1711.11487","journalPages":"","pmid":"","year":2017,"outCitations":["6a47e4a3820f444f115941dbb45d9b1d587e9be7","53aabc0ab7bdb22c4bb5b508a4db2fc4a2387060","2f8bf79c762924808d09c730132979228661de1a","0bacca0993a3f51649a6bb8dbb093fc8d8481ad4","31f14626b7233ed3f8922408c663ce58e813f2d4","24e8be45a2b2a30a01b7e9f1502e7bd6a7870e7a","76f5484e9332947651dd6a0e49469993046ccf25","d67630b667b2c4dcbd1a284dd1c459742f161fb1","28cf3794cf80c30c6ce4d3478d381af677cf40f9","1aa94aa0c5eba9fe773f70b1a9c47db401f5cb66","7e1874986cf6433fabf96fff93ef42b60bdc49f8","10e62304e9b278339de49afb8cd09614ca54303d","f9c74b45203266abf92f2f40e4b268aaf3274d38","4b1f691ecdf7b78a9dc176ba4913543e7eb62232","9e471ab3fd7a86701106a7f274feec4a09bc6785","01911a1e4c78d2562ee3999413a5008d845b1c22","07083f18b90323abedf8932f733656391cad5e21","59a8f2546b4348b7997c766cd726b2fb868d6b79","0aeb77fb41dc8e863e054fcffea7b8b3011515ce","114f664a25c411b708c0f0058c3f455b5a1f3e9b","04c724bad0963d1e6e7a3743be08c08810402582","097e908d46b57041acf02eb97bab4ce6298c85be","35339f6f2e99c04920f21883df1db8004436cdc7","4553901b0417c16bd0743cf09bd538466352dc83","7fa39d4ec44a8c736107ea6da8e111bf943ae9e7","111864cac232d8a9c170bd63069eb4af155a9f7b","00aad3642752496f95fe8dbaad5e5ddeca2a0b58","6022b054aa59bf7cfc7e319cf3f53229d9e95503"],"s2Url":"https://semanticscholar.org/paper/1f83e48319270c0a004d277bbb5156f1f477f98d","s2PdfUrl":"http://pdfs.semanticscholar.org/d3d1/03db7c3686b9ef3b9f7bd5b90f1f9aaa6dac.pdf","id":"1f83e48319270c0a004d277bbb5156f1f477f98d","authors":[{"name":"Xueyuan Han","ids":["3426485"]},{"name":"Thomas F. J.-M. Pasquier","ids":["3176695"]},{"name":"Tanvi Ranjan","ids":["2191192"]},{"name":"Mark Goldstein","ids":["39922558"]},{"name":"Margo I. Seltzer","ids":["1745942"]}],"journalName":"CoRR","paperAbstract":"We present FRAPpuccino (or FRAP), a provenancebased fault detection mechanism for Platform as a Service (PaaS) users, who run many instances of an application on a large cluster of machines. FRAP models, records, and analyzes the behavior of an application and its impact on the system as a directed acyclic provenance graph. It assumes that most instances behave normally and uses their behavior to construct a model of legitimate behavior. Given a model of legitimate behavior, FRAP uses a dynamic sliding window algorithm to compare a new instance’s execution to that of the model. Any instance that does not conform to the model is identified as an anomaly. We present the FRAP prototype and experimental results showing that it can accurately detect application anomalies.","inCitations":["41bb8d014bae6069b274f919591263d557efdb2f"],"pdfUrls":["http://arxiv.org/abs/1711.11487","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-han.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/han","https://arxiv.org/pdf/1711.11487v1.pdf"],"title":"FRAPpuccino: Fault-detection through Runtime Analysis of Provenance","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Algorithm","Cloud computing","Data center","Experiment","Load balancing (computing)","Overhead (computing)","Point-to-multipoint communication","Simulation","Telecommunications link","The Coroner's Toolkit"],"journalVolume":"abs/1707.02096","journalPages":"","pmid":"","year":2017,"outCitations":["c92eb7d492ce6b4e471c33a2b2cf7ce9f30e4b55","82cb824eb340c7b6e9230af4c2a22093393fea29","2a628e4a9c5f78bc6dcdf16514353336547846cc","c2825bd36ccb5e231baad9fe329a299c12cea8e4","d40fc1b77a453ed004a7ea0d0f4f31f1263165ca","0e482d54f234766f0792707479dd8719f86cb17e","098cb3139059c6c8b51da998a5df585d6552c475","18f3787b4eaf0ca00ede2e783ba043b250116a41","2de63b0c867b290d4f7217459c968aa98e5ad39d","6428d17dc46e10e4e0458d606c4ba6b26106dd3b","1edb070e3530f1a02ecd76f6621f7719d13b2109","626434a07a56c0a127d122e8fb6b7c0d17f1c608","8d8b8e90077f9906dff0e760dc51394863e462a5","b49121b0834ba418a1926e91d85e29040a481f45","190abe965d98de2e9dcd26e501fce2516acd8bab","3470547c5d91da6e51e30626d3fc35c9bbc4d1e0","6bb153f0decfe3ca5e4d13a4fe8472837d750788","610ca25419e47a3e1b088e944277acadc2ecf6b5","3d76026cdced10c764453d6b8f0a32fd074d1995","233c7b2aa05ed9b5e18302bad6bf2425766a51f1","085abcc5a0ec77b2560c1a34391401d06489e059","0aabcfbbd125ca095a08292aeb56a6d281648615","1c2122e6e140301f5d9e56f8bae476105bc01fcb","aebe75efbdade65e22f05b6b8c2386af8fc2b8ff","4e046da90c233bcfc128921f65b7bd27df226330","235da9c0f828b60300f7e5cfa2ca6aaa116dd14c","7b1701e8d3d8636b7c9e1dd5d1b48e3ace62af5d","9ec3c21756d88abd6ec4b2b50cf2f529564ebcb0","4687fdf3c77ef00700fdf1399f7dd81bfe87ef97","2e8a322666a89adf83e8e0e7cbc5142fba5e7b01","065465ac37607a347186ea50873fc63d17cd2c79","2053f512ab4fd5e5f0f08e3fbf64927a844ee2a5","068e59b88a1230d709d99c83a45d3a5b91260810","140e387b9268681e1379ecf4c5a6e21c96da8e5d","908f7931de8768786d9ef7d64f5a8156860709dd","22dba54ce93c528bb4d8ebeef7f0fcc9e9ae2e05","4592090c7283a8e49ceddcdb0f9d87c1be1056c1","65503e174262d82c8a03278fa576da23a4bcdf2b","2e3cc2d55770aac26d3ce0cb6ddd96dbbcfec4cc","1cafaac11664e48bd121695ac1be06b0930d00a5"],"s2Url":"https://semanticscholar.org/paper/05313e1290182beb7e06f6f527d144cf70e77cdb","s2PdfUrl":"http://pdfs.semanticscholar.org/0531/3e1290182beb7e06f6f527d144cf70e77cdb.pdf","id":"05313e1290182beb7e06f6f527d144cf70e77cdb","authors":[{"name":"Mohammad Noormohammadpour","ids":["2185243"]},{"name":"Cauligi S. Raghavendra","ids":["1756733"]},{"name":"Sriram Rao","ids":["40282073"]},{"name":"Srikanth Kandula","ids":["1741860"]}],"journalName":"CoRR","paperAbstract":"Using multiple datacenters allows for higher availability, load balancing and reduced latency to customers of cloud services. To distribute multiple copies of data, cloud providers depend on inter-datacenter WANs that ought to be used efficiently considering their limited capacity and the ever-increasing data demands. In this paper, we focus on applications that transfer objects from one datacenter to several datacenters over dedicated inter-datacenter networks. We present DCCast, a centralized Point to Multi-Point (P2MP) algorithm that uses forwarding trees to efficiently deliver an object from a source datacenter to required destination datacenters. With low computational overhead, DCCast selects forwarding trees that minimize bandwidth usage and balance load across all links. With simulation experiments on Google’s GScale network, we show that DCCast can reduce total bandwidth usage and tail Transfer Completion Times (TCT) by up to 50% compared to delivering the same objects via independent point-to-point (P2P) transfers.","inCitations":["9bbd5be2829e49b1fac7f034baf7499cb069db95","c73eb48e66fe4541bc16e9d75e4966d111acd830","63bb7501faa99154efee231efeb294f3deccf70e","890dae1eda8b9ba83912611128286cd762e8955e","983153b0d5883ea42eb18ba5fe29b7fdc2418bfd"],"pdfUrls":["https://arxiv.org/pdf/1707.02096v1.pdf","http://arxiv.org/abs/1707.02096","https://www.usenix.org/conference/hotcloud17/program/presentation/noormohammadpour","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-noormohammadpour.pdf"],"title":"DCCast: Efficient Point to Multipoint Transfers Across Datacenters","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Data access","Distributed shared memory","Locality of reference","Shared memory"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["87c1d1434f2c93d3a0cd6b0812e7cfd04ee55731","daf0cd0076b388712ea12ec4105572997fc50cdf","66f25a8b5b0bf2eceb3490156a9a6aa971c8d8b8","0b93379135c16cbf8dea68e05a7962d19924953a","742c641506ac9efc3281af2effb31f2fb31b2dd4","0e6b0665e0fc3c0c152885869f6c0d339aba06a1","c41b26e105fce93ff229f7c8677e480a191336bf","8f369c8e284e27ff73591209cc69a62e8252ff02","1ac1348938a45e1da84be8caac78e3097acaf0c1","29a1148d75878671dc3663bf480e33d7bd91597d","0a4110fda21f0de29824ead1df591d2c5e1da8d0"],"s2Url":"https://semanticscholar.org/paper/6fe2d1a86b3b89585f008c364d6f42de1a495939","s2PdfUrl":"http://pdfs.semanticscholar.org/6fe2/d1a86b3b89585f008c364d6f42de1a495939.pdf","id":"6fe2d1a86b3b89585f008c364d6f42de1a495939","authors":[{"name":"Gábor Németh","ids":["1747359"]},{"name":"Daniel Gehberger","ids":["7658422"]},{"name":"Péter Mátray","ids":["2869045"]}],"journalName":"","paperAbstract":"Latency-sensitive applications like virtualized telecom and industrial IoT systems require a service for ultrafast state externalization to become cloud-native. In this paper we propose a distributed shared memory system, called DAL, which achieves the lowest possible latency by transparently co-locating individual data items with applications working on them. Upon changes in data access patterns, the system automatically adapts data locations to keep the number of remote operations at a minimum. By avoiding the costs of network transport and using shared memory communication, the system can achieve 1 μs data access latency. We envision DAL as a platform component which enables latency-sensitive applications to take advantage of the cloud.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/nemeth","https://www.usenix.org/sites/default/files/conference/protected-files/hotcloud17_slides_nemeth.pdf","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-nemeth.pdf"],"title":"DAL: A Locality-Optimizing Distributed Shared Memory System","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Amazon Web Services","Bohr–Einstein debates","Data center","OLAP cube","Online analytical processing","Power dividers and directional couplers","Quantitative computed tomography"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["035109378c724a5db763f5b7ff3c94b7949ce5a2","73f512de77dad7d0abe8076a856727021b9493d3","b113895fdc1d62da873db332e5d63f11cfcff0eb","33457f49553d918e912c2d8c54b81f4fd8a4c234","3bd6bc388dea99b023c6695bd287eac8f5d28c0a","336e3bb6c20367881e11fd33037defbf36db024d","0a68c6226e04180671a474c73fa0a2b4a154d129","b1e3b19f9917012e6ca14afc5322c7d5d63e0653","133eacaf0ad25b8364cb4510007d9363298e8adf","1c799eca7983c62f7815ac5f41787b3e552567b6","9771e382794af067f7360f1cac7b6d2a1e6dd1c4","5eb14aca4a0a1a68960bc8d59801ed76a82d84ad"],"s2Url":"https://semanticscholar.org/paper/7510c9408b5f90e46289ae9d885776c281c19411","s2PdfUrl":"http://pdfs.semanticscholar.org/cfa0/c4a998738983562352eaa20b0adc0840684f.pdf","id":"7510c9408b5f90e46289ae9d885776c281c19411","authors":[{"name":"Hangyu Li","ids":["3079223"]},{"name":"Hong Xu","ids":["1735632"]},{"name":"Sarana Nutanong","ids":["2304090"]}],"journalName":"","paperAbstract":"We propose Bohr, a similarity aware geo-distributed data analytics system that minimizes query completion time. The key idea is to exploit similarity between data in different data centers (DCs), and transfer similar data from the bottleneck DC to other sites with more WAN bandwidth. Though these sites have more input data to process, these data are more similar and can be more efficiently aggregated by the combiner to reduce the intermediate data that needs to be shuffled across the WAN. Thus our similarity aware approach reduces the shuffle time and in turn the query completion time (QCT). We design and implement Bohr based on OLAP data cubes to perform efficient similarity checking among datasets in different sites. Evaluation across ten sites of AWS EC2 shows that Bohr decreases the QCT by 30% compared to state-of-the-art solutions.","inCitations":[],"pdfUrls":["https://www.usenix.org/sites/default/files/conference/protected-files/hotcloud17_slides_li.pdf","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-li.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/li"],"title":"Bohr: Similarity Aware Geo-distributed Data Analytics","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Autoscaling","Cloud computing","Docker","Load balancing (computing)","OpenVMS","Platform as a service","Scalability","Software deployment","Substrate (electronics)","Swarm","Web container"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["05ea86d312ed4a19ad282ad28838e8e87b6ce156","67f49884d9418bdf4e68796ab4c77be951835e67","22aa49d83c66122f74f1f966e246dbbeeab28103","1d84ed02bc65400393723c37a70cc68fe39fbef4","9e98d529d158e2230d722f497fbc36373eaa8583","daa32a4ddfe4afb0ac9856a12121a25b51cb3ab6","490d862480cf30949dce90e832aa292c498ac768","502e789f4026ab8886e46822e95a26be62f213eb","b06c7df9404cf6d87b5d552808450b8c226deab9","a379e5732a2172021ef3e20d1c7b82d5aec50636","44cc87a72d95f4f0c89d38d4bc9634732f1e8fbb","78f853271fe69da617d5a14a1e54cbae6a982a50","0c096642a6142ab41d883a6afc9b9ac4e872842c","242e2056b47d08e2966350e05ad9adf6fa448699","08fec93d2c1a5064336e4cafde4c65f80a2e7f74","1aefeed6a487431dc1c1137d8b18ad299b328d73","2763cd85a279d9aa28942eb51febaa76c2c852cb","242b5b545bb17879a73161134bc84d5ba3e3cf35","fd6b97ea910b1caf424765c50f4fbbff5e795cbf","0b5c26697d7fe2fd90f337934de63dc973195dfa","381b272d8c851ca73aa6ff8aa821a1d2393c41bf","abdaeca65df9eefb3603c8a396a599c69d7081de","9aa0d7253574e50fe3a190ccd924433f048997dd","0205d4afcbd37f425efc63d05efba2280ceea63a","dfd68fbe49b9cba44b912a7b43627a0bcb79f3b2","289f21935b0235b0b143436f896477d71578f66f"],"s2Url":"https://semanticscholar.org/paper/5f375c445c53c6b5aa9ec05684fcf9aae1358f80","s2PdfUrl":"http://pdfs.semanticscholar.org/9653/3279eab5e2629bc6fc940e63cdccf4802400.pdf","id":"5f375c445c53c6b5aa9ec05684fcf9aae1358f80","authors":[{"name":"Shripad Nadgowda","ids":["2718536"]},{"name":"Sahil Suneja","ids":["40005837"]},{"name":"Canturk Isci","ids":["1765914"]}],"journalName":"","paperAbstract":"Applications have commonly been oblivious to their cloud runtimes. This is primarily because they started their journey in IaaS clouds, running on a guestOS inside VMs. Then to increase performance, many guestOSes have been paravirtualized making them virtualization aware, so that they can bypass some of the virtualization layers, as in virtio. This approach still kept applications unmodified. Recently, we are witnessing a rapid adoption of containers due to their packaging benefits, high density, fast start-up and low overhead. Applications are increasingly being on-boarded to PaaS clouds in the form of application containers or appc, where they are run directly on a cloud substrate like Kubernetes or Docker Swarm. This shift in deployment practices present an opportunity to make applications aware of their cloud. In this paper, we present Paracloud framework for application containers and discuss the Paracloud interface (PaCI) for three cloud operations namely migration, auto-scaling and load-balancing.","inCitations":[],"pdfUrls":["https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-nadgowda.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/hotcloud17_slides_nadgowda.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/nadgowda"],"title":"Paracloud: Bringing Application Insight into Cloud Operations","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Cloud computing","Complex systems","Debugging","Random oracle","Scalability","Software deployment","Software performance testing","Viva Piñata: Trouble in Paradise","Web service"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["1b31c65d8b5023dabcdd18fd57241488834c7206","78ce3c4d29e325a953dd622ca2c008519acdb21d","20f3fcd714230fbcb88661ba0f623d9e6217a717","a5ade56a2f37f3f5f5b956b0c5546de9a3428537","032f1a16ad4cd815ca5cbf3dbfca2714007a1a2e","5630cbd4e0a0f00ecc2fab7001e424f23adbf0a2","04c724bad0963d1e6e7a3743be08c08810402582","d65f897b7cea2761f88411e757e9587c0282cb41","43de5136309e262007d3f14893959af69749caf8","6d04b5a9559199c483b696abac683c6d720cc61d","0e639ae7d0caae09489f7fbfb6f4739d96f626e8","5a6682af0ad2eb0e08e6f52c0101119c603b663c","8e52bc3b6b61452825599cb4bbfd5de4f8d0123d"],"s2Url":"https://semanticscholar.org/paper/830f69708281e6febdc7a1e1564187c72acde0c5","s2PdfUrl":"http://pdfs.semanticscholar.org/830f/69708281e6febdc7a1e1564187c72acde0c5.pdf","id":"830f69708281e6febdc7a1e1564187c72acde0c5","authors":[{"name":"Daniele Rogora","ids":["3379338"]},{"name":"Steffen Smolka","ids":["35815960"]},{"name":"Antonio Carzaniga","ids":["1807579"]},{"name":"Amer Diwan","ids":["1735104"]},{"name":"Robert Soulé","ids":["1762445"]}],"journalName":"","paperAbstract":"Web services and applications are complex systems. Layers of abstraction and virtualization allow flexible and scalable deployment. But they also introduce complications if one wants predictable performance and easy trouble-shooting. We propose to support the designers, testers, and maintainers of such systems by annotating system components with performance models. Our goal is to formulate annotations that can be used as oracles in performance testing, that can provide valuable guidance for debugging, and that can also inform designers by predicting the performance profile of an assembly of annotated components. We present an initial formulation of such annotations together with their concrete derivation from the execution of a complex web service.","inCitations":[],"pdfUrls":["http://www.people.usi.ch/rogord/hotcloud_pres.pdf","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-rogora.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/rogora","http://www.inf.usi.ch/faculty/soule/hotcloud2017.pdf"],"title":"Performance Annotations for Cloud Computing","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Communications protocol","Correctness (computer science)","Distributed computing","Fault injection","Fault tolerance","Lazy evaluation","Programmer","Regression testing","Replication (computing)","Software quality"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["2c13dcfdc5ea2d355a46fe326c371038a00ba7f5","51dae50f2cf78af88e8d064671b91e6e059ca7a6","cd8d45ad0f78577596779b3efc6dfd7673a7e369","3e784381615e6dbe5b9ef0885212252382f523a4","2c7bfc8d75dab44aeab34b1bf5243b192112f502","58a78af40f40dd248b5f3deb038d3d2b32788b57","4d05c293c4e31978fd8726b83899237a54f0771d","513bd1e5ec39f711f212d2105af3ee03dea4b53d","16077ad3c95a5e8f100f0b2ae7bd8f18329e917f","239ffe260e5a13c43d7131200a891194e94ff767","39cd87e8d9b0a4f9f0ad84ecfe1323f9372cdb4b","00e3756119a91432622f6982b59ecd24a1340fbe","003d5a65de0ac72daaf105ded903cb3eb88585b3","1d204d774c134dd7df97a6a83e12387efd0c7a01","1c4e5204fb912760aadb939b25908d4075d0204d","0baef8105721efa00de1c34875550bf2c99dec20","65776abca3a9ead1ea72702e5b2f3334c48b884d","ca20d2b54b1a786e21db6925cd24ce844d742ebe","382501ee3b61ba6ac7ea9c7662a5a5015ea86b14","1b4f194321f8f3219306a040c0d6d8c70dca1dcb","36222f8eb2ccf21ca345e15186cea64506581543","8dbc653d8194c257dfa198b427523191b3865464","00f7b192212078fc8afcbe504cc8caf57d8f73b5","f26d1263d92e5036e8b2e6b9eb7986da69b20170","0368d2445d3ee4205ee73da933cb8b810a89091c"],"s2Url":"https://semanticscholar.org/paper/9e070fa0b4d2eb0732415c5e4f8f6536b01af548","s2PdfUrl":"http://pdfs.semanticscholar.org/9e07/0fa0b4d2eb0732415c5e4f8f6536b01af548.pdf","id":"9e070fa0b4d2eb0732415c5e4f8f6536b01af548","authors":[{"name":"Kamala Ramasubramanian","ids":["40617487"]},{"name":"Kathryn Dahlgren","ids":["36006864"]},{"name":"Asha Karim","ids":["10164386"]},{"name":"Sanjana Maiya","ids":["24485994"]},{"name":"Sarah Borland","ids":["40072467"]},{"name":"Boaz Leskes","ids":["2913364"]},{"name":"Peter Alvaro","ids":["3064226"]}],"journalName":"","paperAbstract":"Verification is often regarded as a one-time procedure undertaken after a protocol is specified but before it is implemented. However, in practice, protocols continually evolve with the addition of new capabilities and performance optimizations. Existing verification tools are illsuited to “tracking” protocol evolution and programmers are too busy (or too lazy?) to simultaneously co-evolve specifications manually. This means that the correctness guarantees determined at verification time can erode as protocols evolve. Existing software quality techniques such as regression testing and root cause analysis, which naturally support system evolution, are poorly suited to reasoning about fault tolerance properties of a distributed system because these properties require a search of the execution schedule rather than merely replaying inputs. This paper advocates that our community should explore the intersection of testing and verification to better ensure quality for distributed software and presents our experience evolving a data replication protocol at Elastic using a novel bug-finding technology called Lineage Driven Fault Injection (LDFI) as evidence.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/ramasubramanian","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-ramasubramanian.pdf"],"title":"Growing a protocol","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Artificial neural network","Decision support system","Intrusion detection system","Network function virtualization","Network model","Proxy server","Scalability","Suricata"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["25d28bfbfd9067d9cb5a85f4af0af3a57013baf4","07a0c17f21ccc862a52cec5963246cc9e0096d2d","c1d6cec26c4f643cf985212b4ee36dc9c9217452","0a96ed079dfa8768c4aba0226dd3e014a4f61f2c","26016400563279a2b90c73d685de3e02d3d7e441","1fa77f71d42f19fb0fc54570bbbbc460cf2989c3","1ab7aa767e1779c87d822325859e47fe2986e6b2","08e802a81653c9be29a35084633364b4b2021db2","e25a07384dee2ce73e8426b7f3bff4a38eb7bf5b","7f822adf127881926c2fab2401d6e3e381bd9c11","2c7e254cfea97f0b10320d723aa906f3f5c9bed6","7260363c8b9a3e9d8f0b560c67cc49619bf06e56","10cfd82431f861efad11fdfadb85d2220def7c88","9e98d529d158e2230d722f497fbc36373eaa8583","231ba17921ebd80e95771e28dfb5082e169d5a53","5eb3ac3f7aa60a5b354c489ced10f42c8f381eb2","5b33afa07e0c428724073de51200c8b8051825c1","63a061c70da9ce645de1ad803a06f1595833befb","21b8099f8b9b7044793daa848cc109aafe201fd7","277f20ddc0e9fa593753ef2778110508372c597f","2d31ca30ad19bf85c0339f66903adc238ef65515","9289860d43896b2d174a136eb56f03bb1b05e8d9","0e1f55c288d25d7b83a17b200f9dab5ab74d43f6"],"s2Url":"https://semanticscholar.org/paper/547c382f047acb1e2f2728fec936c89dbe74d545","s2PdfUrl":"http://pdfs.semanticscholar.org/547c/382f047acb1e2f2728fec936c89dbe74d545.pdf","id":"547c382f047acb1e2f2728fec936c89dbe74d545","authors":[{"name":"Lianjie Cao","ids":["2333607"]},{"name":"Puneet Sharma","ids":["36001316"]},{"name":"Sonia Fahmy","ids":["1680676"]},{"name":"Vinay Saxena","ids":["39095207"]}],"journalName":"","paperAbstract":"Dynamic and elastic resource allocation to Virtual Network Functions (VNFs) in accordance with varying workloads is a must for realizing promised reductions in capital and operational expenses in Network Functions Virtualization (NFV). However, workload heterogeneity and complex relationships between resources allocated to a VNF and the resulting capacity makes elastic resource flexing a challenging task. We propose an NFV resource flexing system, ENVI, that uses a combination of VNF-level features and infrastructure-level features to construct a machine-learning-based decision engine for detecting resource flexing events. ENVI also extracts the dependence relationship among VNFs in deployed Service Function Chains (SFCs) to carefully plan the sequence of resource flexing steps upon scaling detection. We present preliminary results for the accuracy of ENVI’s resource flexing decision engine with two different VNFs, namely, the caching proxy Squid and the intrusion detection system Suricata. Our preliminary results show that using a combination of features to train a neural network model is a promising approach for scaling detection.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/cao","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-cao.pdf"],"title":"ENVI: Elastic resource flexing for Network function Virtualization","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Algorithm","Benchmark (computing)","Coherence (physics)","Distributed computing","Fault tolerance","Institute for Operations Research and the Management Sciences","Multi-objective optimization","Open-source software","SQL","Scalability","Strong consistency","Throughput","YCSB"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["f4912128cb16480a18ad3f6f0fa3c9dcb836cf7d","e29ac26c08189f01f23cfa154dd431dbec40ad70","082bc77513862f8d709322916f44d6fe2f2d06d7","89ab15cebdfaacda5e5dd4206410d1e492d65b18","6816c447cc4d3d945e0452564ff5d3220e1fdcab","38acf01a412d4bfeb810ab9fc5a7a1f1c8643c6b","00f7b192212078fc8afcbe504cc8caf57d8f73b5","07d847f310d5fa9138f461f0a25c5e0024f1c4af","af8b04305b92127b468a610b591b07f7897b2446","9aa0d7253574e50fe3a190ccd924433f048997dd"],"s2Url":"https://semanticscholar.org/paper/90e648f2beee1f09b6bb57d59979dbc238fdd589","s2PdfUrl":"http://pdfs.semanticscholar.org/90e6/48f2beee1f09b6bb57d59979dbc238fdd589.pdf","id":"90e648f2beee1f09b6bb57d59979dbc238fdd589","authors":[{"name":"Vaibhav Arora","ids":["13704144"]},{"name":"Tanuj Mittal","ids":["39613914"]},{"name":"Divyakant Agrawal","ids":["1724045"]},{"name":"Amr El Abbadi","ids":["1709353"]},{"name":"Xun Xue","ids":["1983944"]},{"name":"Yanan Zhi","ids":["11729408"]},{"name":"Jianfeng Zhu","ids":["3256550"]}],"journalName":"","paperAbstract":"Consensus protocols are used to provide consistency guarantees over replicated data in a distributed system, and allow a set of replicas to work together as a coherent group. Raft is a consensus protocol that is designed to be easy to understand and implement. It is equivalent to Multi-Paxos in fault-tolerance and performance. It uses a leader based approach for coordinating replication to a majority. The leader regularly informs the followers of its existence using heartbeats. All reads and writes go through the leader to ensure strong consistency. However, read-heavy workloads increase load on the leader since the followers in Raft are maintained as cold standbys. Since the algorithm itself guarantees replication to at least a majority, why not exploit this fact to serve strongly consistent reads without a leader? We propose mechanisms to use quorum reads in Raft to offload the leader and better utilize the cluster. We integrate our approach in CockroachDB, an open-source distributed SQL database which uses Raft and leader leases, to compare our proposed changes. The evaluation results with the YCSB benchmark illustrate that quorum reads result in an increased throughput of the system under read-heavy workloads, as well as lower read/write latencies.","inCitations":[],"pdfUrls":["http://www.cs.ucsb.edu/~vaibhavarora/improving-Raft-Read-Scalability-HotCloud2017","https://www.usenix.org/conference/hotcloud17/program/presentation/arora"],"title":"Leader or Majority: Why have one when you can have both? Improving Read Scalability in Raft-like consensus protocols","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Apache Spark","Critical path method","Directed acyclic graph","Field-programmable gate array","Graphics processing unit","IBM Tivoli Storage Productivity Center","Map","Scheduling (computing)"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["3a043714354fe498752b45e4cf429dbae0fb2558","8dd9dca858d1c21e495aeb5135e6ff7b9c18f37c","7406496ccb973f73f31bfdb53b5fa9c6bb44e547","25c4dcffc6bc69b0885587aff9acb9f2dd949c07","28a9dca6faeead651539c700bef413203b2b876e","70ad150169f19d782ac992cbb3da3e7906cb7c66","a14bb15298961545b83e7c7cefff0e7af79828f7","11310368999afdce94bca4316eea38216b2446c5","a43dfb040d60d0df3dbe66a52b920e05a1ac3083","f4f37512b9786dbd9980d343e47fdc41032d0ca6","374736b9132d852bfc1ae33c6d99b1441c1ad7fb","835916e7ad1231d5aa2985340b0ee543cadbb5b6","d5a537632e7a40af2d20001984e6b80862f30f34","3dff11679346f5344af1018cad57fa14cc349f2f","661b19ff987b9ed9d9252324d4a72ab1fbd588ae","2730606a9d29bb52bcc42124393460503f736d74","05dd6cb44124b8a210ac391f15ec25e68918ef22","24281c886cd9339fe2fc5881faf5ed72b731a03e","69f8cc159900e09f327f2fb6e4495782e5c336d4","0608d9937c074520cdc93cc444cc1c77039c5332","31b27a3b4ff89993eb92e8b1353edead8d5f2520","332f77fd05703c1607e3b57884ad31fb1fad0104","57c2192c290fd944d6623853b695a255d06b28f8","676e50a4d2141ae66a0d2aafcf79c8c989fcce33","590bd345ef4b8f274af3363a52b7d8f518cdc08a","8d67bac352dcd43c9c08f917ba8c4bebb444b55d","ec79422e0bfdb61d8b6d2a6ec5b2dfbcab970852","41e0ef45114deff41d92c8b235393cfe4d9a94f4","02ebdcf8200135ec0433e12e4ef2459ac740370b","1455be30b0bb364ffc4c35d2cf1ee05cfb32595f","45fcaf11eaf31228a218a24663067dab509a1031","677f55089039398ad9f23288fd89e77ff8380de3","b25744552b75c50979bbc122e48cd640f2595544","0ecad2b630fce029c1b7b577ed56e18fbba001ce","0541d5338adc48276b3b8cd3a141d799e2d40150","4954fa180728932959997a4768411ff9136aac81","4a0bb4eece00f3e9445d1a0d933422aa408ce8d1","3000e77ed7282d9fb27216f3e862a3769119d89e","1d4ac1fd1706a1ab3d93d8fa481d12332068fc30","dc69b14f1dfaa0d4d4949268bfb8a2e20135036e"],"s2Url":"https://semanticscholar.org/paper/d20581a310a735893da91328d83d86b2169a5cdc","s2PdfUrl":"http://pdfs.semanticscholar.org/d205/81a310a735893da91328d83d86b2169a5cdc.pdf","id":"d20581a310a735893da91328d83d86b2169a5cdc","authors":[{"name":"Michael Kaufmann","ids":["40487866"]},{"name":"Kornilios Kourtis","ids":["7975384"]}],"journalName":"","paperAbstract":"Heterogeneity is a growing concern for scheduling on the cloud. Hardware is increasingly heterogeneous (e.g., GPUs, FPGAs, diverse I/O devices), emphasizing the need to build schedulers that identify the internal structure of applications and utilize available hardware resources to their full potential. In this paper we present our initial efforts to build a scheduler that tackles heterogeneity (in hardware and in software) as a primary concern. Our scheduler, HCl (Heterogeneous Cluster), models applications as annotated directed acyclic graphs (DAGs), where each node represents a task. It maps tasks onto hardware nodes, also organized in DAGs. Initial results using application models based on TPC-DS queries running on Apache Spark show that HCl can improve significantly upon approaches that do not consider heterogeneity and generate schedules that approach the critical path in length.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/kaufmann","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-kaufmann.pdf"],"title":"The HCl Scheduler: Going all-in on Heterogeneity","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Amazon Web Services","Experiment","Imperative programming","Petabyte","Response time (technology)","Run time (program lifecycle phase)","Scheduling (computing)"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["6b2a6e8107642bb2137db52ecbd1805fd9632d93","1e987ea60c476bbabbb306e2e795bfb81ecc97aa","3bd6bc388dea99b023c6695bd287eac8f5d28c0a","661b19ff987b9ed9d9252324d4a72ab1fbd588ae","28a9dca6faeead651539c700bef413203b2b876e","0a68c6226e04180671a474c73fa0a2b4a154d129","1ab7aa767e1779c87d822325859e47fe2986e6b2","57c2192c290fd944d6623853b695a255d06b28f8","0558c94a094158ecd64f0d5014d3d9668054fb97","73f512de77dad7d0abe8076a856727021b9493d3","1680b56f3c0ec17992d43aa0653cba7540162887","d65f897b7cea2761f88411e757e9587c0282cb41","274a6c951c4aa82e6ef6b9f63c11f0ef66722c20","029068a33f6e9f9ba0ddfe5498a67e4c0d349d2f","510ac232c61e2b1fea3bf107dca4cde3663bc852","9da1d06e9afe37b3692a102022f561e2b6b25eaf","756d1f8f07a83f3cfc0edaa81493a9f109628e1b","6de2b1058c5b717878cce4e7e50d3a372cc4aaa6","0541d5338adc48276b3b8cd3a141d799e2d40150","0ecad2b630fce029c1b7b577ed56e18fbba001ce","187d3d8109e51b5e2c4941048b0fd6cf1d464370","88dfee10842bbfd2ebc74980ab64c1cac5753883"],"s2Url":"https://semanticscholar.org/paper/147ff168c5512b8bee49f4a1374f6f25298d95bc","s2PdfUrl":"http://pdfs.semanticscholar.org/2dcf/d4f078f3746136b76631bf9deb92ac31a69f.pdf","id":"147ff168c5512b8bee49f4a1374f6f25298d95bc","authors":[{"name":"Hao Wang","ids":["39049654"]},{"name":"Baochun Li","ids":["1707361"]}],"journalName":"","paperAbstract":"Over the past decade, we have witnessed exponential growth in the density (petabyte-level) and breadth (across geo-distributed datacenters) of data distribution. It becomes increasingly challenging but imperative to minimize the response times of data analytic queries over multiple geo-distributed datacenters. However, existing scheduling-based solutions have largely been motivated by pre-established mantras (e.g., bandwidth scarcity). Without data-driven insights into performance bottlenecks at runtime, schedulers might blindly assign tasks to workers that are suffering from unidentified bottlenecks. In this paper, we present Lube, a system framework that minimizes query response times by detecting and mitigating bottlenecks at runtime. Lube monitors geodistributed data analytic queries in real-time, detects potential bottlenecks, and mitigates them with a bottleneckaware scheduling policy. Our preliminary experiments on a real-world prototype across Amazon EC2 regions have shown that Lube can detect bottlenecks with over 90% accuracy, and reduce the median query response time by up to 33% compared to Spark’s built-in localitybased scheduler.","inCitations":["39f6da0213826be5b5ea699bcc90d602abd45edf","011b55926aecfd0baf33eb467bea5a3f0bcc2d28","75c4d189fc9607b02948cfb65b47005d142bb1e3","3f99bb743fa9576f8da7d168f3858dd0acf35e79"],"pdfUrls":["http://iqua.ece.toronto.edu/papers/haowang-hotcloud17.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/wang","https://www.usenix.org/sites/default/files/conference/protected-files/hotcloud17_slides_wang.pdf","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-wang.pdf"],"title":"Lube: Mitigating Bottlenecks in Wide Area Data Analytics","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Change detection and notification","Cloud computing","Last mile","Loader (computing)","Loading screen","Web page","Web service"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["2bce0f3e815c471702fb9db657914b6169098c2b","103eef2be0295f4a26e0d5043c95b9a5c8323975","36275d197118b73f8244828cb3d190617f924dcc","405354fa27b9535415e23e2e02c0c82bbdc7b4f7","0507b04c131f2244524fda97cd1707af5760216e","2f14cec71c4b41b36ee4b90cf900dd8aea32400c","b257f56ac990dde691e29c3697001904ff959057","5dc26364e8c64868a40ef00004fc62d12c0e4264","065e1b5f59ccd2526117be9ec98c2df9e4172bea","79a959159bb856995402b4487c1eab7404852742"],"s2Url":"https://semanticscholar.org/paper/b618f7dfbc83371c5b7790af69ba7cf13af864ab","s2PdfUrl":"http://pdfs.semanticscholar.org/b618/f7dfbc83371c5b7790af69ba7cf13af864ab.pdf","id":"b618f7dfbc83371c5b7790af69ba7cf13af864ab","authors":[{"name":"Debopam Bhattacherjee","ids":["21023008"]},{"name":"Muhammad Tirmazi","ids":["15828032"]},{"name":"Ankit Singla","ids":["34891793"]}],"journalName":"","paperAbstract":"Many popular Web services use CDNs to host their content closer to users and thus improve page load times. While this model’s success is beyond question, it has its limits: for users with poor last-mile latency even to a nearby CDN node, the many RTTs needed to fetch a Web page add up to large delays. Thus, in this work, we explore a complementary model of speeding up Web page delivery – a content gathering network (CGN), whereby users establish their own geo-distributed presence, and use these points of presence to proxy content for them. We show that deploying only 14 public cloud-based CGN nodes puts the closest node within a median RTT of merely 4.8 ms (7.2 ms) from servers hosting the top 10k (100k) most popular Web sites. The CGN node nearest to a server can thus obtain content from it rapidly, and then transmit it to the client over fewer (limited by available bandwidth) high-latency interactions using aggressive transport protocols. This simple approach reduces the median page load time across 100 popular Web sites by as much as 53%, and can be deployed immediately without depending on any changes to Web servers at an estimated cost of under $1 per month per user.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/bhattacherjee","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-bhattacherjee.pdf"],"title":"A Cloud-based Content Gathering Network","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Cloudlet","Cyber-physical system","Fault tolerance","Requirement","Scalability","Smart city","Span and div"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["b7c15322c7b9ea2ec1126f543d064c8f0d13b21f","4353966653d17069f2905c1a1578402503bc9d1b","0cb7a2c3309c15993db73a2ade9eecc7b6dbb9af","4a0bb4eece00f3e9445d1a0d933422aa408ce8d1","207c7b23ab24c813ab382f702b4f01e04e76ccef","1604854444aa3ae01d9c61de64fa21f615d6deba","0ecad2b630fce029c1b7b577ed56e18fbba001ce","23c55c3823bb9912a5e1e3918722a1f5f9011a82","3540e345c600b2a3d40c300168182d1393cab248","0d9aea55a54ccc6ab64995d70bf6ae464af25f0d","708c4c89e1788e3d9b89cce624cdec3b1f831392","163d8bb36e82fba6bc1ff53e0987e19f14cc9887","83684cc2fddbe64f8902d1ee5d5112bf95eaeffe","4bef7f35800919456555506ed112802c5680b4cd","33457f49553d918e912c2d8c54b81f4fd8a4c234","6beef89c6d38aaa26f1ddabfb0ad54d621094d6f","a7ada1bdaf9bec65338a4775e7328ead2b876863","ae75b562b7817c67e3f741b892dcfffd7d7b21cc","d12d1289d2384c2ce642f01855637b9f0519e189","9b1485630ffaaa543acff16741343437cdaae08a","24281c886cd9339fe2fc5881faf5ed72b731a03e","0d8301b36e9014763bf52fea8bcc6aec283caa0c","4e6787c38064b2c747e7cebc47728de9a97e01e2","d2525961c9cb501036553a285323d520abc37f1b","207ea0115bf4388d11f0ab4ddbfd9fd00de5e8d1"],"s2Url":"https://semanticscholar.org/paper/70493c68bc11efbb1ecde4d9f2c5bda9540de47b","s2PdfUrl":"http://pdfs.semanticscholar.org/7049/3c68bc11efbb1ecde4d9f2c5bda9540de47b.pdf","id":"70493c68bc11efbb1ecde4d9f2c5bda9540de47b","authors":[{"name":"Sandeep M. D'Souza","ids":["19241420"]},{"name":"Ragunathan Rajkumar","ids":["1720679"]}],"journalName":"","paperAbstract":"Emerging Cyber-Physical Systems (CPS) such as connected vehicles and smart cities span large geographical areas. These systems are increasingly distributed and interconnected. Hence, a hierarchy of cloudlet and cloud deployments will be key to enable scaling, while simultaneously hosting the intelligence behind these systems. Given that CPS applications are often safety-critical, existing techniques focus on reducing latency to provide real-time performance. While low latency is useful, a shared and precise notion of time is key to enabling coordinated action in distributed CPS. In this position paper, we argue for a global Quality of Time (QoT)-based architecture, centered around a shared virtualized notion of time, based on the timeline abstraction [1]. Our architecture allows applications to specify their QoT requirements, while exposing timing uncertainty to the application. The timeline abstraction with the associated knowledge of QoT enables scalable geo-distributed coordination in CPS, while providing avenues for fault tolerance and graceful degradation in the face of adversity.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/dsouza","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-dsouza.pdf"],"title":"Time-based Coordination in Geo-Distributed Cyber-Physical Systems","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Access control","Authentication","Cloud computing","Data mining","FUJITSU Cloud IaaS Trusted Public S5"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["17f19d9ec093ef82a10f1276fc53c10d4667836d","07f0e56d1c37c213cd5c617dbfba5a0549629a19","11e7e02278725d09d7c6dd67482249453ad0e58e","17886b4911ffd50d7e02a574caad34a286458b3a","708a3c03556b5bc20b5bd8e58ef2f47f6a9fc7d2","0e316f76dac185ee2d922e64d4659b2e36842196","066add40724f1022011ef4e17a39c7d66c88397c","0db9636ace0830b8b5e86b031a7a86d621446bd9","9a53abcd90ce847ba776bc933b19f77e698b020a","089895ef5f96bdb7eed9dd54f482c22350c2f30d","dbfd312448babe69654697020c8e1a5a3c5f4b29","0e148769e51b9a4d2870b8cdbe93ebb70ae64a63","0a289fd7b14345822b1acda6d82750b15d59663e","177ba72da171d8c741a08c75162d820c501a4f4c","0a9c1bbbe831ee15379f776a7ed8da7319ec4f06","5699f794183a8c2440116a29a9b3502038c1f829","06bf84f98e7dd39be8d96eb67bafbf56d61bc715","36222f8eb2ccf21ca345e15186cea64506581543"],"s2Url":"https://semanticscholar.org/paper/54314bb74466ef8eac165b622a71e670fef14eb1","s2PdfUrl":"http://pdfs.semanticscholar.org/86dd/73f59939ac2eb0f2b5bb959d27cf35cba95f.pdf","id":"54314bb74466ef8eac165b622a71e670fef14eb1","authors":[{"name":"Yan Zhai","ids":["1964738"]},{"name":"Qiang Cao","ids":["39167624"]},{"name":"Jeffrey S. Chase","ids":["1767703"]},{"name":"Michael M. Swift","ids":["9833675"]}],"journalName":"","paperAbstract":"One way to establish trust in a service is to know what code it is running. However, verified code identity is currently not possible for programs launched on a cloud by another party. We propose an approach to integrate support for code attestation—authenticated statements of code identity—into layered cloud platforms and services. To illustrate, this paper describes TapCon, an attesting container manager that provides source-based attestation and network-based authentication for containers on a trusted cloud platform incorporating new features for code attestation. TapCon allows a third party to verify that an attested container is running specific code bound securely to an identified source repository. We also show how to use attested code identity as a basis for access control. This structure enables new use cases such as joint data mining, in which two data owners agree on a safe analytics program that protects the privacy of their inputs, and then ensure that only the designated program can access their data.","inCitations":[],"pdfUrls":["https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-zhai.pdf","https://users.cs.duke.edu/~qiangcao/publications/tapcon.pdf","https://www.usenix.org/conference/hotcloud17/program/presentation/zhai"],"title":"TapCon: Practical Third-Party Attestation for the Cloud","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
