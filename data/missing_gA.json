// summary:
// the papers from the original data not found in semantic scholar
[
{"A Control-Plane Perspective on Reducing Data Access Latency in LTE Network": {"authors": ["Yuanjie Li (University of California, Los Angeles)", "Zengwen Yuan (University of California, Los Angeles)", "Chunyi Peng (Purdue University)"], "key": "MobiCom_17_004", "topics": ["Network"], "title": "A Control-Plane Perspective on Reducing Data Access Latency in LTE Network"}, "Swayam: Distributed Autoscaling to Meet SLAs of Machine Learning Inference Services with Resource Efficiency": {"award": true, "authors": ["Arpan Gujarati (MPI-SWS)", "Sameh Elnikety", "Yuxiong He (Microsoft Research)", "Kathryn S. McKinley (Google, Inc.)", "Bj\u00f6rn B. Brandenburg (MPI-SWS)"], "key": "Middleware_17_019", "topics": ["Data", "OS"], "title": "Swayam: Distributed Autoscaling to Meet SLAs of Machine Learning Inference Services with Resource Efficiency"}, "AutoMatch: An Automated Framework for Relative Performance Estimation and Workload Distribution on Heterogeneous HPC System": {"authors": ["Ahmed E. Helal", "Wu Feng", "Changhee Jung", "Yasser Y. Hanafy (Virginia Tech)"], "key": "IISWC_17_004", "topics": ["Benchmark", "HPC"], "title": "AutoMatch: An Automated Framework for Relative Performance Estimation and Workload Distribution on Heterogeneous HPC System"}, "gearshifft\u2013The FFT Benchmark Suite for Heterogeneous Platforms": {"authors": ["Peter Steinbach", "Matthias Werner"], "key": "ISC_17_011", "topics": ["HPC", "GPGPU", "Benchmark"], "title": "gearshifft\u2013The FFT Benchmark Suite for Heterogeneous Platforms"}, "MeNa: A Memory Navigator for Modern Hardware in Scale-out Environment": {"authors": ["Hosein Mohammadi Makrani", "Houman Homayoun (George Mason University)"], "key": "IISWC_17_001", "topics": ["Benchmark", "Architecture"], "title": "MeNa: A Memory Navigator for Modern Hardware in Scale-out Environment"}, "Layered Architecture for Erasure-Coded Consistent Distributed Storage": {"authors": ["Kishori Konwar (MIT)", "Prakash Narayana Moorthy", "Nancy Lynch (MIT)", "Muriel Medard (MIT)"], "key": "PODC_17_007", "topics": ["Storage", "Concurrency"], "title": "Layered Architecture for Erasure-Coded Consistent Distributed Storage"}, "An X10 based Distributed Streaming Graph Database Engine": {"authors": ["Miyuru Dayarathna (WSO2 Inc.)", "Sathya Bandara (University of Moratuwa)", "Nandula Jayamaha (University of Moratuwa)", "Mahen Herath (University of Moratuwa)", "Achala Madhushan (University of Moratuwa)", "Sanath Jayasena (University of Moratuwa)", "Toyotaro Suzumura (IBM T.J. Watson Research Center)"], "key": "HiPC_17_012", "topics": ["Concurrency", "Data", "DB"], "title": "An X10 based Distributed Streaming Graph Database Engine"}, "Compressive Millimeter-Wave Sector Selection in Off-the-Shelf IEEE 802.11ad Devices": {"authors": ["Daniel Steinmetzer", "Daniel Wegemer", "Matthias Schulz (TU Darmstadt)", "Joerg Widmer (IMDEA Networks Institute)", "Matthias Hollick (TU Darmstadt)"], "key": "CoNEXT_17_006", "topics": ["Network"], "title": "Compressive Millimeter-Wave Sector Selection in Off-the-Shelf IEEE 802.11ad Devices"}, "\"Disk|Crypt|Net: rethinking the stack for high performance video streaming\"": {"authors": ["Ilias Marinos", "Robert N. M. Watson (University of Cambridge)", "Mark Handley (University College London)", "Randall Ray Stewart (Netflix Inc.)"], "key": "SIGCOMM_17_026", "topics": ["Network", "OS", "Storage", "Security"], "title": "\"Disk|Crypt|Net: rethinking the stack for high performance video streaming\""}, "A Performance-Centric Approach to Complex Decisions Support": {"authors": ["Ate Penders", "Gregor Pavlin", "Ana Lucia Varbanescu", "Henk Sips"], "key": "ICPE_17_013", "topics": ["Benchmark"], "title": "A Performance-Centric Approach to Complex Decisions Support"}, "Block-space GPU Mapping for Embedded Sierpinski Gasket Fractals": {"authors": ["Crist\u00f3bal A. Navarro (Universidad Austral de Chile)", "Raimundo Vega (Universidad Austral de Chile)", "Benjam\u00edn Bustos (University of Chile)", "Nancy Hitschfeld (University of Chile)"], "key": "HPCC_17_056", "topics": ["GPGPU", "HPC"], "title": "Block-space GPU Mapping for Embedded Sierpinski Gasket Fractals"}, "An NlogN Parallel Fast Direct Solver for Kernel Metrices": {"authors": ["Chenhan D. Yu", "William March", "George Biros"], "key": "IPDPS_17_087", "topics": ["Concurrency", "HPC"], "title": "An NlogN Parallel Fast Direct Solver for Kernel Metrices"}, "Model-Driven Sparse CP Decomposition for High-Order Tensors": {"authors": ["Jiajia Li", "Jee W. Choi", "Ioakeim Perros", "Jimeng Sun", "Richard Vuduc"], "key": "IPDPS_17_103", "topics": ["HPC"], "title": "Model-Driven Sparse CP Decomposition for High-Order Tensors"}, "UGuide \u2013 User-Guided Discovery of FD-Detectable Errors": {"authors": ["Saravanan Thirumuruganathan", "Laure Berti-Equille", "Mourad Ouzzani", "Jorge-Arnulfo Quiane-Ruiz", "Nan Tang"], "key": "SIGMOD_17_063", "topics": ["DB"], "title": "UGuide \u2013 User-Guided Discovery of FD-Detectable Errors"}, "Are We There Yet? On RPKI's Deployment and Security": {"authors": ["Yossi Gilad", "Avichai Cohen", "Amir Herzberg", "Michael Schapira", "Haya Shulman"], "content_tags": {"manual": ["simulation", "experience", "position", "data"]}, "key": "NDSS_17_044", "topics": ["Security"], "title": "Are We There Yet? On RPKI's Deployment and Security"}, "Heaps Don't Lie: Countering Unsoundness with Heap Snapshots": {"artifact": true, "authors": ["Neville Grech", "George Fourtounis", "Adrian Francalanza", "Yannis Smaragdakis"], "key": "OOPSLA_17_025", "topics": ["Compilers"], "title": "Heaps Don't Lie: Countering Unsoundness with Heap Snapshots"}, "\"Hardware is the new software\"": {"authors": ["Andrew Baumann (Microsoft Research)"], "key": "HotOS_17_029", "topics": ["OS", "Architecture"], "title": "\"Hardware is the new software\""}, "Tux\u00b2: Distributed Graph Computation for Machine Learning": {"authors": ["Wencong Xiao", "Jilong Xue", "Youshan Miao", "Zhen Li", "Cheng Chen", "Ming Wu", "Wei Li", "Lidong Zhou"], "key": "NSDI_17_038", "topics": ["Data"], "title": "Tux\u00b2: Distributed Graph Computation for Machine Learning"}, "Red Shift: Procedural Shift-Reduce Parsing": {"authors": ["Nicolas Laurent"], "key": "SLE_17_022", "topics": ["Compilers"], "title": "Red Shift: Procedural Shift-Reduce Parsing"}, "LAMMPS\u2019PPPM Long-Range Solver for the Second Generation Xeon Phi": {"authors": ["William McDoniel", "Markus H\u00f6hnerbach", "Rodrigo Canales", "Ahmed E. Ismail", "Paolo Bientinesi"], "key": "ISC_17_004", "topics": ["HPC"], "title": "LAMMPS\u2019PPPM Long-Range Solver for the Second Generation Xeon Phi"}, "NICScatter: Backscatter as a Covert Channel in Mobile Device": {"authors": ["Zhice Yang (ShanghaiTech University & Hong Kong University of Science and Technology)", "Qianyi Huang (Hong Kong University of Science and Technology)", "Qian Zhang (Hong Kong University of Science and Technology)"], "key": "MobiCom_17_027", "topics": ["Network", "Security"], "title": "NICScatter: Backscatter as a Covert Channel in Mobile Device"}, "Ignore or Comply? On Breaking Symmetry in Consensus": {"authors": ["Petra Berenbrink (University of Hamburg)", "Andrea Clementi (Universit\u00e0 di Roma Tor Vergata)", "Robert Els\u00e4sser (University of Salzburg)", "Peter Kling (University of Hamburg)", "Frederik Mallmann-Trenn (\u00c9cole normale sup\u00e9rieure)", "Emanuele Natale (Max-Planck-Institut)"], "key": "PODC_17_030", "topics": ["Concurrency"], "title": "Ignore or Comply? On Breaking Symmetry in Consensus"}, "No-Match Attacks and Robust Partnering Definitions \u2014 Defining Trivial Attacks for Security Protocols is Not Trivial": {"authors": ["Yong Li", "Sven Sch\u00e4ge"], "key": "CCS_17_084", "topics": ["Security"], "title": "No-Match Attacks and Robust Partnering Definitions \u2014 Defining Trivial Attacks for Security Protocols is Not Trivial"}, "Synthesizing Mapping Relationship Using Table Corpus": {"authors": ["Yue Wang", "Yeye He"], "key": "SIGMOD_17_049", "topics": ["DB"], "title": "Synthesizing Mapping Relationship Using Table Corpus"}, "Demystifying the Characteristics of 3D-Stacked Memories: A Case Study for Hybrid Memory Cub": {"authors": ["Ramyad Hadidi", "Bahar Asgari", "Burhan Ahmad Mudassar", "Saibal Mukhopadhyay", "Sudhakar Yalamanchili", "Hyesoon Kim (Georgia Tech)"], "key": "IISWC_17_007", "topics": ["Benchmark", "Architecture"], "title": "Demystifying the Characteristics of 3D-Stacked Memories: A Case Study for Hybrid Memory Cub"}, "An Exploratory Study of the State of Practice of Performance Testing in Java-Based Open Source Projects": {"authors": ["Philipp Leitner", "Cor-Paul Bezemer"], "key": "ICPE_17_027", "topics": ["Benchmark", "Compilers"], "title": "An Exploratory Study of the State of Practice of Performance Testing in Java-Based Open Source Projects"}, "Canopus: A Scalable, Massively Parallel Consensus Protocol": {"authors": ["Sajjad Rizvi", "Bernard Wong", "Srinivasan Keshav (University of Waterloo)"], "key": "CoNEXT_17_005", "topics": ["Cloud", "Concurrency", "Network"], "title": "Canopus: A Scalable, Massively Parallel Consensus Protocol"}, "Needle : Leveraging Program Analysis to Analyze and Extract Accelerators from Whole Programs": {"authors": ["Snehasish Kumar", "Nick Sumner", "Vijaylakshmi Srinivasan", "Steven Margerm", "Arrvindh Shriraman"], "key": "HPCA_17_043", "topics": ["GPGPU"], "title": "Needle : Leveraging Program Analysis to Analyze and Extract Accelerators from Whole Programs"}, "Minding the Billions: Ultra-wideband Localization for Deployed RFIDs": {"authors": ["Yunfei Ma (Massachusetts Institute of Technology)", "Nicholas Selby (Massachusetts Institute of Technology)", "Fadel Adib (Massachusetts Institute of Technology)"], "key": "MobiCom_17_019", "topics": ["Network"], "title": "Minding the Billions: Ultra-wideband Localization for Deployed RFIDs"}, "\"The Mobile Server Problem\"": {"authors": ["Bj\u00f6rn Feldkord", "Friedhelm Meyer auf der Heide"], "key": "SPAA_17_019", "topics": ["Concurrency"], "title": "\"The Mobile Server Problem\""}, "Watch Me, but Don\u2019t Touch Me! Contactless Control Flow Monitoring via Electromagnetic Emanations": {"authors": ["Yi Han", "Sriharsha Etigowni", "Hua Liu", "Saman A. Zonouz", "Athina Petropulu"], "key": "CCS_17_068", "topics": ["Security"], "title": "Watch Me, but Don\u2019t Touch Me! Contactless Control Flow Monitoring via Electromagnetic Emanations"}, "ConTutto - A Novel FPGA-based Prototyping Platform Enabling Innovation in the Memory Subsystem of a Server Class Processor": {"authors": ["Bharat Sukhwani (IBM Research)", "Thomas Roewer (IBM Research)", "Charles L. Haymes (IBM Research)", "Kyu-Hyoun Kim (IBM Research)", "Adam J. McPadden (IBM)", "Daniel M. Dreps (IBM)", "Dean Sanner (IBM)", "Jan Van Lunteren (IBM Research)", "Sameh Asaad (IBM Research)"], "key": "MICRO_17_003", "topics": ["Architecture", "GPGPU"], "title": "ConTutto - A Novel FPGA-based Prototyping Platform Enabling Innovation in the Memory Subsystem of a Server Class Processor"}, "BestConfig: Tapping the Performance Potential of Systems via Configuration Adjustment": {"authors": ["Yuqing Zhu", "Jianxun Liu", "Mengying Guo", "Yungang Bao (Institute of Computing Technology, Chinese Academy of Sciences)", "Kunpeng Song", "Zhuoyue Liu (Huawei)"], "key": "SOCC_17_025", "topics": ["Benchmark"], "title": "BestConfig: Tapping the Performance Potential of Systems via Configuration Adjustment"}, "Flash Drive Lifespan is a Problem": {"authors": ["Tao Zhang (University of North Carolina at Chapel Hill)", "Aviad Zuck (Technion - Israel Institute of Technology)", "Donald E. Porter (University of North Carolina at Chapel Hill)", "Dan Tsafrir (Technion - Israel Institute of Technology)"], "key": "HotOS_17_009", "topics": ["Storage", "OS"], "title": "Flash Drive Lifespan is a Problem"}, "Taming Performance Hotspots in Cloud Storage with Dynamic  Load Redistribution": {"award": true, "authors": ["Ridwan Rashid Noel (University of Texas)", "Palden \u00dfLama (University of Texas US)"], "key": "CLOUD_17_006", "topics": ["Cloud", "Storage"], "title": "Taming Performance Hotspots in Cloud Storage with Dynamic  Load Redistribution"}, "One Process to Reap Them All: Garbage Collection As A Service": {"authors": ["Ahmed Hussein", "Mathias Payer", "Tony Hosking", "Christopher A. Vick"], "key": "VEE_17_016", "topics": ["VM"], "title": "One Process to Reap Them All: Garbage Collection As A Service"}, "AutoPerf: Automated Load Testing and Resource Usage Pro\ufb01ling of Multi-Tier Internet Applications": {"award": true, "authors": ["Varsha Apte", "T. V. S. Viswanath", "Akhilesh Kommireddy", "Devidas Gawali", "Anshul Gupta"], "key": "ICPE_17_010", "topics": ["Benchmark", "Cloud"], "title": "AutoPerf: Automated Load Testing and Resource Usage Pro\ufb01ling of Multi-Tier Internet Applications"}, "Unleashing the Power of GPU for Physically Based Rendering via Dynamic Ray Shuffling": {"authors": ["Yashuai Lv (Astronautical Engineering University)", "Libo Huang (National University of Defense Technology)", "Li Shen (National University of Defense Technology)", "Zhiying Wang (National University of Defense Technology)"], "key": "MICRO_17_042", "topics": ["Architecture", "GPGPU"], "title": "Unleashing the Power of GPU for Physically Based Rendering via Dynamic Ray Shuffling"}, "Project Snowflake: Non-blocking Safe Manual Memory Management for .NET": {"authors": ["Matthew Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Jonathan Balkind", "Aaron Blankstein"], "key": "OOPSLA_17_039", "topics": ["Compilers", "Concurrency"], "title": "Project Snowflake: Non-blocking Safe Manual Memory Management for .NET"}, "Atomic In-Place Updates for Transactional Non-Volatile Main Memories": {"authors": ["Amirsaman Memaripour (UCSD)", "Anirudh Badam", "Amar Phanishayee (Microsoft)", "Yanqi Zhou (Princeton)", "Ramnatthan Alagappan (U. of Wisconsin, Maddison)", "Karin Strauss (Microsoft)", "Steven Swanson (UC San Diego)"], "key": "EuroSys_17_036", "topics": ["Concurrency", "Storage"], "title": "Atomic In-Place Updates for Transactional Non-Volatile Main Memories"}, "SafeFS: A Modular Architecture for Secure User-Space File Systems (One FUSE to rule them all)": {"award": true, "authors": ["Rog\u00e9rio Pontes (INESC TEC & University of Minho)", "Dorian Burihabwa (University of Neuchatel, Switzerland)", "Francisco Maia (INESC TEC & University of Minho)", "Joao Paulo (INESC TEC & University of Minho)", "Valerio Schiavoni (University of Neuchatel, Switzerland)", "Pascal Felber (University of Neuchatel, Switzerland)", "Hugues Mercier (University of Neuchatel, Switzerland)", "Rui Oliveira (INESC TEC & University of Minho)"], "key": "SYSTOR_17_011", "topics": ["Security", "Storage"], "title": "SafeFS: A Modular Architecture for Secure User-Space File Systems (One FUSE to rule them all)"}, "\"Matrix Multiplication, a Li le Faster\"": {"authors": ["Elaye Karstadt", "Oded Schwartz"], "key": "SPAA_17_023", "topics": ["HPC", "Concurrency"], "title": "\"Matrix Multiplication, a Li le Faster\""}, "Tool Demonstration: A development environment for the Alf language within the MagicDraw UML tool": {"authors": ["Ed Seidewitz"], "key": "SLE_17_014", "topics": ["Compilers"], "title": "Tool Demonstration: A development environment for the Alf language within the MagicDraw UML tool"}, "PCSsampler: Sample based, Private-state Cluster Scheduling": {"authors": ["Chunliang Hao (Institute of Software, Chinese Academy of Science, China)", "Jie Shen (Imperial College London, United Kingdom)", "Celia Chen (University of Souther California, USA)", "Heng Zhang (Institute of Software, Chinese Academy of Science, China)", "Yanjun Wu (Institute of Software, Chinese Academy of Science, China)", "Mingshu Li (Institute of Software, Chinese Academy of Science, China)"], "key": "CCGrid_17_071", "topics": ["OS", "Cloud"], "title": "PCSsampler: Sample based, Private-state Cluster Scheduling"}, "Data breaches, phishing, or malware? Understanding the risks of stolen credentials": {"authors": ["Kurt Thomas", "Frank Li", "Ali Zand", "Jake Barrett", "Juri Ranieri", "Luca Invernizzi", "Yarik Markov", "Oxana Comanescu", "Vijay Eranti", "Angelika Moscicki", "Dan Margolis", "Vern Paxson", "Elie Bursztein"], "key": "CCS_17_089", "topics": ["Security"], "title": "Data breaches, phishing, or malware? Understanding the risks of stolen credentials"}, "Optimizations of Two Compute-bound Scientific Kernels on SW26010 Many-core Processor": {"authors": ["James Lin", "Zhigeng Xu", "Akira Nukada", "Naoya Maruyama", "Satoshi Matsuoka"], "key": "ICPP_17_044", "topics": ["HPC", "Concurrency"], "title": "Optimizations of Two Compute-bound Scientific Kernels on SW26010 Many-core Processor"}, "A Novel Implementation of 2D3V Particle-In-Cell (PIC) Algorithm for Kepler GPU Architectures": {"authors": ["Harshil Shah (DA-IICT, Gandhinagar)", "Siddharth Kamaria (DA-IICT, Gandhinagar)", "Riddhesh Markandeya (DA-IICT, Gandhinagar)", "Miral Shah (DA-IICT, Gandhinagar)", "Bhaskar Chaudhury (DA-IICT, Gandhinagar)"], "key": "HiPC_17_015", "topics": ["HPC", "GPGPU"], "title": "A Novel Implementation of 2D3V Particle-In-Cell (PIC) Algorithm for Kepler GPU Architectures"}, "The Space Complexity of Fault Tolerant Register Emulations": {"authors": ["Gregory Chockler (Royal Holloway, University of London)", "Alexander Spiegelman (Technion)"], "key": "PODC_17_009", "topics": ["Concurrency"], "title": "The Space Complexity of Fault Tolerant Register Emulations"}, "\"Kernel Conditional Clustering\"": {"authors": ["Xiao He", "Thomas Gumbsch", "Damian Roqueiro", "Karsten Borgwardt"], "key": "ICDM_17_035", "topics": ["Data"], "title": "\"Kernel Conditional Clustering\""}, "A Configurable Rule-Based Classful Token Bucket Filter Network Request Scheduler for the Lustre File System": {"authors": ["Yingjin Qian (DataDirect Networks)", "Xi Li (DataDirect Networks)", "Shuichi Ihara (DataDirect Networks)", "Lingfang Zeng (Johannes Gutenberg University Mainz)", "J\u00fcrgen Kaiser (Johannes Gutenberg University Mainz)", "Tim S\u00fc\u00df (Johannes Gutenberg University Mainz)", "Andr\u00e9 Brinkmann (Johannes Gutenberg University Mainz)"], "key": "SC_17_007", "topics": ["Storage", "HPC"], "title": "A Configurable Rule-Based Classful Token Bucket Filter Network Request Scheduler for the Lustre File System"}, "G-Scalar: Cost-Effective Generalized Scalar Execution Architecture fo Power-Efficient GPUs": {"authors": ["Zhenhong Liu", "Syed Gilani", "Murali Annavaram", "Nam Sung Kim"], "key": "HPCA_17_046", "topics": ["Architecture", "Energy", "GPGPU"], "title": "G-Scalar: Cost-Effective Generalized Scalar Execution Architecture fo Power-Efficient GPUs"}, "Accelerating Seismic Simulations Using the Intel Xeon Phi Knight sLanding Processor": {"authors": ["Josh Tobin", "Alexander Breuer", "Alexander Heinecke", "Charles Yount", "Yifeng Cui"], "key": "ISC_17_008", "topics": ["HPC"], "title": "Accelerating Seismic Simulations Using the Intel Xeon Phi Knight sLanding Processor"}, "Efficient Computation of Top-k Frequent Terms over Spatial-Temporal Ranges": {"authors": ["Pritom Ahmed", "Mahbub Hasan", "Abhijith Kashyap", "Vagelis Hristidis", "Vassilis J. Tsotras"], "key": "SIGMOD_17_071", "topics": ["DB"], "title": "Efficient Computation of Top-k Frequent Terms over Spatial-Temporal Ranges"}, "Simple, fast and safe manual memory management": {"authors": ["Piyus Kedia", "Manuel Costa", "Matthew Parkinson", "Kapil Vaswani", "Dimitrios Vytiniotis"], "key": "PLDI_17_038", "topics": ["Compilers"], "title": "Simple, fast and safe manual memory management"}, "\"Tessellating Stencils\"": {"authors": ["Liang Yuan (Chinese Academy of Sciences)", "Yunquan Zhang (Chinese Academy of Sciences)", "Peng Guo (Chinese Academy of Sciences)", "Shan Huang (Chinese Academy of Sciences)"], "key": "SC_17_049", "topics": ["HPC", "Concurrency"], "title": "\"Tessellating Stencils\""}, "Collaboratively Improving Topic Discovery and Word Embeddings by Coordinating Global and Local Conte": {"authors": ["Guangxu Xun (State University of New York at Buffalo)", "Yaliang Li (State University of New York at Buffalo)", "Jing Gao (State University of New York at Buffalo)", "Aidong Zhang (State University of New York at Buffalo)"], "key": "KDD_17_028", "topics": [], "title": "Collaboratively Improving Topic Discovery and Word Embeddings by Coordinating Global and Local Conte"}, "Accelerating a burst buffer via user-level I/O isolation.": {"award": true, "authors": ["Jaehyun Han", "Donghun Koo", "Glenn K. Lockwood", "Jaehwan Lee", "Hyeonsang Eom", "Soonwook Hwang"], "key": "Cluster_17_025", "topics": ["Concurrency"], "title": "Accelerating a burst buffer via user-level I/O isolation."}, "Efficiently Enumerating Minimal Triangulation": {"authors": ["Nofar Carmeli", "Batya Kenig", "Benny Kimelfeld"], "key": "PODS_17_017", "topics": ["DB"], "title": "Efficiently Enumerating Minimal Triangulation"}, "SoK: Science, Security, and the Elusive Goal of Security as a Scientific Pursuit": {"authors": ["Cormac Herley (Microsoft Research, USA)", "Paul C. van Oorschot (Carleton University, Canada)"], "key": "SP_17_045", "topics": ["Security"], "title": "SoK: Science, Security, and the Elusive Goal of Security as a Scientific Pursuit"}, "How to Learn Klingon Without Dictionary: Detection and Measurement of Black Keywords Used by Underground Economy": {"authors": ["Hao Yang (Tsinghua University)", "Xiulin Ma (Tsinghua University)", "Kun Du (Tsinghua University)", "Zhou Li (IEEE Member)", "Haixin Duan (Tsinghua University)", "Xiaodong Su (Baidu Inc.)", "Guang Liu (Baidu Inc.)", "Zhifeng Geng (Baidu Inc.)", "Jianping Wu (Tsinghua University)"], "key": "SP_17_019", "topics": ["Security"], "title": "How to Learn Klingon Without Dictionary: Detection and Measurement of Black Keywords Used by Underground Economy"}, "Unimem: Runtime Data Management on Non-Volatile Memory-Based Heterogeneous Main Memory": {"authors": ["Kai Wu (University of California, Merced)", "Yingchao Huang (University of California, Merced)", "Dong Li (University of California, Merced)"], "key": "SC_17_055", "topics": ["Storage", "OS"], "title": "Unimem: Runtime Data Management on Non-Volatile Memory-Based Heterogeneous Main Memory"}, "Furion: Engineering High-Quality Immersive Virtual Reality on Today's Mobile Device": {"authors": ["Zeqi Lai (Tsinghua University)", "Y. Charlie Hu (Purdue University)", "Yong Cui (Tsinghua University)", "Linhui Sun (Tsinghua University)", "Ningwei Dai (Tsinghua University)"], "key": "MobiCom_17_031", "topics": ["Network"], "title": "Furion: Engineering High-Quality Immersive Virtual Reality on Today's Mobile Device"}, "keybin Key-based Binning for Distributed Clustering": {"authors": ["Xinyu Chen", "Trilce Estrada", "Jeremy Benson"], "key": "Cluster_17_060", "topics": ["Concurrency"], "title": "keybin Key-based Binning for Distributed Clustering"}, "Configtron: Tackling network diversity with heterogeneous configurations.": {"authors": ["Usama Naseer (duke.edu)", "Theophilus Benson (duke.edu)"], "key": "HotCloud_17_016", "topics": ["Cloud", "Network"], "title": "Configtron: Tackling network diversity with heterogeneous configurations."}, "Rivulet: Fault-Tolerant Platform for Smart-Home Applications": {"authors": ["Masoud Saeida Ardekani (Samsung Research)", "Rayman Preet Singh (Amazon)", "Nitin Agrawal (Samsung Research)", "Douglas B. Terry (Amazon)", "Riza O. Suminto (University of Chicago)"], "key": "Middleware_17_014", "topics": [], "title": "Rivulet: Fault-Tolerant Platform for Smart-Home Applications"}, "Off-Road Performance Modeling \u2014 How to Deal with Segmented Data?": {"authors": ["Kashif Ilyas", "Alexandru Calotoiu", "Felix Wolf"], "key": "EuroPar_17_032", "topics": ["Benchmark"], "title": "Off-Road Performance Modeling \u2014 How to Deal with Segmented Data?"}, "Lightweight Provenance Service for High Performance Computing": {"authors": ["Dong Dai", "Yong Chen (Texas Tech University)", "Philip Carns", "Jonathan Jenkins", "Robert B. Ross (Argonne National Laboratory)"], "key": "PACT_17_010", "topics": ["HPC"], "title": "Lightweight Provenance Service for High Performance Computing"}, "Transaction Repair for Mult-Version Concurrency Control": {"authors": ["Mohammad Dashti", "Sachin Basil John", "Amir Shaikhha", "Christoph Koch"], "key": "SIGMOD_17_001", "topics": ["DB", "Concurrency"], "title": "Transaction Repair for Mult-Version Concurrency Control"}, "A Probabilistic Reformulation of Memory-Based Collaborative Filtering \u2013 Implications on Popularity Biases": {"authors": ["Roc\u00edo Ca\u00f1amares (Universidad Aut\u00f3noma de Madrid)", "Pablo Castells (Universidad Aut\u00f3noma de Madrid)"], "key": "SIGIR_17_022", "topics": ["Data"], "title": "A Probabilistic Reformulation of Memory-Based Collaborative Filtering \u2013 Implications on Popularity Biases"}, "Secure Page Fusion with VUsion": {"authors": ["Marco Oliverio (Vrije Universiteit Amsterdam and University of Calabria)", "Kaveh Razavi", "Herbert Bos", "Cristiano Giuffrida (Vrije Universiteit Amsterdam)"], "key": "SOSP_17_032", "topics": ["Security", "OS"], "title": "Secure Page Fusion with VUsion"}, "Dancing with Wolves: Towards Practical Event-driven VMM Monitoring": {"authors": ["Liang Deng", "Peng Liu", "Jun Xu", "Ping Chen", "Qingkai Zeng"], "key": "VEE_17_007", "topics": ["VM"], "title": "Dancing with Wolves: Towards Practical Event-driven VMM Monitoring"}, "Rein: Taming Tail Latency in Key Value Stores via Multiget Scheduling": {"authors": ["Waleed Reda (Universite\u0301 catholique de Louvain & Royal Institute of Technology (KTH))", "Lalith Suresh (VMware Research)", "Sean Braithwaite (SoundCloud)", "Marco Canini (KAUST)", "Dejan Kostic\u0107 (Royal Institute of Technology KTH)"], "key": "EuroSys_17_030", "topics": ["Concurrency"], "title": "Rein: Taming Tail Latency in Key Value Stores via Multiget Scheduling"}, "An Open Platform for Experimentation with Commercial Mobile Broadband Networks": {"authors": ["\u00d6zg\u00fc Alay (Simula Research Laboratory)", "Andra Lutu (Simula Research Laboratory)", "Miguel Pe\u00f3n-Quir\u00f3s (IMDEA Networks Institute)", "Vincenzo Mancuso (IMDEA Networks Institute)", "Thomas Hirsch (Celerway Communications)", "Kristian Evensen (Celerway Communications)", "Audun Hansen (Celerway Communications)", "Stefan Alfredsson (Karlstad University)", "Jonas Karlsson (Karlstad University)", "Anna Brunstrom (Karlstad University)", "Ali Safari Khatouni (Politecnico di Torino)", "Marco Mellia (Politecnico di Torino)", "Marco Ajmone Marsan (IMDEA Networks Institute & Politecnico di Torino)"], "key": "MobiCom_17_005", "topics": ["Network", "Benchmark"], "title": "An Open Platform for Experimentation with Commercial Mobile Broadband Networks"}, "Cardiac Scan: A Non-contact and Continuous Heart-based User Authentication System": {"authors": ["Feng Lin (University at Buffalo SUNY)", "Chen Song (University at Buffalo SUNY)", "Yan Zhuang (University at Buffalo SUNY)", "Wenyao Xu (University at Buffalo SUNY)", "Changzhi Li (Texas Tech University)", "Kui Ren (University at Buffalo SUNY)"], "key": "MobiCom_17_024", "topics": ["Security"], "title": "Cardiac Scan: A Non-contact and Continuous Heart-based User Authentication System"}, "High-Performance Incremental SVM Learning on Intel\u00aeXeon Phi\u2122 Processors": {"authors": ["Dipanjan Sengupta", "Yida Wang", "Narayanan Sundaram", "Theodore L. Willke"], "key": "ISC_17_007", "topics": ["HPC", "Data"], "title": "High-Performance Incremental SVM Learning on Intel\u00aeXeon Phi\u2122 Processors"}, "Checking Open-Source License Violation and 1-day Security Risk at Large Scale": {"authors": ["Ruian Duan", "Ashish Bijlani", "Meng Xu", "Taesoo Kim", "Wenke Lee"], "key": "CCS_17_134", "topics": ["Security"], "title": "Checking Open-Source License Violation and 1-day Security Risk at Large Scale"}, "FPGA Based Data Partitioning": {"authors": ["Kaan Kara", "Jana Giceva", "Gustavo Alonso"], "key": "SIGMOD_17_028", "topics": ["Architecture", "DB"], "title": "FPGA Based Data Partitioning"}, "Neurosurgeon: Collaborative Intelligence Between Cloud and the Mobile Edge": {"authors": ["Yiping Kang", "Johann Hauswald", "Cao Gao", "Austin Rovinski", "Trevor Mudge", "Jason Mars", "Lingjia Tang"], "key": "ASPLOS_17_042", "topics": ["Cloud"], "title": "Neurosurgeon: Collaborative Intelligence Between Cloud and the Mobile Edge"}, "Don't cry over spilled records: Memory elasticity of data-parallel applications and its application to cluster scheduling": {"authors": ["C\u0103lin Iorgulescu (EPFL)", "Florin Dinu (EPFL)", "Aunn Raza (NUST Pakistan)", "Wajih Ul Hassan (UIUC)", "Willy Zwaenepoel (EPFL)"], "key": "ATC_17_008", "topics": ["Concurrency", "OS"], "title": "Don't cry over spilled records: Memory elasticity of data-parallel applications and its application to cluster scheduling"}, "An Efficient MPI/OpenMP Parallelization of the Hartree-Fock Method for the Second Generation of Intel Xeon Phi Processor": {"authors": ["Vladimir A. Mironov (Lomonosov Moscow State University)", "Alexander Moskovsky (RSC Technologies)", "Kristopher Keipert (Iowa State University)", "Michael D\u2019mello (Intel)", "Mark Gordon (Iowa State University)", "Yuri Alexeev (ANL)"], "key": "SC_17_038", "topics": ["GPGPU", "Concurrency", "HPC"], "title": "An Efficient MPI/OpenMP Parallelization of the Hartree-Fock Method for the Second Generation of Intel Xeon Phi Processor"}, "A Domain-Specific Controlled English Language for Automated Regulatory Compliance": {"artifact": true, "authors": ["Suman Roychoudhury", "Sagar Sunkle", "Deepali Kholkar", "Vinay Kulkarni"], "key": "SLE_17_004", "topics": ["Compilers"], "title": "A Domain-Specific Controlled English Language for Automated Regulatory Compliance"}, "Determining Application-specific Peak Power and Energy Requirements for Ultra-low-power Processors": {"award": true, "authors": ["Hari Cherupalli (University of Minnesota)", "Henry Duwe (University of Illinois)", "Weidong Ye (University of Illinois)", "Rakesh Kumar (University of Illinois)", "John Sartori (University of Minnesota)"], "key": "ASPLOS_17_001", "topics": ["Energy", "Architecture"], "title": "Determining Application-specific Peak Power and Energy Requirements for Ultra-low-power Processors"}, "Hierarchical Self-Tuning of Concurrency, Resource Units in Data-Analytics Frameworks": {"authors": ["Gil Lee", "Jose Fortes"], "key": "ICAC_17_005", "topics": ["OS", "Data"], "title": "Hierarchical Self-Tuning of Concurrency, Resource Units in Data-Analytics Frameworks"}, "\"Life Beyond Set Agreement\"": {"authors": ["David Yu Cheng Chan (University of Toronto)", "Vassos Hadzilacos (University of Toronto)", "Sam Toueg (University of Toronto)"], "key": "PODC_17_031", "topics": ["Concurrency"], "title": "\"Life Beyond Set Agreement\""}, "Deep and Shallow convections in Atmosphere Models on Intel Xeon Phi Coprocessor Systems": {"authors": ["Srinivasan Ramesh (University of Oregon)", "Sathish Vadhiyar (Indian Institute of Science)", "Ravi Nanjundiah (Indian Institute of Science)", "Vinaychandran Pn (Indian Institute of Science)"], "key": "HPCC_17_042", "topics": ["HPC", "GPGPU"], "title": "Deep and Shallow convections in Atmosphere Models on Intel Xeon Phi Coprocessor Systems"}, "Fine-Grained DRAM: Energy Efficient DRAM for Extreme Bandwidth Systems": {"authors": ["Mike O'Connor (NVIDIA / UT-Austin)", "Niladrish Chatterjee (NVIDIA)", "Donghyuk Lee (NVIDIA)", "John Wilson (NVIDIA)", "Aditya Agrawal (NVIDIA)", "Stephen Keckler (NVIDIA / UT-Austin)", "William Dally (NVIDIA / Stanford)"], "key": "MICRO_17_007", "topics": ["Architecture", "Energy"], "title": "Fine-Grained DRAM: Energy Efficient DRAM for Extreme Bandwidth Systems"}, "Model-based Scheduling for Stream Processing Systems": {"authors": ["Yidan Wang (RMIT)", "Zahir Tari (RMIT)", "M.Reza Hoseinyfarahabady (University of Sydney)", "Albert Y. Zomaya (University of Sydney)"], "key": "HPCC_17_028", "topics": ["OS", "Network"], "title": "Model-based Scheduling for Stream Processing Systems"}, "Towards Network Intrusion Detection at ISP Scale": {"authors": ["Azeem Aqil", "Karim Khalil", "Ahmed O. F. Atya", "Evangelos E. Papalexakis", "Srikanth Krishnamurthy (ucr.edu University of California, Riverside ucr.edu)", "Trent Jaeger (The Pennsylvania State University)", "K. K. Ramakrishnan (University of California, Riverside ucr.edu)", "Paul Yu", "Ananthram Swami (U.S. Army Research Laboratory)"], "key": "CoNEXT_17_026", "topics": ["Security", "Network"], "title": "Towards Network Intrusion Detection at ISP Scale"}, "Provably E icient Scheduling of Cache-Oblivious Wavefront Algorithms": {"authors": ["Rezaul Chowdhury", "Pramod Ganapathi", "Yuan Tang", "Jesmin Jahan Tithi"], "key": "SPAA_17_030", "topics": ["OS", "HPC"], "title": "Provably E icient Scheduling of Cache-Oblivious Wavefront Algorithms"}, "QUILTS: Multidimensional Data Partitioning Based on Query Aware, Skew Tolerant Space Filling Curves": {"authors": ["Shoji Nishimura", "Haruo Yokota"], "key": "SIGMOD_17_016", "topics": ["DB"], "title": "QUILTS: Multidimensional Data Partitioning Based on Query Aware, Skew Tolerant Space Filling Curves"}, "How Unique is Your .onion? An Analysis of the Fingerprintability of Tor Onion Services": {"authors": ["Rebekah Overdorf", "Marc Juarez", "Gunes Acar", "Rachel Greenstadt", "Claudia Diaz"], "key": "CCS_17_125", "topics": ["Security"], "title": "How Unique is Your .onion? An Analysis of the Fingerprintability of Tor Onion Services"}, "\"Compute Caches\"": {"authors": ["Shaizeen Aga", "Supreet Jeloka", "Arun Subramaniyan", "Satish Narayanasamy", "David Blaauw", "Reetuparna Das"], "key": "HPCA_17_036", "topics": ["Architecture", "Data", "GPGPU"], "title": "\"Compute Caches\""}, "Work as a Team or Individual: Characterizing System-level Impacts of Main Memory Partitioning": {"authors": ["Jung Ho Ahn", "Daejin Jung", "Eojin Lee", "Jongwook Chung", "Sukhan Lee (Seoul National University)", "Sheng Li (Intel)"], "key": "IISWC_17_022", "topics": ["Benchmark"], "title": "Work as a Team or Individual: Characterizing System-level Impacts of Main Memory Partitioning"}, "Cooperative Path-ORAM for Effective Memory Bndwidth Sharing in Server Settings": {"authors": ["Rujia Wang", "Youtao Zhang", "Jun Yang"], "key": "HPCA_17_023", "topics": ["Architecture", "Cloud"], "title": "Cooperative Path-ORAM for Effective Memory Bndwidth Sharing in Server Settings"}, "A New File System I/O Mode for Ef\ufb01cient User-level Caching": {"authors": ["Jiwoong Park (Seoul National University, Korea)", "Cheolgi Min (Seoul National University, Korea)", "Heonyoung Yeom (Seoul National University, Korea)"], "key": "CCGrid_17_032", "topics": ["Storage", "DB", "OS"], "title": "A New File System I/O Mode for Ef\ufb01cient User-level Caching"}, "Design and Evaluation of AWGR-based Photonic NoC Architectures for 2.5D Inegrated High Performance Computing Systems": {"authors": ["Paolo Grani", "Venkatesh Akella", "Roberto Proietti", "S. J. Ben Yoo"], "key": "HPCA_17_020", "topics": ["Network", "Architecture", "HPC"], "title": "Design and Evaluation of AWGR-based Photonic NoC Architectures for 2.5D Inegrated High Performance Computing Systems"}, "Social Fusion: Integrating Twitter, Instagram for Event Monitoring": {"authors": ["Prasanna Giridhar", "Shiguang Wang", "Tarek Abdelzaher", "Lance Kaplan", "Tanvir Al Amin"], "key": "ICAC_17_014", "topics": [], "title": "Social Fusion: Integrating Twitter, Instagram for Event Monitoring"}, "AWL: Turning Spatial Aliasing From Foe to Friend for Accurate WiFi Device Localization": {"authors": ["Zhe Chen", "Zhongmin Li", "Xu Zhang", "Guorong Zhu", "Yuedong Xu (Fudan University)", "Jie Xiong (Singapore Management University)", "Xin Wang (Fudan University)"], "key": "CoNEXT_17_002", "topics": ["Network"], "title": "AWL: Turning Spatial Aliasing From Foe to Friend for Accurate WiFi Device Localization"}, "Ethical issues of research using datasets of illicit origin": {"authors": ["Daniel R. Thomas", "Sergio Pastrana", "Alice Hutchings", "Richard Clayton", "Alastair Beresford (University of Cambridge)"], "key": "IMC_17_027", "topics": [], "title": "Ethical issues of research using datasets of illicit origin"}, "Why Do Programs Have Heavy Tails": {"authors": ["Hiroshi Sasaki", "Fang-Hsiang Su (Columbia University)", "Teruo Tanimoto (Kyushu University)", "Simha Sethumadhavan (Columbia University)"], "key": "IISWC_17_020", "topics": ["Benchmark"], "title": "Why Do Programs Have Heavy Tails"}, "Living in Parallel Realities \u2014 Co-Existing Schema Versions with a Bidirectional Database Evolution Language": {"authors": ["Kai Herrmann", "Hannes Voigt", "Andreas Behrend", "Jonas Rausch", "Wolfgang Lehner"], "key": "SIGMOD_17_085", "topics": ["DB"], "title": "Living in Parallel Realities \u2014 Co-Existing Schema Versions with a Bidirectional Database Evolution Language"}, "Could Blobs Enable Storage-Based Convergence Between HPC and Big Data?": {"authors": ["Pierre Matri", "Yevhen Alforov", "\u00c1lvaro Brandon", "Michael Kuhn", "Philip Carns", "Thomas Ludwig"], "key": "Cluster_17_008", "topics": ["Storage", "HPC", "Data"], "title": "Could Blobs Enable Storage-Based Convergence Between HPC and Big Data?"}, "Cryptanalysis of Comparable Encryption in SIGMOD\u201916": {"authors": ["Caleb Horst", "Ryo Kikuchi", "Keita Xagawa"], "key": "SIGMOD_17_030", "topics": ["DB", "Security"], "title": "Cryptanalysis of Comparable Encryption in SIGMOD\u201916"}, "Efficient Public Trace-and-Revoke from Standard Assumptions": {"authors": ["Shweta Agrawal", "Sanjay Bhattacherjee", "Duong Hieu Phan", "Damien Stehle", "Shota Yamada"], "key": "CCS_17_142", "topics": ["Security"], "title": "Efficient Public Trace-and-Revoke from Standard Assumptions"}, "Prophet: Precise QoS Prediction on Non-Preemptive Accelerators to Improve Utilization in Warehouse Scale Computers": {"authors": ["Quan Chen (Shanghai Jiao Tong University)", "Hailong Yang (Beihang University)", "Minyi Guo (Shanghai Jiao Tong University)", "Ram Srivatsa Kannan (University of Michigan - Ann Arbor)", "Jason Mars", "Lingjia Tang (University of Michigan - Ann Arbor)"], "key": "ASPLOS_17_002", "topics": ["Architecture", "Cloud"], "title": "Prophet: Precise QoS Prediction on Non-Preemptive Accelerators to Improve Utilization in Warehouse Scale Computers"}, "HeteroOS - OS design for heterogeneous memory management in datacenter": {"authors": ["Sudarsun Kannan (wisc)", "Ada Gavrilovska (gatech)", "Vishal Gupta (vmware)", "Karsten Schwan (gatech)"], "key": "ISCA_17_040", "topics": ["Architecture", "OS", "GPGPU"], "title": "HeteroOS - OS design for heterogeneous memory management in datacenter"}, "Swarm-based Incast Congestion Control in datacenter Serving Web Applications": {"authors": ["Haoyu Wang", "Haiying Shen", "Guoxin Liu"], "key": "SPAA_17_003", "topics": ["Concurrency", "Network"], "title": "Swarm-based Incast Congestion Control in datacenter Serving Web Applications"}, "A Robust Tabu Search Heuristic for VM Consolidation under Demand Uncertainity in Virtualized Datacenters": {"authors": ["Robayet Nasim (Karlstad University, Sweden)", "Andreas Kassler (Karlstad University, Sweden)"], "key": "CCGrid_17_024", "topics": ["VM", "Cloud"], "title": "A Robust Tabu Search Heuristic for VM Consolidation under Demand Uncertainity in Virtualized Datacenters"}, "No! Not Another Deep Learning Framework": {"authors": ["Linh Nguyen", "Peifeng Yu", "Mosharaf Chowdhury (University of Michigan)"], "key": "HotOS_17_005", "topics": ["Data", "OS"], "title": "No! Not Another Deep Learning Framework"}, "The lock holder and the lock waiter pre-emption problems: nip them in the bud using informed spinlocks (I-Spinlocks)": {"authors": ["Boris Teabe", "Vlad Nitu", "Alain Tchana", "Daniel Hagimont (IRIT/Toulouse University, France)"], "key": "EuroSys_17_004", "topics": ["Concurrency"], "title": "The lock holder and the lock waiter pre-emption problems: nip them in the bud using informed spinlocks (I-Spinlocks)"}, "PReP: Path-Based Relevance from a Probabilistic Perspective in Heteogeneous Information Networks": {"authors": ["Yu Shi (Dept. of Computer Science, University of Illinois at Urbana-Champaign)", "Po-Wei Chan (Dept. of Computer Science, University of Illinois at Urbana-Champaign)", "Honglei Zhuang (Dept. of Computer Science, University of Illinois at Urbana-Champaign)", "Huan Gui (Dept. of Computer Science, University of Illinois at Urbana-Champaign)", "Jiawei Han (Dept. of Computer Science, University of Illinois at Urbana-Champaign)"], "key": "KDD_17_057", "topics": [], "title": "PReP: Path-Based Relevance from a Probabilistic Perspective in Heteogeneous Information Networks"}, "Deep Priority Conflicts in the Wild - A Pilot Study": {"artifact": true, "authors": ["Lu\u00eds Eduardo de Souza Amorim", "Michael J. Steindorfer", "Eelco Visser"], "key": "SLE_17_006", "topics": ["Compilers"], "title": "Deep Priority Conflicts in the Wild - A Pilot Study"}, "Landmark indexing for scalable evaluation of label-constrained reachability queries": {"authors": ["Lucien Valstar", "George H. L. Fletcher", "Yuichi Yoshida"], "key": "SIGMOD_17_037", "topics": ["DB"], "title": "Landmark indexing for scalable evaluation of label-constrained reachability queries"}, "\"Routing Keys\" Zahavi": {"award": true, "authors": ["Asaf Samuel", "Eitan Zahavi", "Isaac Keslassy"], "key": "HotI_17_002", "topics": ["Network", "HPC"], "title": "\"Routing Keys\" Zahavi"}, "BatchDB: Efficient Isolated Execution of Hybrid OLTP+OLAP Workloads": {"authors": ["Darko Makreshanski", "Jana Giceva", "Claude Barthels", "Gustavo Alonso"], "key": "SIGMOD_17_041", "topics": ["DB"], "title": "BatchDB: Efficient Isolated Execution of Hybrid OLTP+OLAP Workloads"}, "Following the Blind Seer \u2014 Creating Better Performance Models Using Less Information": {"authors": ["Patrick Reisert", "Alexandru Calotoiu", "Sergei Shudler", "Felix Wolf"], "key": "EuroPar_17_006", "topics": ["Benchmark"], "title": "Following the Blind Seer \u2014 Creating Better Performance Models Using Less Information"}, "\"Towards O(1) Memory\"": {"authors": ["Michael M. Swift (University of Wisconsin--Madison)"], "key": "HotOS_17_024", "topics": ["OS", "Architecture"], "title": "\"Towards O(1) Memory\""}, "HACL*: A Verified Modern Cryptographic Library": {"authors": ["Jean-Karim Zinzindohou\u00e9", "Karthikeyan Bhargavan", "Jonathan Protzenko", "Benjamin Beurdouche"], "key": "CCS_17_111", "topics": ["Security"], "title": "HACL*: A Verified Modern Cryptographic Library"}, "Synchronized-by-Default Concurrency for Shared Memory Systems": {"artifact": true, "authors": ["Martin B\u00e4ttig", "Thomas R. Gross"], "key": "PPoPP_17_006", "topics": ["Concurrency"], "title": "Synchronized-by-Default Concurrency for Shared Memory Systems"}, "Scalable Kernel Density Classification using Threshold-Based Pruning": {"authors": ["Edward Gan", "Peter Bailis"], "key": "SIGMOD_17_074", "topics": ["DB"], "title": "Scalable Kernel Density Classification using Threshold-Based Pruning"}, "Towards \u201cFull Containerization\u201d in Containerized Network Function Virtualization": {"authors": ["Yang Hu (University of Florida)", "Tao Li (NSF/University of Florida)"], "key": "ASPLOS_17_032", "topics": ["VM", "Network"], "title": "Towards \u201cFull Containerization\u201d in Containerized Network Function Virtualization"}, "I Can\u2019t Believe It\u2019s Not Causal! Scalable Causal Consistency with No Slowdown Cascades": {"authors": ["Syed Akbar Mehdi", "Cody Littley", "Natacha Crooks", "Lorenzo Alvisi", "Nathan Bronson", "Wyatt Lloyd"], "key": "NSDI_17_027", "topics": ["DB", "Network"], "title": "I Can\u2019t Believe It\u2019s Not Causal! Scalable Causal Consistency with No Slowdown Cascades"}, "Leakage-Abuse Attacks on Order-Revealing Encryption": {"authors": ["Paul Grubbs (Cornell Tech)", "Kevin Sekniqi (Cornell University)", "Vincent Bindschaedler (UIUC)", "Muhammad Naveed (USC)", "Thomas Ristenpart (Cornell Tech)"], "key": "SP_17_026", "topics": ["Security"], "title": "Leakage-Abuse Attacks on Order-Revealing Encryption"}, "Virtual Textual Model Composition for Supporting Maintenance and Aspect-Orientation": {"artifact": true, "authors": ["Robert Bill", "Patrick Neubauer", "Manuel Wimmer"], "key": "SLE_17_023", "topics": ["Compilers"], "title": "Virtual Textual Model Composition for Supporting Maintenance and Aspect-Orientation"}, "PipeLayer: A Pipelined ReRAM-Based Accelerator for Deep Larning": {"authors": ["Linghao Song", "Xuehai Qian", "Hai Li", "Yiran Chen"], "key": "HPCA_17_041", "topics": ["Architecture", "Data"], "title": "PipeLayer: A Pipelined ReRAM-Based Accelerator for Deep Larning"}, "Cloud Standards in Comparison: Are New Security Frameworks  Improving Cloud Security?": {"authors": ["Carlo Di Giulio (University of Illinois US)", "Read Sprabery (University of Illinois)", "Charles Kamhoua (Air Force Research Laboratory)", "Kevin Kwiat (Air Force Research Laboratory)", "Roy Campbell (University of Illinois)", "Masooda Bashir (University of Illinois)"], "key": "CLOUD_17_007", "topics": ["Cloud", "Security"], "title": "Cloud Standards in Comparison: Are New Security Frameworks  Improving Cloud Security?"}, "Melissa: Large Scale In Transit Global Sensitivity Analysis Avoiding Intermediate Files": {"authors": ["Th\u00e9ophile Terraz (French Institute for Research in Computer Science and Automation INRIA)", "Alejandro Ribes (EDF France)", "Yvan Fournier (EDF France)", "Bertrand Iooss (EDF France)", "Bruno Raffin (French Institute for Research in Computer Science and Automation INRIA)"], "key": "SC_17_060", "topics": ["HPC"], "title": "Melissa: Large Scale In Transit Global Sensitivity Analysis Avoiding Intermediate Files"}, "Contention-Aware Kernel-Assisted MPI Collectives for Multi/Many-core Systems": {"award": true, "authors": ["Sourav Chakraborty", "Hari Subramoni", "Dhabaleswar K. Panda"], "key": "Cluster_17_002", "topics": ["Network", "OS", "Concurrency"], "title": "Contention-Aware Kernel-Assisted MPI Collectives for Multi/Many-core Systems"}, "Robust Top-k Multi-class SVM for Visual Category Recognition": {"authors": ["Xiaojun Chang (CMU Carnegie Mellon University)", "Yao-Liang Yu (University of Waterloo)", "Yi Yang (University of Technology Sydney)"], "key": "KDD_17_018", "topics": [], "title": "Robust Top-k Multi-class SVM for Visual Category Recognition"}, "MOSAIC: Processing a Trillion-Edge Graph on a Single Commodity Machine": {"award": true, "authors": ["Steffen Maass", "Changwoo Min", "Sanidhya Kashyap", "Woonhak Kang", "Mohan Kumar", "Taesoo Kim (Georgia Institute of Technology)"], "key": "EuroSys_17_015", "topics": ["Benchmark", "Concurrency"], "title": "MOSAIC: Processing a Trillion-Edge Graph on a Single Commodity Machine"}, "Families of Graph Algorithms : An SSSP Case Study": {"authors": ["Thejaka Amila Kanewala", "Marcin Zalewski", "Andrew Lumsdaine"], "key": "EuroPar_17_020", "topics": ["HPC"], "title": "Families of Graph Algorithms : An SSSP Case Study"}, "Reducing network congestion and global communication bottlenecks during aggregation on Torus and Dragonfly topologies for writing hierarchical data": {"authors": ["Sidharth Kumar (SCI, University of Utah)", "Duong Hoang (SCI, University of Utah)", "Steve Petruzza (SCI, University of Utah and University of Rome \u201cTor Vergata\u201d)", "John Edwards (Idaho State university)", "Valerio Pascucci (SCI, University of Utah)"], "key": "HiPC_17_041", "topics": ["Network", "Architecture", "Storage"], "title": "Reducing network congestion and global communication bottlenecks during aggregation on Torus and Dragonfly topologies for writing hierarchical data"}, "Information Retrieval Meets Game Theory: The Ranking Competition Between Documents\u2019 Authors": {"authors": ["Nimrod Raifer (Technion)", "Fiana Raiber (Yahoo Research & Technion)", "Moshe Tennenholtz (Technion)", "Oren Kurland (Technion)"], "key": "SIGIR_17_047", "topics": ["Data"], "title": "Information Retrieval Meets Game Theory: The Ranking Competition Between Documents\u2019 Authors"}, "GASPI/GPI In-Memory Check Pointing Library": {"authors": ["Valeria Bartsch", "Rui Machado", "Mirko Rahn", "Dirk Merten", "Franz-Josef Pfreundt"], "key": "EuroPar_17_047", "topics": ["Compilers"], "title": "GASPI/GPI In-Memory Check Pointing Library"}, "Distributed Learning Dynamics in Social Groups": {"authors": ["L. Elisa Celis (EPFL)", "Peter Krafft (MIT)", "Nisheeth Vishnoi (EPFL)"], "key": "PODC_17_005", "topics": ["Concurrency"], "title": "Distributed Learning Dynamics in Social Groups"}, "SLO-aware Colocation of Data Center Tasks Based on Instantaneous Resource Requirements": {"authors": ["Pawel Janus", "Krzysztof Rzadca (University of Warsaw, Poland)"], "key": "SOCC_17_019", "topics": ["OS", "Cloud"], "title": "SLO-aware Colocation of Data Center Tasks Based on Instantaneous Resource Requirements"}, "Template For Implementing Fast Lock-free Trees Using HTM": {"authors": ["Trevor Brown (University of Toronto)"], "key": "PODC_17_026", "topics": ["Concurrency"], "title": "Template For Implementing Fast Lock-free Trees Using HTM"}, "An Empirical Study of Computation-Intensive Loops for Identifying and Classifying Loop Kernels": {"authors": ["Masatomo Hashimoto", "Masaaki Terai", "Toshiyuki Maeda", "Kazuo Minami"], "key": "ICPE_17_026", "topics": ["Benchmark", "HPC"], "title": "An Empirical Study of Computation-Intensive Loops for Identifying and Classifying Loop Kernels"}, "What Are You Known For? Learning User Topical Profiles with Implicit and Explicit Footprints": {"authors": ["Cheng Cao (Texas A&M University)", "Hancheng Ge (Texas A&M University)", "Haokai Lu (Texas A&M University)", "Xia Hu (Texas A&M University)", "James Caverlee (Texas A&M University)"], "key": "SIGIR_17_074", "topics": ["Data"], "title": "What Are You Known For? Learning User Topical Profiles with Implicit and Explicit Footprints"}, "Enabling Workflow Aware Scheduling on HPC systems": {"authors": ["Gonzalo P. Rodrigo Alvarez (umu.se)", "Erik Elmroth (umu.se)", "P-O Ostberg (umu.se)", "Lavanya Ramakrishnan (lbl.gov)"], "key": "HPDC_17_001", "topics": ["HPC", "OS"], "title": "Enabling Workflow Aware Scheduling on HPC systems"}, "Flatten and Conquer": {"artifact": true, "authors": ["Parosh Aziz Abdulla", "Mohamed Faouzi Atig", "Phi-Diep Bui", "Yu-Fang Chen", "Lukas Holik", "Ahmed Rezine", "Philipp Ruemmer"], "key": "PLDI_17_019", "topics": ["Compilers"], "title": "Flatten and Conquer"}, "Dealing with performance unpredictability in Asymmetric Multicore Processor cloud": {"authors": ["Boris Teabe", "Alain Tchana", "Daniel Hagimont"], "key": "EuroPar_17_017", "topics": ["Benchmark", "Cloud", "Concurrency"], "title": "Dealing with performance unpredictability in Asymmetric Multicore Processor cloud"}, "Quality and Cost of Deterministic Network Calculus \u2013 Design and Evaluation of an Accurate and Fast Analysis": {"authors": ["Steffen Bondorf (Distributed Computer Systems DISCO Lab University of Kaiserslautern, Germany)", "Paul Nikolaus (Distributed Computer Systems DISCO Lab, University of Kaiserslautern, Germany)", "Jens B. Schmitt (Distributed Computer Systems DISCO Lab, University of Kaiserslautern, Germany)"], "key": "SIGMETRICS_17_024", "topics": ["Network"], "title": "Quality and Cost of Deterministic Network Calculus \u2013 Design and Evaluation of an Accurate and Fast Analysis"}, "BPTree: an L2 heavy hitters algorithm using constant memory": {"authors": ["Vladimir Braverman", "Stephen Chestnut", "Nikita Ivkin", "Jelani Nelson", "Zhengyu Wang", "David Woodruff"], "key": "PODS_17_011", "topics": ["DB"], "title": "BPTree: an L2 heavy hitters algorithm using constant memory"}, "The Complexity of Ontology-Based Data Access with OWL2QL and Bounded Treewidth Queries": {"authors": ["Meghyn Bienvenu", "Stanislav Kikot", "Roman Kontchakov", "Vladimir Podolskii", "Vladislav Ryzhikov", "Michael Zakharyaschev"], "key": "PODS_17_005", "topics": ["DB"], "title": "The Complexity of Ontology-Based Data Access with OWL2QL and Bounded Treewidth Queries"}, "Browser Fingerprinting via OS and Hardware Level Features": {"authors": ["Yinzhi Cao", "Song Li", "Erik Wijmans"], "content_tags": {"manual": ["system", "positive", "open", "experiment", "reproduction"]}, "key": "NDSS_17_012", "topics": ["Security", "OS", "Architecture"], "title": "Browser Fingerprinting via OS and Hardware Level Features"}, "On Moving Averages, Histograms and Time-Dependent Rates for Online Measurement": {"authors": ["Michael Menth", "Frederik Hauser"], "key": "ICPE_17_009", "topics": ["Benchmark", "Network"], "title": "On Moving Averages, Histograms and Time-Dependent Rates for Online Measurement"}, "\"Similarity Forests\"": {"authors": ["Saket Sathe (IBM T. J. Watson Research Center)", "Charu Aggarwal (IBM T. J. Watson Research Center)"], "key": "KDD_17_035", "topics": [], "title": "\"Similarity Forests\""}, "Revisiting Reading Rate with Mobility: Rate-Adaptive Reading in COTS RFID System": {"authors": ["Qiongzheng Lin", "Lei Yang (The Hong Kong Polytechnic University)", "Huanyu Jia", "Chunhui Duan", "Yunhao Liu (Tsinghua University)"], "key": "CoNEXT_17_018", "topics": ["Network"], "title": "Revisiting Reading Rate with Mobility: Rate-Adaptive Reading in COTS RFID System"}, "Fast Networks and Slow Memories: A Mechanism for Mitigating Bandwidth  Mismatches": {"award": true, "authors": ["Timo Schneider (intel, eth)", "Mario Flajslik (intel)", "James Dinan (intel)", "Torsten Hoefler (eth)", "Keith D. Underwood (intel)"], "key": "HotI_17_003", "topics": ["Network", "Storage"], "title": "Fast Networks and Slow Memories: A Mechanism for Mitigating Bandwidth  Mismatches"}, "Bounding laconic proof systems by solving CSPs in parallel.": {"authors": ["Jason Li", "Ryan O'Donnell"], "key": "SPAA_17_001", "topics": ["Concurrency"], "title": "Bounding laconic proof systems by solving CSPs in parallel."}, "Optimized Honest-Majority MPC for Malicious Adversaries - Breaking the 1 Billion-Gate Per Second Barrier": {"authors": ["Toshinori Araki (NEC)", "Assi Barak (Bar-Ilan University)", "Jun Furukawa (NEC)", "Tamar Lichter (Queens College - CUNY)", "Yehuda Lindell (Bar-Ilan University)", "Ariel Nof (Bar-Ilan University)", "Kazuma Ohara (NEC)", "Adi Watzman (The Weizmann Institute of Science)", "Or Weinstein (Bar-Ilan University)"], "key": "SP_17_034", "topics": ["Security"], "title": "Optimized Honest-Majority MPC for Malicious Adversaries - Breaking the 1 Billion-Gate Per Second Barrier"}, "Anomaly Detection with Robust Deep Auto-encoders": {"authors": ["Chong Zhou (Worcester Polytechnic Institute)", "Randy Paffenroth (Worcester Polytechnic Institute)"], "key": "KDD_17_049", "topics": [], "title": "Anomaly Detection with Robust Deep Auto-encoders"}, "One-Way Wave Equation Migration at Scale on GPUs using Directive-Based Programming": {"authors": ["Kshitij Mehta", "Maxime Hugues", "Oscar Hernandez", "Henri Calandra", "David E. Bernholdt"], "key": "IPDPS_17_023", "topics": ["HPC", "GPGPU"], "title": "One-Way Wave Equation Migration at Scale on GPUs using Directive-Based Programming"}, "Securing HPC: Development of a Low Cost, Open Source, Multi-Factor Authentication Infrastructure": {"authors": ["Cyrus Proctor (Texas Advanced Computing Center, University of Texas)", "Patrick Storm (Texas Advanced Computing Center, University of Texas)", "Matthew R. Hanlon (Texas Advanced Computing Center, University of Texas)", "Nathaniel Mendoza (Texas Advanced Computing Center, University of Texas)"], "key": "SC_17_034", "topics": ["HPC", "Security"], "title": "Securing HPC: Development of a Low Cost, Open Source, Multi-Factor Authentication Infrastructure"}, "Increasing Interposer Utilization: A Scalable, Energy Efficient and High Bandwidth Multichip Integration Solution": {"authors": ["M Meraj Ahmed", "Naseef Mansoor", "Sayed Ashraf Mamun", "Amlan Ganguly"], "key": "IGSC_17_005", "topics": ["Energy", "Architecture"], "title": "Increasing Interposer Utilization: A Scalable, Energy Efficient and High Bandwidth Multichip Integration Solution"}, "WatchIT: Who Watches Your IT Guy?": {"authors": ["Noam Shalev", "Idit Keidar (Technion)", "Yaron Weinsberg (Microsoft)", "Yosef Moatti", "Elad Ben-Yehuda (IBM Research)"], "key": "SOSP_17_031", "topics": ["Security", "OS"], "title": "WatchIT: Who Watches Your IT Guy?"}, "Scheduling Multithreaded Applications onto Heterogeneous Composite Cores Architectures": {"authors": ["Hossein Sayadi", "Houman Homayoun"], "key": "IGSC_17_007", "topics": ["OS", "Concurrency", "Energy"], "title": "Scheduling Multithreaded Applications onto Heterogeneous Composite Cores Architectures"}, "Carousel: Scalable Traffic Shaping at End-Hosts": {"authors": ["Ahmed Saeed (Georgia Institute of Technology)", "Nandita Dukkipati", "Vytautas Valancius", "Vinh The Lam", "Carlo Contavalli", "Amin Vahdat (Google Inc.)"], "key": "SIGCOMM_17_019", "topics": ["Network"], "title": "Carousel: Scalable Traffic Shaping at End-Hosts"}, "Augmenting Amdahl's Second Law: A Theoretical Model to Build Cost-Effective Balanced HPC Infrastructure for Data-Driven Science": {"authors": ["Arghya Kusum Das", "Jaeki Hong", "Sayan Goswami", "Richard Platania", "Kisung Lee", "Wooseok Chang", "Seung-Jong Park", "Ling Liu"], "key": "CLOUD_17_021", "topics": ["HPC", "Cloud", "Data"], "title": "Augmenting Amdahl's Second Law: A Theoretical Model to Build Cost-Effective Balanced HPC Infrastructure for Data-Driven Science"}, "Weld: A Common Runtime for High Performance Data Analysis": {"authors": ["Shoumik Palkar", "James J. Thomas", "Anil Shanbhag", "Deepak Narayanan", "Holger Pirk", "Malte Schwarzkopt", "Saman Amarasinghe", "Matei Zaharia"], "key": "CIDR_17_027", "topics": ["Data"], "title": "Weld: A Common Runtime for High Performance Data Analysis"}, "\"Repairing Sequential Consistency in C/C++11\"": {"award": true, "authors": ["Ori Lahav", "Viktor Vafeiadis", "Jeehoon Kang", "Chung-Kil Hur", "Derek Dreyer"], "key": "PLDI_17_034", "topics": ["Compilers"], "title": "\"Repairing Sequential Consistency in C/C++11\""}, "Energy Efficiency across Programming Languages: How does energy, time, and memory relate?": {"authors": ["Rui H. Pereira", "Marco Couto", "Francisco Ribeiro", "Rui Rua", "J\u00e1come Cunha", "Jo\u00e3o Paulo Fernandes", "Jo\u00e3o Saraiva"], "key": "SLE_17_017", "topics": ["Compilers", "Energy"], "title": "Energy Efficiency across Programming Languages: How does energy, time, and memory relate?"}, "The Effect of DNS on Tor's Anonymity": {"authors": ["Benjamin Greschbach", "Tobias Pulls", "Laura M. Roberts", "Philipp Winter", "Nick Feamster"], "key": "NDSS_17_047", "topics": ["Security", "Cloud"], "title": "The Effect of DNS on Tor's Anonymity"}, "Engaged or Frustrated? Disambiguating Emotional State in Search": {"authors": ["Ashlee Edwards (University of North Carolina at Chapel Hill)", "Diane Kelly (University of Tennessee)"], "key": "SIGIR_17_013", "topics": ["Data"], "title": "Engaged or Frustrated? Disambiguating Emotional State in Search"}, "ReFlex: Remote Flash == Local Flash": {"authors": ["Ana Klimovic (Stanford University)", "Heiner Litz (Stanford University)", "Christos Kozyrakis (Stanford University)"], "key": "ASPLOS_17_024", "topics": ["Storage", "Network"], "title": "ReFlex: Remote Flash == Local Flash"}, "UNO: Unifying Host and Smart NIC Offload for Flexible Packet Processing": {"authors": ["Yanfang Le (University of Wisconsin-Madison)", "Hyunseok Chang", "Sarit Mukherjee", "Limin Wang (Nokia Bell Labs)", "Aditya Akella", "Michael M. Swift (University of Wisconsin-Madison)", "T. V. Lakshman (Nokia Bell Labs)"], "key": "SOCC_17_037", "topics": ["Network"], "title": "UNO: Unifying Host and Smart NIC Offload for Flexible Packet Processing"}, "Practical Persistence for Multi-threaded Applications": {"authors": ["Terry Ching-Hsiang Hsu (Purdue University, Hewlett Packard Labs)", "Helge Bru\u0308gner", "Indrajit Roy", "Kimberly Keeton (Hewlett Packard Labs)", "Patrick Eugster (Purdue University, TU Darmstadt)"], "key": "EuroSys_17_025", "topics": ["Concurrency", "DB"], "title": "Practical Persistence for Multi-threaded Applications"}, "Latch-free Synchronization in Database Systems: Silver Bullet or Fool\u2019s Gold?": {"authors": ["Jose M. Faleiro", "Daniel J. Abadi"], "key": "CIDR_17_021", "topics": ["DB", "Concurrency"], "title": "Latch-free Synchronization in Database Systems: Silver Bullet or Fool\u2019s Gold?"}, "Using Time Without Clocks via Zigzag Causality": {"authors": ["Asa Dan (Technion)", "Rajit Manohar (Yale)", "Yoram Moses (Technion)"], "key": "PODC_17_022", "topics": ["Concurrency"], "title": "Using Time Without Clocks via Zigzag Causality"}, "Deep Learning with Edge Computing for Localization of Epileptogenicity using Multimodal rs-fMRI, EEG Big Data": {"authors": ["Mohammad-Parsa Hosseini", "Tuyen Tran", "Dario Pompili", "Kost Elisevich", "Hamid Soltanian-Zadeh"], "key": "ICAC_17_011", "topics": ["Data", "Network"], "title": "Deep Learning with Edge Computing for Localization of Epileptogenicity using Multimodal rs-fMRI, EEG Big Data"}, "Exploiting Vector and Multicore Parallelism for Recursive Data- and Task-Parallel Programs": {"authors": ["Bin Ren", "Sriram Krishnamoorthy", "Kunal Agrawal", "Milind Kulkarni"], "key": "PPoPP_17_017", "topics": ["Concurrency"], "title": "Exploiting Vector and Multicore Parallelism for Recursive Data- and Task-Parallel Programs"}, "ASLR on the Line:  Practical Cache Attacks on the MMU": {"authors": ["Ben Gras", "Kaveh Razavi", "Erik Bosman", "Herbert Bos", "Cristiano Giuffrida"], "key": "NDSS_17_060", "topics": ["Security", "Architecture"], "title": "ASLR on the Line:  Practical Cache Attacks on the MMU"}, "Why Is MPI So Slow? Analyzing the Fundamental Limits in Implementing MPI-3.1": {"authors": ["Ken Raffenetti (ANL)", "Abdelhalim Amer (ANL)", "Lena Oden (ANL)", "Charles Archer (Intel)", "Wesley Bland (Intel)", "Hajime Fujita (Intel)", "Yanfei Guo (ANL)", "Tomislav Janjusic (Mellanox Technologies)", "Dmitry Durnov (Intel)", "Michael Blocksome (Intel)", "Min Si (ANL)", "Sangmin Seo (ANL)", "Akhil Langer (Intel)", "Gengbin Zheng (Intel)", "Masamichi Takagi (RIKEN)", "Paul Coffman (ANL)", "Jithin Jose (Intel)", "Sayantan Sur (Intel)", "Alexander Sannikov (Intel)", "Sergey Oblomov (Intel)", "Michael Chuvelev (Intel)", "Masayuki Hatanaka (RIKEN)", "Xin Zhao (Mellanox Technologies)", "Paul Fischer (University of Illinois)", "Thilina Rathnayake (University of Illinois)", "Matt Otten (Cornell University)", "Misun Min (ANL)", "Pavan Balaji (ANL)"], "key": "SC_17_057", "topics": ["HPC", "Network"], "title": "Why Is MPI So Slow? Analyzing the Fundamental Limits in Implementing MPI-3.1"}, "\"quantum operating systems\"": {"authors": ["Henry Corrigan-Gibbs", "David J. Wu", "Dan Boneh (Stanford University)"], "key": "HotOS_17_011", "topics": ["OS", "Architecture"], "title": "\"quantum operating systems\""}, "Hardening Java's Access Control by Abolishing Implicit Privilege Elevation": {"authors": ["Philipp Holzinger (Fraunhofer SIT)", "Ben Hermann (Technische Universit\u00e4t Darmstadt)", "Johannes Lerch (Technische Universit\u00e4t Darmstadt)", "Eric Bodden (Paderborn University & Fraunhofer IEM)", "Mira Mezini (Technische Universit\u00e4t Darmstadt)"], "key": "SP_17_016", "topics": ["Security", "Compilers"], "title": "Hardening Java's Access Control by Abolishing Implicit Privilege Elevation"}, "Discovering Your Selling Points: Personalized Social Influential Tag Exploration": {"authors": ["Yuchen Li", "Ju Fan", "Dongxiang Zhang", "Kian-Lee Tan"], "key": "SIGMOD_17_034", "topics": ["DB"], "title": "Discovering Your Selling Points: Personalized Social Influential Tag Exploration"}, "Online dynamic monitoring of MPI communication": {"authors": ["George Bosilca", "Cl\u00e9ment Foyer", "Emmanuel Jeannot", "Guillaume Mercier", "Guillaume Papaur\u00e9"], "key": "EuroPar_17_033", "topics": ["Network"], "title": "Online dynamic monitoring of MPI communication"}, "ARM Wrestling with Big Data: A Study of Commodity ARM Server for Big Data Workloads": {"authors": ["Jayanth Kalyanasundaram (Indian Institute of Science)", "Yogesh Simmhan (Indian Institute of Science)"], "key": "HiPC_17_030", "topics": ["Architecture", "Data"], "title": "ARM Wrestling with Big Data: A Study of Commodity ARM Server for Big Data Workloads"}, "Most Websites Don\u2019t Need to Vibrate: A Cost-Benefit Approach to Improving Browser Security": {"authors": ["Peter Snyder", "Cynthia Taylor", "Chris Kanich"], "key": "CCS_17_012", "topics": ["Security"], "title": "Most Websites Don\u2019t Need to Vibrate: A Cost-Benefit Approach to Improving Browser Security"}, "Why Do Developers Get Password Storage Wrong? A Qualitative Usability Study": {"authors": ["Alena Naiakshina", "Anastasia Danilova", "Christian Tiefenau", "Marco Herzog", "Sergej Dechand", "Matthew Smith"], "key": "CCS_17_020", "topics": ["Security"], "title": "Why Do Developers Get Password Storage Wrong? A Qualitative Usability Study"}, "Stein's Method for Mean Field Approximations in Light and Heavy Traffic Regimes": {"authors": ["Lei Ying (Arizona State University)"], "key": "SIGMETRICS_17_010", "topics": [], "title": "Stein's Method for Mean Field Approximations in Light and Heavy Traffic Regimes"}, "Analysis and Modeling of the End-to-End I/O Performance in OLCF\u2019s Titan Supercomputer": {"authors": ["Lipeng Wan (Oak Ridge National Laboratory)", "Matthew Wolf (Oak Ridge National Laboratory)", "Feiyi Wang (Oak Ridge National Laboratory)", "Jong Youl Choi (Oak Ridge National Laboratory)", "George Ostrouchov (Oak Ridge National Laboratory)", "Scott Klasky (Oak Ridge National Laboratory)"], "key": "HPCC_17_001", "topics": ["Benchmark", "Storage", "HPC"], "title": "Analysis and Modeling of the End-to-End I/O Performance in OLCF\u2019s Titan Supercomputer"}, "Application-Specific Performance-Aware Energy Optimization on Android Mobile Device": {"authors": ["Karthik Rao", "Jun Wang", "Sudhakar Yalamanchili", "Yorai Wardi", "Handong Ye"], "key": "HPCA_17_010", "topics": ["Energy"], "title": "Application-Specific Performance-Aware Energy Optimization on Android Mobile Device"}, "Competition and Peak-Demand Pricing in Clouds Under Tenants' Demand Response": {"authors": ["George Kesidis", "Uday Shanbhag", "Neda Nasiriani", "Bhuvan Urgaonkar (Penn State University)"], "key": "MASCOTS_17_020", "topics": ["Cloud"], "title": "Competition and Peak-Demand Pricing in Clouds Under Tenants' Demand Response"}, "Memory Requirements of Hadoop, Spark, and MPI Based Big Data Applications on Commodity Server Class Architecture": {"authors": ["Hosein Mohammadi Makrani", "Houman Homayoun (George Mason University)"], "key": "IISWC_17_013", "topics": ["Benchmark", "Data", "Network"], "title": "Memory Requirements of Hadoop, Spark, and MPI Based Big Data Applications on Commodity Server Class Architecture"}, "Stack Overflow Considered Harmful? --- The Impact of Copy&Paste on Android Application Security": {"authors": ["Felix Fischer (AISEC, Fraunhofer)", "Konstantin B\u00f6ttinger (AISEC, Fraunhofer)", "Huang Xiao (AISEC, Fraunhofer)", "Christian Stransky (CISPA, Saarland University)", "Yasemin Acar (CISPA, Saarland University)", "Michael Backes (CISPA, Saarland University & MPI-SWS)", "Sascha Fahl (CISPA, Saarland University)"], "key": "SP_17_047", "topics": ["Security"], "title": "Stack Overflow Considered Harmful? --- The Impact of Copy&Paste on Android Application Security"}, "Neural Network-based Graph Embedding for Cross-Platform Binary Code Similarity Detection": {"authors": ["Xiaojun Xu", "Chang Liu", "Qian Feng", "Heng Yin", "Le Song", "Dawn Song"], "key": "CCS_17_023", "topics": ["Security", "Data"], "title": "Neural Network-based Graph Embedding for Cross-Platform Binary Code Similarity Detection"}, "Toward a Holistic Framework for ConductingScientific Evaluations of OpenStack": {"authors": ["Ronan-Alexandre Cherrueau (Inria, France)", "Dimitri Pertin (Inria, France)", "Anthony Simonet (Inria, France)", "Adrien L\u00e8bre (Inria, France)", "Matthieu Simonin (Inria, France)"], "key": "CCGrid_17_068", "topics": ["Cloud"], "title": "Toward a Holistic Framework for ConductingScientific Evaluations of OpenStack"}, "Lessons learnt from Software Tuning of a Memchaced-Backed, Multi-Tier, Web Cloud Application": {"authors": ["Muhammad Wajahat", "Salman Masood", "Abhinav Sau", "Anshul Gandhi"], "key": "IGSC_17_023", "topics": ["Energy", "Cloud"], "title": "Lessons learnt from Software Tuning of a Memchaced-Backed, Multi-Tier, Web Cloud Application"}, "Who is Fiddling with Prices? Building and Deploying a Watchdog Service for E-commerce": {"authors": ["Costas Iordanou (Universidad Carlos III de Madrid, Telefonica Research)", "Claudio Soriente (Telefonica Research)", "Michael Sirivianos (Cyprus University of Technology)", "Nikolaos Laoutaris (Telefonica Research)"], "key": "SIGCOMM_17_006", "topics": ["Network", "Security"], "title": "Who is Fiddling with Prices? Building and Deploying a Watchdog Service for E-commerce"}, "Understanding Power-performance Relationship of Energy-efficient Modern DRAM Devices for Chip Multiprocessor Workloads": {"authors": ["Sukhan Lee", "Yuhwan Ro (Seoul National University)", "Young Hoon Son", "Hyunyoon Cho (Samsung Electronics)", "Nam Sung Kim (UIUC)", "Jung Ho Ahn (Seoul National University)"], "key": "IISWC_17_012", "topics": ["Energy", "Benchmark", "Architecture"], "title": "Understanding Power-performance Relationship of Energy-efficient Modern DRAM Devices for Chip Multiprocessor Workloads"}, "It's time to think about an Operating System for Near Data Processing Architecture": {"authors": ["Antonio Barbalace", "Anthony Iliopoulos", "Holm Rauchfuss", "Goetz Brasche (Huawei Research)"], "key": "HotOS_17_012", "topics": ["OS", "Architecture"], "title": "It's time to think about an Operating System for Near Data Processing Architecture"}, "One TPM to Bind Them All: Fixing TPM2.0 for Provably Secure Anonymous Attestation": {"authors": ["Jan Camenisch (IBM Research - Zurich)", "Liqun Chen (University of Surrey)", "Manu Drijvers (IBM Research - Zurich and ETH Zurich)", "Anja Lehmann (IBM Research - Zurich)", "David Novick (Intel)", "Rainer Urian (Infineon)"], "key": "SP_17_033", "topics": ["Security"], "title": "One TPM to Bind Them All: Fixing TPM2.0 for Provably Secure Anonymous Attestation"}, "Bounding Cache Miss Costs of Multithreaded Computations Under General Schedulers": {"authors": ["Richard Cole", "Vijaya Ramachandran"], "key": "SPAA_17_016", "topics": ["Concurrency", "OS"], "title": "Bounding Cache Miss Costs of Multithreaded Computations Under General Schedulers"}, "QoS- and Contention- Aware Resource Provisioning in Streaming Processing Engine": {"authors": ["Mohammadreza Hoseinyfarahabady", "Albert Y. Zomaya", "Zahir Tari"], "key": "Cluster_17_014", "topics": ["OS"], "title": "QoS- and Contention- Aware Resource Provisioning in Streaming Processing Engine"}, "Application Clustering Policies to Address System Fairness with Intel's Cache Allocation Technology": {"authors": ["Vicent Selfa", "Julio Sahuquillo (Universitat Polit\u00e8cnica de Val\u00e8ncia)", "Lieven Eeckhout (UGENT)", "Salvador Petit", "Maria E. G\u00f3mez (Universitat Polit\u00e8cnica de Val\u00e8ncia)"], "key": "PACT_17_013", "topics": ["OS", "Architecture"], "title": "Application Clustering Policies to Address System Fairness with Intel's Cache Allocation Technology"}, "NICE: Network-Integrated Cluster Efficient Storage": {"authors": ["Samer Al-Kiswany (uwaterloo.ca)", "Suli Yang (cs.wisc.edu)", "Andrea Arpaci-Dusseau (cs.wisc.edu)", "Remzi Arpaci-Dusseau (cs.wisc.edu)"], "key": "HPDC_17_003", "topics": ["Network", "Storage", "HPC"], "title": "NICE: Network-Integrated Cluster Efficient Storage"}, "Redesigning Go's Built-In Map to Support Concurrent Operations": {"authors": ["Louis Jenkins (Bloomsburg University)", "Tingzhe Zhou (Lehigh University)", "Michael Spear (Lehigh University)"], "key": "PACT_17_002", "topics": ["Compilers", "Concurrency"], "title": "Redesigning Go's Built-In Map to Support Concurrent Operations"}, "\"Deterministic Browser\"": {"authors": ["Yinzhi Cao", "Zhanhao Chen", "Song Li", "Shujiang Wu"], "key": "CCS_17_011", "topics": ["Security"], "title": "\"Deterministic Browser\""}, "Cold Boot Attacks are Still Hot: Security Analysis of Memory Scramblers in Modern Procesors": {"authors": ["Salessawi Ferede Yitbarek", "Misiker Tadesse Aga", "Reetuparna Das", "Todd Austin"], "key": "HPCA_17_022", "topics": ["Security", "Architecture"], "title": "Cold Boot Attacks are Still Hot: Security Analysis of Memory Scramblers in Modern Procesors"}, "The Return of Coppersmith\u2019s Attack: Practical Factorization of Widely Used RSA Moduli": {"award": true, "authors": ["Matus Nemec", "Marek Sys", "Petr Svenda", "Dusan Klinec", "Vashek Matyas"], "key": "CCS_17_101", "topics": ["Security"], "title": "The Return of Coppersmith\u2019s Attack: Practical Factorization of Widely Used RSA Moduli"}, "Deterministic Distributed Edge-Coloring, and Vertex-Coloring of Graphs with Bounded Diversity": {"authors": ["Leonid Barenboim (Open University of Israel)", "Michael Elkin (Ben-Gurion University of the Negev)", "Tzalik Maimon (Open University of Israel)"], "key": "PODC_17_017", "topics": ["Concurrency", "HPC"], "title": "Deterministic Distributed Edge-Coloring, and Vertex-Coloring of Graphs with Bounded Diversity"}, "The Multiparty Communication Complexity of Testing Triangle-Freeness": {"authors": ["Orr Fischer (Tel Aviv University)", "Shay Gershtein (Tel Aviv University)", "Rotem Oshman (Tel Aviv University)"], "key": "PODC_17_011", "topics": ["Network", "Concurrency"], "title": "The Multiparty Communication Complexity of Testing Triangle-Freeness"}, "Simple and Fast Parallel Algorithms for the Voronoi Maps and the Euclidean Distance Map, with GPU implementations": {"authors": ["Takumi Honda", "Shinnosuke Yamamoto", "Hiroaki Honda", "Koji Nakano", "Yasuaki Ito"], "key": "ICPP_17_037", "topics": ["GPGPU", "Concurrency"], "title": "Simple and Fast Parallel Algorithms for the Voronoi Maps and the Euclidean Distance Map, with GPU implementations"}, "Optimal Reissue Policies For Reducing Tail-Latency": {"authors": ["Timothy Kaler", "Yuxiong He", "Sameh Elnikety"], "key": "SPAA_17_010", "topics": [], "title": "Optimal Reissue Policies For Reducing Tail-Latency"}, "Improving the network of a search engine services through application-aware routing": {"authors": ["Joe Carri\u00f3n", "Daniel Franco", "Veronica Veronica Gil-Costa", "Mauricio Marin", "Emilio Luque"], "key": "EuroPar_17_039", "topics": ["Network"], "title": "Improving the network of a search engine services through application-aware routing"}, "Omnix: Accelerator-centric OS for omniprogrammable systems": {"authors": ["Mark Silberstein (Technion - Israel Institute of Technology)"], "key": "HotOS_17_010", "topics": ["OS", "GPGPU"], "title": "Omnix: Accelerator-centric OS for omniprogrammable systems"}, "An Energy-constrained Makespan Optimization Framework in Fine- to Coarse-grain Partitioned Multicore Systems": {"authors": ["Shervin Hajiamini", "Behrooz Shirazi", "Chris Cain", "Dongbo Hong"], "key": "IGSC_17_017", "topics": ["Energy", "Concurrency"], "title": "An Energy-constrained Makespan Optimization Framework in Fine- to Coarse-grain Partitioned Multicore Systems"}, "Overcommitment in Cloud Services - Bin Packing with Chance Constraints": {"authors": ["Maxime C. Cohen (New York University (NYU) - Leonard N. Stern School of Business)", "Philipp Keller (Google)", "Vahab Mirrokni (Google)", "Morteza Zadimoghaddam (Google)"], "key": "SIGMETRICS_17_006", "topics": ["Cloud", "OS"], "title": "Overcommitment in Cloud Services - Bin Packing with Chance Constraints"}, "Tapir: Embedding Fork-Join Parallelism into LLVM's Intermediate Representation": {"artifact": true, "topics": ["Concurrency", "Compilers"], "key": "PPoPP_17_002", "title": "Tapir: Embedding Fork-Join Parallelism into LLVM's Intermediate Representation", "authors": ["Tao B. Schardl", "William S. Moses", "Charles E. Leiserson"], "award": true}, "lib\u00b7erate, (n): A library for exposing (traffic-classification) rules and avoiding them efficiently": {"authors": ["Fangfan Li (Northeastern University)", "Abbas Razaghpanah (Stony Brook University)", "Arash Molavi Kakhki (Northeastern University)", "Arian Akhavan Niaki (Stony Brook University)", "David Choffnes (Northeastern University)", "Phillipa Gill (University of Massachusetts Amherst)", "Alan Mislove (Northeastern University)"], "key": "IMC_17_009", "topics": ["Network"], "title": "lib\u00b7erate, (n): A library for exposing (traffic-classification) rules and avoiding them efficiently"}, "Gray Failure: The Achilles\u2019 Heel of Cloud-Scale Systems": {"authors": ["Peng Huang (Microsoft UCSD)", "Chuanxiong Guo", "Lidong Zhou", "Jacob R. Lorch (Microsoft Research)", "Yingnong Dang (Microsoft)", "Murali Chintalapati", "Randolph Yao (Microsoft Azure)"], "key": "HotOS_17_002", "topics": ["OS", "Cloud"], "title": "Gray Failure: The Achilles\u2019 Heel of Cloud-Scale Systems"}, "The BUDS Language for Distributed Machine Learning": {"authors": ["Luis Perez", "Zekai Gao", "Shangyu Luo", "Chris Jermaine"], "key": "SIGMOD_17_019", "topics": ["DB", "Data", "Concurrency"], "title": "The BUDS Language for Distributed Machine Learning"}, "Analytic Models of Checkpointing for Concurrent Component-Based Software Systems ": {"authors": ["Noor Bajunaid", "Daniel Menasce"], "key": "ICPE_17_019", "topics": ["Concurrency", "Compilers"], "title": "Analytic Models of Checkpointing for Concurrent Component-Based Software Systems "}, "Let\u2019s go in for a closer look: Observing passwords in their natural habitat": {"authors": ["Sarah Pearman", "Jeremy Thomas", "Pardis Emami Naeini", "Hana Habib", "Lujo Bauer", "Nicolas Christin", "Lorrie Faith Cranor", "Serge Egelman", "Alain Forget"], "key": "CCS_17_019", "topics": ["Security"], "title": "Let\u2019s go in for a closer look: Observing passwords in their natural habitat"}, "Node.fz: Fuzzing Server-side Event-driven JavaScript": {"authors": ["James Davis (Virginia Tech)", "Arun Thekumparampil (MathWorks)", "Dongyoon Lee (Virginia Tech)"], "key": "EuroSys_17_012", "topics": ["Cloud", "Compilers"], "title": "Node.fz: Fuzzing Server-side Event-driven JavaScript"}, "Will Serverless End Linux\u2019s Dominance in the Cloud?": {"authors": ["Ricardo Koller", "Dan Williams (IBM T.J. Watson Research Center)"], "key": "HotOS_17_004", "topics": ["Cloud", "OS"], "title": "Will Serverless End Linux\u2019s Dominance in the Cloud?"}, "DC2-MTCP: Light-weight Coding for Efficient Multi-path Transmission in Data Center Network": {"authors": ["Jiyan Sun", "Yan Zhang", "Xin Wang", "Shihan Xiao", "Zhen Xu", "Hongjing Wu", "Xin Chen", "Yanni Han"], "key": "IPDPS_17_042", "topics": ["Network", "Cloud"], "title": "DC2-MTCP: Light-weight Coding for Efficient Multi-path Transmission in Data Center Network"}, "HyperLogLog Hyper Extended: Sketches for Concave Sublinear   Frequency Statistics": {"authors": ["Edith Cohen (Google Research)"], "key": "KDD_17_061", "topics": [], "title": "HyperLogLog Hyper Extended: Sketches for Concave Sublinear   Frequency Statistics"}, "Dynamic Management of In-memory Storage for Efficiently Integrating Compute- and Data-intensive Computing on HPC Systems": {"authors": ["Pengfei Xuan (Clemson University, USA)", "Feng Luo (Clemson University, USA)", "Rong Ge (Clemson University, USA)", "Pradip Srimani (Clemson University, USA)"], "key": "CCGrid_17_040", "topics": ["HPC", "Storage"], "title": "Dynamic Management of In-memory Storage for Efficiently Integrating Compute- and Data-intensive Computing on HPC Systems"}, "MiniCrypt: Reconciling Encryption and Compression for Big Data Stores": {"authors": ["Wenting Zheng", "Frank Li (UC Berkeley)", "Rachit Agarwal (Cornell)", "Raluca Ada Popa", "Ion Stoica (UC Berkeley)"], "key": "EuroSys_17_008", "topics": ["Security", "Data"], "title": "MiniCrypt: Reconciling Encryption and Compression for Big Data Stores"}, "Don\u2019t Let One Rotten Apple Spoil the Whole Barrel: Towards Automated Detection of Shadowed Domains": {"authors": ["Daiping Liu", "Zhou Li", "Kun Du", "Haining Wang", "Baojun Liu", "Haixin Duan"], "key": "CCS_17_034", "topics": ["Security"], "title": "Don\u2019t Let One Rotten Apple Spoil the Whole Barrel: Towards Automated Detection of Shadowed Domains"}, "Better Call the Crowd. Using Crowdsourcing to Shape your Domain-Specific Languages": {"authors": ["Marco Brambilla", "Jordi Cabot", "Javier Luis Canovas Izquierdo", "Andrea Mauri"], "key": "SLE_17_019", "topics": ["Compilers"], "title": "Better Call the Crowd. Using Crowdsourcing to Shape your Domain-Specific Languages"}, "Standardizing Bad Cryptographic Practice: A teardown of the IEEE standard for protecting electronic-design intellectual property": {"authors": ["Animesh Chhotaray", "Adib Nahiyan", "Thomas Shrimpton", "Domenic J. Forte", "Mark Tehranipoor"], "key": "CCS_17_096", "topics": ["Security"], "title": "Standardizing Bad Cryptographic Practice: A teardown of the IEEE standard for protecting electronic-design intellectual property"}, "A Stitch in Time: Supporting Android Developers in Writing Secure Code": {"authors": ["Duc Cuong Nguyen", "Dominik Wermke", "Yasemin Acar", "Michael Backes", "Charles Weir", "Sascha Fahl"], "key": "CCS_17_066", "topics": ["Security"], "title": "A Stitch in Time: Supporting Android Developers in Writing Secure Code"}, "Fine-Grained Energy Profiling for deep Convolutional Neural Network on the Jetson TX1": {"authors": ["Crefeda Faviola Rodrigues", "Graham Riley", "Mikel Luj\u00e1n (The University of Manchester)"], "key": "IISWC_17_014", "topics": ["Energy", "Data", "GPGPU"], "title": "Fine-Grained Energy Profiling for deep Convolutional Neural Network on the Jetson TX1"}, "Mission Accomplished? HTTPS Security after DigiNotar": {"award": true, "authors": ["Johanna Amann (International Computer Science Institute / Corelight / LBNL)", "Oliver Gasser", "Quirin Scheitle (Technical University of Munich)", "Lexi Brent (The University of Sydney)", "Georg Carle (Technical University of Munich)", "Ralph Holz (The University of Sydney)"], "key": "IMC_17_019", "topics": ["Benchmark", "Security", "Network"], "title": "Mission Accomplished? HTTPS Security after DigiNotar"}, "Addressing Volume and Latency Overheads in 1D-parallel Sparse Matrix Vector Multiplication": {"authors": ["Seher Acer", "Oguz Selvitopi", "Cevdet Aykanat"], "key": "EuroPar_17_038", "topics": ["Storage", "HPC", "Concurrency"], "title": "Addressing Volume and Latency Overheads in 1D-parallel Sparse Matrix Vector Multiplication"}, "Enhancing Security and Privacy of Tor's Ecosystem by Using Trusted Execution Environments": {"authors": ["Seongmin Kim", "Juhyeng Han", "Jaehyeong Ha", "Taesoo Kim", "Dongsu Han"], "key": "NSDI_17_010", "topics": ["Security", "Network"], "title": "Enhancing Security and Privacy of Tor's Ecosystem by Using Trusted Execution Environments"}, "Avoding The Man on the Wire: Improving Tor's Security with Trust-Aware Path Selection": {"authors": ["Aaron Johnson", "Rob Jansen", "Aaron D. Jaggard", "Joan Feigenbaum", "Paul Syverson"], "key": "NDSS_17_048", "topics": ["Security", "Cloud", "Network"], "title": "Avoding The Man on the Wire: Improving Tor's Security with Trust-Aware Path Selection"}, "To BLISS-B or not to be - Attacking strongSwan\u2019s Implementation of Post-Quantum Signatures": {"authors": ["Peter Pessl", "Leon Groot Bruinderink", "Yuval Yarom"], "key": "CCS_17_114", "topics": ["Security"], "title": "To BLISS-B or not to be - Attacking strongSwan\u2019s Implementation of Post-Quantum Signatures"}, "Apollo: Reusable Models for Fast and Dynamic Tuning of Input-Dependent Code": {"authors": ["David Beckingsale", "Olga Pearce", "Ignacio Laguna", "Todd Gamblin"], "key": "IPDPS_17_031", "topics": ["Compilers"], "title": "Apollo: Reusable Models for Fast and Dynamic Tuning of Input-Dependent Code"}, "Quantifying I/O and Communication Traffic Interference on Burst Buffer Equipped Dragonfly Networks": {"authors": ["Misbah Mubarak", "Philip Carns", "Jonathan Jenkins", "Jianping Li", "Nikhil Jain", "Shane Snyder", "Robert B. Ross", "Abhinav Bhatele", "Chris Carothers", "Kwan-Liu Ma"], "key": "Cluster_17_021", "topics": ["Storage", "Network"], "title": "Quantifying I/O and Communication Traffic Interference on Burst Buffer Equipped Dragonfly Networks"}, "Scaling Up Hands-Off Crowdsourced Entity Matching: An RDBMS Approach": {"authors": ["Sanjib Das", "Paul Suganthan", "Anhai Doan", "Jeffrey Naughton", "Ganesh Krishnan", "Rohit Deep", "Esteban Arcaute", "Vijay Raghavendra", "Youngchoon Park"], "key": "SIGMOD_17_042", "topics": ["DB"], "title": "Scaling Up Hands-Off Crowdsourced Entity Matching: An RDBMS Approach"}, "Multiprogramming a 64 kB Computer Safely and Efficiently": {"authors": ["Amit Levy (Stanford University)", "Bradford Campbell (University of Virginia)", "Branden Ghena (University of California, Berkeley)", "Daniel B Giffin (Stanford University)", "Pat Pannuto", "Prabal Dutta (University of California, Berkeley)", "Philip Levis (Stanford University)"], "key": "SOSP_17_015", "topics": ["OS"], "title": "Multiprogramming a 64 kB Computer Safely and Efficiently"}, "Co-Locating and Concurrent Fine-Tuning MapReduce Applications on Microservers for Energy Efficienc": {"authors": ["Maria Malik", "Houman Homayoun (George Mason University)"], "key": "IISWC_17_003", "topics": ["Concurrency", "Data", "Energy"], "title": "Co-Locating and Concurrent Fine-Tuning MapReduce Applications on Microservers for Energy Efficienc"}, "Parallel Algorithm for the Computation of Cycles in Relative Neighborhood Graphs": {"authors": ["Hari Sundar", "Parmeshwar Khurd"], "key": "ICPP_17_020", "topics": ["Concurrency"], "title": "Parallel Algorithm for the Computation of Cycles in Relative Neighborhood Graphs"}},
{"entities":["CPU cache","Cache coloring","Cache pollution","Cloud computing","Data buffer","Graph coloring","Linux","Locality of reference","Manifest (transportation)","Memory management","Network function virtualization","Operating system","Provisioning","Run time (program lifecycle phase)","Software framework","Stock and flow"],"journalVolume":"","journalPages":"467-481","pmid":"","year":2017,"outCitations":["0b885bb186445ee0c50277d990eca18c53fef09b","2beb38e6e831790082b0578bcddd1b9f73714822","8dc427e562569a48199ddc391bb272987169920a","3cb1c133cf24aac036f08c278713290dd5f7b5f6","284bc76cd122b8295704b0746363266d5dc568f6","90fe816f5af055871f63a77282d4a4849e0764d3","1401df37cc3fc78f26570d601fd123f17646b2d2","3c0bc4e9d30719269b0048d4f36752ab964145dd","99ce7f3cdef62f743db6df52eeedb7f5335ba669","aeba281ee3caf611bf98c7b989daf393315bed89","3b903a39571836bcf080891eb79afad2fe0fb1f2","4a58e3066f12bb86d7aef2776e9d8a2a4e4daf3e","2269889c9085ff518ee9e7f5b2f92e4599dd3ff2","2892b18872a42fbc6173e76263ac3e9251e2a334","7a978f2902460e732c50c36a171deb11733df1fc","6678b17fc8758efea8d32c2d47f9924f8a0cdc6d","2fae39f82be19b311d743d3525badd777228e3ed","0332013fc380ca283d3afc457c430c513d19cc51","31c1ebd6214a6146f2739fb81bf560229f413c91","4215fbbff39a0213888718549f215b124bd2e611","a04f070b9ca16bac04ee76b54a1da5eca52e1cc2","7165fbf57c455e23746592b5621773c80e462ae7","58478dbe1e7463d781b0be04d337ebe9cfabaf80","b9c2c52955f448a52d7893b5eb8b33e8592c29dd","013b529f4ec9c1d9ddcef88a1a1f4b0efcc0c9c5","24dc8d1de7e78ab100d2d83cbdf1390ddb9234c9","7129b305ce45f83127e928e8510da9fae0783905","490d862480cf30949dce90e832aa292c498ac768","77a3133097ff59bae0b6ac8fae418a58b585dacb","4c2bec041e4aac45be6276864c2ba231d8139108","521116a7dceed9e37f8dfb130098f6c3bf100940","53177b318070482270d625ba69e50159f160e7c1","0720cfa5330462593b20ea0bbb7d8b5862a6b730","09bd66ed15985caa6b0bf1d54a36b508141ed128","7c429cda99d8c7bab8f02e311b6ec1a752983397","333da42f4369dff8ca905ad21ea6ee2f5dc99d55","57d3035be09a0703d503da8af082b128af3dfdf6","41e0ef45114deff41d92c8b235393cfe4d9a94f4","863bcc82bd61f2199a4f2c4c6bc34a26c217c87a","1817aa7ffd9932244e6c7161205f5099692242f3","1ae7be5d55833e6aa53d24f620be5df9006a3558","1ecd36058e48734213c81728f42ff798a2c52833","2451dc6bb08d2668f4a876ce94d0c15227ccab7a","07c29281f2f7dddb9ee99f0d806e1fa45ac47454","590bd345ef4b8f274af3363a52b7d8f518cdc08a","ce94cd005aa253e92270ff2e952603d44f75aa5b","cd828d4ebd953017e2935af555ed29d6ae4a79a4","27f4001214ce0d449eb05d33626f444526accc7c","9c7e0c435a94c17c16853937f60edd8c9b3a3a4a","277f20ddc0e9fa593753ef2778110508372c597f","11ebb411b138d2acdd481a6920b822fbc213cdc0","138a2f42fad86624adec7ddac2ac556e9e20d0c5","e66455a61821afde0c4d2cbd95c3d9ed0f843675","4f1cf2a9244816dc9ea7be304b85a45b7e0941a4","0e2a26def9432e19fb96dcf8956d7e786da0d814","251ea4c57e71bb951ff6f9fe0ff63897a298402f","603791529a45c93e398149e1fc5f0bd94139a414","1cb7d1b3226d0a2fc77e54dee596a7a2d6d098d5","23a9e1f8cefc76b71f0cf5e1ccf5a6485c19cadf","806c3a77f5128e7bd927e07784de655971058a07","59a8a5c5b08ea695f341eb0329bd27b5ff645012","5e17f6f1ef31817f3914d788ebc09a13287ff7ca","10fede77f843e9eb5ef1768a17543013616d9243","e259a25e9b241618a55abe9962f6656c993ef094","f8aa33900f552f8112d6186d78bc845d2dfc0007","83d8f3fe2468adba47386a90e56e72373f757744","165528cdf9c76edd98729c142faf50fbd6cfc69e","3000e77ed7282d9fb27216f3e862a3769119d89e","63e9e7c5508c486d01f270aa000662a2a176b8c3","28c14bbd81e89b29ca1d00b109d1188ed9af3c9a"],"s2Url":"https://semanticscholar.org/paper/3fd4aa3b657b4fb457ed1dfd54dc87e34f651e8b","s2PdfUrl":"","id":"3fd4aa3b657b4fb457ed1dfd54dc87e34f651e8b","authors":[{"name":"Yang Hu","ids":["38639927"]},{"name":"Mingcong Song","ids":["3102340"]},{"name":"Tao Li","ids":["39429972"]}],"journalName":"","paperAbstract":"With exploding traffic stuffing existing network infra-structure, today's telecommunication and cloud service providers resort to Network Function Virtualization (NFV) for greater agility and economics. Pioneer service provider such as AT&#38;T proposes to adopt container in NFV to achieve shorter Virtualized Network Function (VNF) provisioning time and better runtime performance. However, we characterize typical NFV work-loads on the containers and find that the performance is unsatisfactory. We observe that the shared host OS net-work stack is the main bottleneck, where the traffic flow processing involves a large amount of intermediate memory buffers and results in significant last level cache pollution. Existing OS memory allocation policies fail to exploit the locality and data sharing information among buffers. In this paper, we propose NetContainer, a software framework that achieves fine-grained hardware resource management for containerized NFV platform. NetContainer employs a cache access overheads guided page coloring scheme to coordinately address the inter-flow cache access overheads and intra-flow cache access overheads. It maps the memory buffer pages that manifest low cache access overheads (across a flow or among the flows) to the same last level cache partition. NetContainer exploits a footprint theory based method to estimate the cache access overheads and a Min-Cost Max-Flow model to guide the memory buffer mappings. We implement the NetContainer in Linux kernel and extensively evaluate it with real NFV workloads. Exper-imental results show that NetContainer outperforms conventional page coloring-based memory allocator by 48% in terms of successful call rate.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3037697.3037713"],"title":"Towards \"Full Containerization\" in Containerized Network Function Virtualization","doi":"10.1145/3037697.3037713","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3037697.3037713","venue":"ASPLOS"},
{"entities":["Algorithm","Auxiliary memory","Computer data storage","Data mining","Database engine","Database server","Experiment","Graph (abstract data type)","Graph database","Greedy algorithm","Neo4j","Programming language","Scalability","Server (computing)","Stream (computing)","Streaming media","Structure mining","Upload","X Window System","X10"],"journalVolume":"","journalPages":"243-252","pmid":"","year":2017,"outCitations":["586414efa54ba9f4a7def0dc5322b7723f22c552","3231d62bec8e8cc1d837e85893889855767c3b13","3746511ef9ba685f34ceec9a3e94795be5836953","e2b0e4811aea30fc1c791956a7b480b7f14a06c2","71e317a53399440cb0c7e6589b41d0565f9ac0b7","1753c2dc85cc40e0a2e8b4a405c1690eab066d8d","4b808e7b2176d95596603937abf11bc3cfd3f6b5","4aad76cf012f306e4304c605bc24ccbcadbbf7ee","bdc97d4982782a2b636b367708f0ce9a17a5f28b","04311b15b444a0f75ea2bb74fca26cc1aefbf3c1","60f3dbc4f9a585e0d70a8359f9d5b6cfd0849177","862cb6bf1f03e495ed5c6c9be16392712f7eb7cd","41d7a4cb6c804945a7c6a0976a3dd85b9fe37677","22c74d8be071084ce8812af19548e7bf2bf0c8b6","45c81db51c128e6255288a2942cf075e7dc70c21","95f658b8f7a47935bbe1007eed678324a1c3f7ba","34a86b7b24d4a93dbb249fc05f0b7c0f48f90aff","05370a6cc820ffe5393fcc948d7d600b5949a217","01c1f0e97ce5c74c714dc7aa43cb064f45cc3b04","3794abdc47d51b72cb7b7779085cd7e672966dc2"],"s2Url":"https://semanticscholar.org/paper/b889b1d6944213bc2ca29e3ad07ee65ede20892d","s2PdfUrl":"","id":"b889b1d6944213bc2ca29e3ad07ee65ede20892d","authors":[{"name":"Miyuru Dayarathna","ids":["2741023"]},{"name":"Sathya Bandara","ids":["35709316"]},{"name":"Nandula Jayamaha","ids":["35433878"]},{"name":"Mahen Herath","ids":["9159004"]},{"name":"Achala Madhushan","ids":["35367497"]},{"name":"Sanath Jayasena","ids":["1971912"]},{"name":"Toyotaro Suzumura","ids":["2231831"]}],"journalName":"2017 IEEE 24th International Conference on High Performance Computing (HiPC)","paperAbstract":"Streaming graph data mining has become a significant issue in high performance graph mining due to the increasing appearance of graph data sets as streams. In this paper we propose Acacia-Stream which is a scalable distributed streaming graph database engine developed with X10 programming language. Graph streams are partitioned using a streaming graph partitioner algorithm in Acacia-Stream and streaming graph processing queries are run on the graph streams. The partitioned data sets are persisted on secondary storage across X10 places. We investigate on the use of three different streaming graph partitioner algorithms called hash, Linear Deterministic Greedy, and Fennel algorithms and report their performance. Furthermore, to demonstrate Acacia-Stream's streaming graph processing capabilities we implement streaming triangle counting with Acacia-Stream. We present performance results gathered from Acacia-Stream with different large scale streaming data sets in both horizontal and vertical scalability experiments. Furthermore, we compare streaming graph loading performance of Acacia-Stream with Neo4j and Oracle's PGX graph database servers. From these experiments we observed that Acacia-Stream's Fennel partitioner based graph uploader can upload a 948MB rmat22 graph in 1283.42 seconds which is 38% faster than PGX graph database server and 12.8 times faster than Neo4j database server. Acacia-Stream's Streaming Partitioner's batch size adjustments based optimizations reduced the time used by the network communications almost by half.","inCitations":["e2b0e4811aea30fc1c791956a7b480b7f14a06c2"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/HiPC.2017.00036"],"title":"An X10-Based Distributed Streaming Graph Database Engine","doi":"10.1109/HiPC.2017.00036","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HiPC.2017.00036","venue":"2017 IEEE 24th International Conference on High Performance Computing (HiPC)"},
{"entities":["Compile time","Compiler","Kernel (operating system)","Overhead code","Parallel computing","Run time (program lifecycle phase)","Self-tuning","Simulation"],"journalVolume":"","journalPages":"307-316","pmid":"","year":2017,"outCitations":["0ce898bf3f3e4af56492e9135c7c85e3917e20e8","f8e9b050c93af6dea582563f61b6460b590bc3af","85b5604ec9f9a33ce4220c3e861de274d4a14a03","e65012425ff445a11728cc4922cfc09a4dfd6fd1","8a2cfe57dadd3a541154c38de897221945ffc808","41575c810be20f4bd7f0c33b7b3fa81d42ac137a","0c76a904b28c775eb5f33cd982f0bfeddab353e3","645d9e7e5e3c5496f11e0e303dc4cc1395109773","b81fb53cc1dff847804279275ce1e3238ffe8766","9a9f8973003098ad6065a7848a78cc9bf60926a9","09ff457e09ae277e52441e228c0ed7a8921d67a7","24da69e7b54dcea2873bc3b6289c36e5ca465b7e","2dbc0a3ade971381152c5521d3a8576f1f8632e0","a44e9366b28688fceea7d6363ff5b1aeba695e78","a5a95ad4b217cf5b2f1038753ba76fae94da1bec","5672ce28f2927b81b01303e4926643c55a4c8133","6472cab2678c39e2273673968c6d7d3cfe2a62c9","b8d5cc73054874b49c4ee1033717678719440145","04b67bda49edadf2dc618004582a10d2dc66b6a3","8dc2184214ee39b31e2c0d623842b66c0141984b","1ac19f434c742202451da7c44591c52ad3f9e9fd","2190f5b82326f4d61312aaa6e6226f1ae618fb0d","220f5b0e74c7f1e71d6e23da672dcffbc9e6520a","0a361ac9c017eaa73d39af7bb8f11a9fb8a5fc14","1be16d8c557b15cdf2db9e7eb4453f2274fd60af","1c4026d2fe957c4d5a29f2e091b9ee6609882c00","075d460a4737d7c0b3fd4b7aa03e315f7256b1af","0524b5c458a3eeda6b3e70fb26ac8f9431de5f93"],"s2Url":"https://semanticscholar.org/paper/fef1056a69be6f597b4866bc3ee306bf01a4df0d","s2PdfUrl":"","id":"fef1056a69be6f597b4866bc3ee306bf01a4df0d","authors":[{"name":"D. A. Beckingsale","ids":["2309393"]},{"name":"Olga Pearce","ids":["2217777"]},{"name":"Ignacio Laguna","ids":["1696759"]},{"name":"Todd Gamblin","ids":["33289410"]}],"journalName":"2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS)","paperAbstract":"Increasing architectural diversity makes performance portability extremely important for parallel simulation codes. Emerging on-node parallelization frameworks such as Kokkos and RAJA decouple the work done in kernels from the parallelization mechanism, allowing for a single source kernel to be tuned for different architectures at compile time. However, computational demands in production applications change at runtime, and performance depends both on the architecture and the input problem, and tuning a kernel for one set of inputs may not improve its performance on another. The statically optimized versions need to be chosen dynamically to obtain the best performance. Existing auto-tuning approaches can handle slowly evolving applications effectively, but are too slow to tune highly input-dependent kernels. We developed Apollo, an auto-tuning extension for RAJA that uses pre-trained, reusable models to tune input-dependent code at runtime. Apollo is designed for highly dynamic applications; it generates sufficiently low-overhead code to tune parameters each time a kernel runs, making fast decisions. We apply Apollo to two hydrodynamics benchmarks and to a production multi-physics code, and show that it can achieve speedups from 1.2x to 4.8x.","inCitations":["a6a906ae9727a33409eaa207253a6ad32a871c11"],"pdfUrls":["https://doi.org/10.1109/IPDPS.2017.38"],"title":"Apollo: Reusable Models for Fast, Dynamic Tuning of Input-Dependent Code","doi":"10.1109/IPDPS.2017.38","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IPDPS.2017.38","venue":"2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS)"},
{"entities":["Access control","Code refactoring","Comparison of privilege authorization features","Confused deputy problem","Confusion","Experiment","Hardening (computing)","Java","Java Class Library","Java Programming Language","Java virtual machine","Job Control Language","Observable","Privilege (computing)","Software maintenance","Stack-oriented programming language","Usability","Vector (malware)","Version","Vulnerability (computing)","hearing impairment"],"journalVolume":"","journalPages":"1027-1040","pmid":"","year":2017,"outCitations":["3e0dd412a6ce23ee193004e567ef43802087c651","9d2cabf936ec6a003c0173008b985431da2a66a4","1b40d2904c9137bdf36a80524ad0d3f25215a91a","0cd7c4a974a2d1b35a7a500b4f58126982956ed7","00815d5c9c25f69efeaa7c38ce0377fc1b3260ca","585f6f6b02e0e56a18745bc9240218ab3bb3bd11","0512f137ea37133028c9116f4f76f18c7d493e99","5493f512ba418c21f1ce20e20985157f7509007c","00a9ba0063d34ec56792849a67ef57b4601becbb","557555195d8cc631281988661984ed8c4e91b395","24ef374b1ad7f1cb25db95957bb4563f0e831c53","88d4d0b80fdd23d384b050e9951fa76d0bb7e5b1","33888bf64fa1182ab28e10da99cc2166cef41c4f","72cd420cf1f87d85b10b87fca638f33c7b28ed0b","195897495cfaf1890192911b52d5e761765c5fad","ad8d021ec13f6d8f178f80d950c54ab563c202a2","7536007058f529427ee9f2ce1b6b08afd5f2b777","070b61be33df9504b00c233abf4f8bc17ee255ec","04bae0c0934c6ba8e31e7de83027a5641489b733","8e865e9eab571f95b06f318593c51aea568060ac","f1e394b9569f2c13c23515075f9b1e7d1fa3b00e","2f38968530d0970f7392d9d8868ff83759ae21c2","690001d2bc3645c3fa2bb17b35c93c793e721199","9bb072299ba67badaa80a18700f770e5c41da44b","26fd9d028ed3557a7ffb6f3452380b41eb246b30"],"s2Url":"https://semanticscholar.org/paper/e5d155abafe7d7b05e6db7ce1176cf8c99b95ece","s2PdfUrl":"","id":"e5d155abafe7d7b05e6db7ce1176cf8c99b95ece","authors":[{"name":"Philipp Holzinger","ids":["3490654"]},{"name":"Ben Hermann","ids":["39888100"]},{"name":"Johannes Lerch","ids":["34972481"]},{"name":"Eric Bodden","ids":["1752222"]},{"name":"Mira Mezini","ids":["1681134"]}],"journalName":"2017 IEEE Symposium on Security and Privacy (SP)","paperAbstract":"While the Java runtime is installed on billions of devices and servers worldwide, it remains a primary attack vector for online criminals. As recent studies show, the majority of all exploited Java vulnerabilities comprise incorrect or insufficient implementations of access-control checks. This paper for the first time studies the problem in depth. As we find, attacks are enabled by shortcuts that short-circuit Java's general principle of stack-based access control. These shortcuts, originally introduced for ease of use and to improve performance, cause Java to elevate the privileges of code implicitly. As we show, this creates many pitfalls for software maintenance, making it all too easy for maintainers of the runtime to introduce blatant confused-deputy vulnerabilities even by just applying normally semantics-preserving refactorings. How can this problem be solved? Can one implement Java's access control without shortcuts, and if so, does this implementation remain usable and efficient? To answer those questions, we conducted a tool-assisted adaptation of the Java Class Library (JCL), avoiding (most) shortcuts and therefore moving to a fully explicit model of privilege elevation. As we show, the proposed changes significantly harden the JCL against attacks: they effectively hinder the introduction of new confused-deputy vulnerabilities in future library versions, and successfully restrict the capabilities of attackers when exploiting certain existing vulnerabilities. We discuss usability considerations, and through a set of large-scale experiments show that with current JVM technology such a faithful implementation of stack-based access control induces no observable performance loss.","inCitations":[],"pdfUrls":[],"title":"Hardening Java&#x2019;s Access Control by Abolishing Implicit Privilege Elevation","doi":"","sources":[],"doiUrl":"","venue":"2017 IEEE Symposium on Security and Privacy (SP)"},
{"entities":["Computation","Data mining","Random forest","Similarity measure","Value (ethics)"],"journalVolume":"","journalPages":"395-403","pmid":"","year":2017,"outCitations":["5af0e69ff389f3355bf0d95570dd2791449200c3","1ad15c08556c8f8e3739703857ea01077ce738c5","46b09a6095d02a0f239fb890c13dba7fbceef0bc","c5fc615e184da7ceffbdcda4288c23019f4b8fd6","d6a452ce55cc8cb5202e6b0a20ce4154036380e9","24e6cf0796237f21c780a3f0c996817f57b3a1bd","4fba6cf1fec9888feb4477da6d2985194a188d9c","c2a77c8771051b389fee220c0ead3d5a6e8024e1","205ee06a3f3fff0c64d6849e940d8559e7c227b4","0dddeae55bf055d810fc2cd6ec99d548fef484bb","1860f84062d513be68d7e6db67e27ddd3f2f5319"],"s2Url":"https://semanticscholar.org/paper/0977dd7a1092e8a417ed22b9ca26dacee99e0347","s2PdfUrl":"","id":"0977dd7a1092e8a417ed22b9ca26dacee99e0347","authors":[{"name":"Saket Sathe","ids":["25635969"]},{"name":"Charu C. Aggarwal","ids":["1682418"]}],"journalName":"","paperAbstract":"Random forests are among the most successful methods used in data mining because of their extraordinary accuracy and effectiveness. However, their use is primarily limited to multidimensional data because they sample features from the original data set. In this paper, we propose a method for extending random forests to work with any arbitrary set of data objects, as long as similarities can be computed among the data objects. Furthermore, since it is understood that similarity computation between all <i>O</i>(<i>n</i><sup>2</sup>) pairs of <i>n</i> objects might be expensive, our method computes only a very small fraction of the <i>O</i>(<i>n</i><sup>2</sup>) pairwise similarities between objects to construct the forests. Our results show that the proposed similarity forest approach is very efficient and accurate on a wide variety of data sets. Therefore, this paper significantly extends the applicability of random forest methods to arbitrary data domains. Furthermore, the approach even outperforms traditional random forests on multidimensional data. We show that similarity forests are robust to the noisy similarity values that are ubiquitous in real-world applications. In many practical settings, the similarity values between objects are incompletely specified because of the difficulty in collecting such values. Similarity forests can be used in such cases with straightforward modifications.","inCitations":["71ea4bdcd1210829fd66fcf62d3bb80ded0a8cde","390173a5889695097385fe6833359e79ac486e16"],"pdfUrls":["http://doi.acm.org/10.1145/3097983.3098046"],"title":"Similarity Forests","doi":"10.1145/3097983.3098046","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3097983.3098046","venue":"KDD"},
{"entities":["Anomaly detection","Computation","Kernel density estimation","Spatial database"],"journalVolume":"","journalPages":"945-959","pmid":"","year":2017,"outCitations":["03baeccbfe8c8cff26aacda69149a05d597880d6","08ac4b9b82e1a9420e0036b4a419d0f90d8574fe","4dfe724dad48aca90e4491b709971f7056ea19a3","1e4558354f9509ab9992001340f88be9f298debe","9c346f8a40d31d884c8d5496d1d46a4a0b1848d7","741abfcb621d9aa19aa79e4aa5c5cddb1473b3da","170f35e43d9abea37a970b2e3f5ac13489950afe","332162f79ec80ee092ab122f8aee9370bc3719d4","9ec241c5f9a3cb29468e1992a3965291dc943790","044c1f31a27014301b5c879406275b70d62f320a","fe286b96fc0544d9fabcbae2a600242b64df193a","4e06596889af2933ab4a08ec81c4a545005c240b","645cc2506af907d292933cfb75ca89688a1e9d83","162d958ff885f1462aeda91cd72582323fd6a1f4","cd800900fbd9bc89a35ff597a7ddfe74aceefa55","82c199eaea4d0ee821afd86881e1c3cfb25478cc","780e5d3445dfb01d8b0e4e195669a7ad88ef492c","1be16d8c557b15cdf2db9e7eb4453f2274fd60af","71a068afb5c36437cfd6ffd40538935fb1f9dbf0","7550b1c4abfd8fb046847f20cac360217057c47a","483482168f727fb851ad0076dbedbcf0600d89a9","bcf2d9d2a382dd782a7ec26f1656ca5327781225","23981d138a1a2309d785bedd772320a8bfa55fd4","6d8bb0b21eedbf45029449bdedfa36836c75c00e","13a375a84a6c414b85477a401541d3e28db1e11a","0c4867f11c9758014d591381d8b397a1d38b04a7","e69d9f792fa7f3851e321cc7c973d3ecb0b0c66d","bc6abce994bfc38aa07ddc6d871e6e7f692be6c7","6e6f5ee06cca0da864d25767f5eec9e86d16312f","a65125a7447e63f46b5f0e4e9c9f3c70cf0c3de0","36d858eb19bba43244b92f7faabfce47b13f2403","105ffb0e5fd7ad2bae390161a28dd16f51e2b2a0","59c704202d45792ab8ae27a26772eeaa0a4b9c5c","2a43f9e8e9e4d6011a0287b5ef315bd24fd308e1","0bad381b84f48b28abc1a98f05993c8eb5be747d","8b81aedc30417e6d60586d8c34e96cbc21431396","7bcc53f1baf3358517a602d856192faea9442c91","1ffcb27536ab5436e6d753919ab27ac1a44b4b69"],"s2Url":"https://semanticscholar.org/paper/4937876603808427510230d9d7bdf15dfd686ebf","s2PdfUrl":"","id":"4937876603808427510230d9d7bdf15dfd686ebf","authors":[{"name":"Edward Gan","ids":["40209711"]},{"name":"Peter Bailis","ids":["2740804"]}],"journalName":"","paperAbstract":"Density estimation forms a critical component of many analytics tasks including outlier detection, visualization, and statistical testing. These tasks often seek to classify data into high and low-density regions of a probability distribution. Kernel Density Estimation (KDE) is a powerful technique for computing these densities, offering excellent statistical accuracy but quadratic total runtime. In this paper, we introduce a simple technique for improving the performance of using a KDE to classify points by their density (density classification). Our technique, thresholded kernel density classification (tKDC), applies threshold-based pruning to spatial index traversal to achieve asymptotic speedups over na&#239;ve KDE, while maintaining accuracy guarantees. Instead of exactly computing each point's exact density for use in classification, tKDC iteratively computes density bounds and short-circuits density computation as soon as bounds are either higher or lower than the target classification threshold. On a wide range of dataset sizes and dimensions, tKDC demonstrates empirical speedups of up to 1000x over alternatives.","inCitations":["38a96a0585e6d4c5f9fe5d326fd639bb289e69f8","fa099d45212e0b0e6486b6bd378e6f4fd06c222d","0de36e77e0abf1efd2c7631450d7899f443ac099"],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3064035","http://www.bailis.org/papers/tkdc-sigmod2017.pdf"],"title":"Scalable Kernel Density Classification via Threshold-Based Pruning","doi":"10.1145/3035918.3064035","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3064035","venue":"SIGMOD Conference"},
{"entities":["Algorithm","Arboricity","Clique (graph theory)","Color","Computation","DTIME","Edge coloring","Email","Graph coloring","Line graph","Message passing","Polylogarithmic function","Recursion","Telecommunications network","The Globe and Mail","Time complexity","Vertex (graph theory)"],"journalVolume":"","journalPages":"175-184","pmid":"","year":2017,"outCitations":["211a34bc1ef86b550be3af4fc95df3d5a556c1b0","10d9b4b9984d32c8211ce98ac0284811f9e093b1","1d3e168bee7fe6216ec668614e5da7ca6cb82504","aa052149b40abaabbcdf637b85c7bc3c6ed570cc","ce14dc549c2b8dd9d71e538dea1265bfc1d81019","9979072b031d2d65a590a4f421e9700ff952dcc0","64257fbe36c61d28f1761d4ae98efd62adfecc6d","1b7142d759fddfc03e8735e1048e45c3cec73326","e18dfb9ed0095a642f8e9f821b41d6e74a5fa867","2faae8bab8d7314608f0c268d5e485604971dadf","145c3ca2ea0faebcdc42de8fa24dc57ecdca341d","e84d4c6ee79b0515a5f8d4873151107960c55c4e","0e0b8def400fb8c4b9c42a1b99679af6dfeb511a","029f5343ab0234cac6bfc99fd1a92ef5ecae3821","56622335ab668bd14403154a2589414c610472ce","2492685847defcff7c2b251559b824b55177e565","0a18b0195b85a34d42652527932103595671a31c","5d1d295955032ce426ceb5d7aebebd4ce6099ec0","f394c14552688b35ac2e1ee31de8aceffe682c75","5e493ab3e938d34aeca99d463463d58a863ee97e","92de7f724a73fbf1a79fd369f69f0905cb80e530","aedc64e55b822d3db28090086338d1609b10161a","d00db20e0a1a92d4bb566d20e3341060b9f4158a","e0905d1b5cf144bbadd085acb94aee9880f482fc","d5aa5c2e5add29abd1023587c2e93a97bc2a6c8e","01f2dc9dbc45ec3179f825fd86c9e6487cc9b52f","17d3d569ff60ef353c50dc498f8fe31bc2884615","5b54368b3ee99678c92bac4137224a45a34d89dd","02109a749ee1d0cf4570fd23b04f08dcc568c586","3f00b1360b7be9605022137d16c98458225c92c1","1b5b48e349c7a264a62a05cc1d654a8122f9133f","1f912ac1e1f8a9bfda1cf7664648a74b6559a407"],"s2Url":"https://semanticscholar.org/paper/420fc03783c7948a7940e237a7b521a6459c727f","s2PdfUrl":"http://pdfs.semanticscholar.org/420f/c03783c7948a7940e237a7b521a6459c727f.pdf","id":"420fc03783c7948a7940e237a7b521a6459c727f","authors":[{"name":"Leonid Barenboim","ids":["1798546"]},{"name":"Michael Elkin","ids":["1785569"]},{"name":"Tzalik Maimon","ids":["32572413"]}],"journalName":"","paperAbstract":"In the distributed message-passing setting a communication network is represented by a graph whose vertices represent processors that perform local computations and communicate over the edges of the graph. In the distributed edge-coloring problem the processors are required to assign colors to edges, such that all edges incident on the same vertex are assigned distinct colors. The previouslyknown deterministic algorithms for edge-coloring employed at least (2∆− 1) colors, even though any graph admits an edge-coloring with ∆ + 1 colors [36]. Moreover, the previously-known deterministic algorithms that employed at most O(∆) colors required superlogarithmic time [3, 6, 7, 17]. In the current paper we devise deterministic edge-coloring algorithms that employ only ∆ + o(∆) colors, for a very wide family of graphs. Specifically, as long as the arboricity a of the graph is a = O(∆1− ), for a constant > 0, our algorithm computes such a coloring within polylogarithmic deterministic time. We also devise significantly improved deterministic edge-coloring algorithms for general graphs for a very wide range of parameters. Specifically, for any value χ in the range [4∆, 2 ∆) · ∆], our χ-edge-coloring algorithm has smaller running time than the best previously-known χ-edge-coloring algorithms. Our algorithms are actually much more general, since edge-coloring is equivalent to vertexcoloring of line graphs. Our method is applicable to vertex-coloring of the family of graphs with bounded diversity that contains line graphs, line graphs of hypergraphs, and many other graphs. We significantly improve upon previous vertex-coloring of such graphs, and as an implication also obtain the improved edge-coloring algorithms for general graphs. Our results are obtained using a novel technique that connects vertices or edges in a certain way that reduces clique size. The resulting structures, which we call connectors, can be colored more efficiently than the original graph. Moreover, the color classes constitute simpler subgraphs that can be colored even more efficiently using appropriate connectors. Hence, we recurse until we obtain sufficiently simple structures that are colored directly. We introduce several types of connectors that are useful for various scenarios. We believe that this technique is of independent interest. ∗ Open University of Israel. E-mail: leonidb@openu.ac.il ∗∗ Ben-Gurion University of the Negev. Email: elkinm@cs.bgu.ac.il ∗∗∗ Open University of Israel. Email: tzali.tm@gmail.com This research has been supported by the Israeli Academy of Science, grant 724/15. ar X iv :1 61 0. 06 75 9v 1 [ cs .D C ] 2 1 O ct 2 01 6","inCitations":["c18459919bd10630eeaad61e59dac7d63e6e0186","9c17f5c76ff9e48a065d0022c56f18533290400d"],"pdfUrls":["http://arxiv.org/abs/1610.06759","https://arxiv.org/pdf/1610.06759v1.pdf","http://doi.acm.org/10.1145/3087801.3087812"],"title":"Deterministic Distributed (Delta + o(Delta))-Edge-Coloring, and Vertex-Coloring of Graphs with Bounded Diversity","doi":"10.1145/3087801.3087812","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087812","venue":"PODC"},
{"entities":["Algorithm","Artificial neural network","Batch processing","Computation","Convolution","Data dependency","Deep learning","Graphics processing unit","Parallel computing","Pipeline (computing)","Random access","Random-access memory","Resistive random-access memory","Throughput"],"journalVolume":"","journalPages":"541-552","pmid":"","year":2017,"outCitations":["6a8851358df3ecd5164a417110aed4037793f64f","0ec0e80ebb61ddf97dc26cea65e5013b6de998b1","534f6ea4ce0127e5da7f1cafb6334b59ad15b83f","8ed8b196e71ce675772a390c669d9b3426f8dddb","211a125c77da70a958d1dc9f70ecc29b9a69f796","f2c2fbc35d0541571f54790851de9fcd1adde085","68837728232463651283edbb7ef0c93b2f502b2b","6f4d58486b1c6d710586b1d182ddad7d09a8da11","069eafae5ee9df25ff5c457bb636f73b98d8f6e9","1740eb993cc8ca81f1e46ddaadce1f917e8000b5","23d14ab0f18fa881a2ac8ae027be6b9f2c91d74d","0b1c6f52c76b441cb2598f3b8ac132d921ec8274","1a07186bc10592f0330655519ad91652125cd907","398c296d0cc7f9d180f84969f8937e6d3a413796","eef1f3f44d249a37c8382f77ed9770b62e8bc158","81b7dcaef4a53daab41658a4d1e97972d04b3384","398dee13b3aaaefdf14c78cc1e00dcf265795fd3","3ac3cf82ff8f43db2e467f792d22d57d068f7ee0","01959ef569f74c286956024866c1d107099199f7","722fcc35def20cfcca3ada76c8dd7a585d6de386","318a5a4119b27ca433e037a0f1a23f609a2845d4","01e6176d319e3bfecc3667447c5bbaf2d00b9c7c","a8e8f3c8d4418c8d62e306538c9c1292635e9d27","1e40d8b7ccac6afbfdf5c89f203f368735e051f9","c2cd8dee0a1d732858b41f27e4aeb0389f270563","46f74231b9afeb0c290d6d550043c55045284e5f","0404d8f580496852b7bd9ff65e30fded0c7f797f","464b5d7f1a114eba10c344aea92339177c8adecc","1e2e423a8e45e430be916ae92011a2e8cb8c805c","6cabaaacd2fec7509be155b45c8e4e9352a7f442","4a72e2599548361d4a4a3fb1249f17e842bcf681","2b88cc9988d70a950b3eb50e99c8f0a6722210b3","5f0ac9b48c392abff9773e36c11dd245a5e4eef9","1bfea750e709e1720ec451bdf6bd57b55d85e3cb","5d4c19546369ddcd68b2314be24996f0017d673b","9e3c09b071088ab75cb5f977a0965234132be707","b8d608ab84ce81e8c4df90503e0723f75005161c","42f54d1656f40dbc41548d2dbbb00326005c7d12","03ff3f8f4d5a700fbe8f3a3e63a39523c29bb60f","7cd29ed1da71593bfb79b553ba6c5ee39ccf7a7b","d67175d17c450ab0ac9c256103828f9e9a0acb85","06902cb95ede2c305db4000852014f276b25c082","10b014e882764f5800ecdcbaba1fa08795d0c54d","749076c5d579ef469e65bff964a1f2bffe0cc202","061356704ec86334dbbc073985375fe13cd39088","2d8450ec56926a34fe1c25180f0b303c5cc67f2d","2c709915e1fa01a21580096ece6c373fae69f1f7","178631e0f0e624b1607c7a7a2507ed30d4e83a42","9952d4d5717afd4a27157ed8b98b0ee3dcb70d6c","162d958ff885f1462aeda91cd72582323fd6a1f4","3b2697d76f035304bfeb57f6a682224c87645065","97158a13a871720757114a8dcb8d8f4e104d8693","3b049d8cfea6c3bed377090e0e7fa677d282a361","235fa2b1983eff9f13b27c620cda389359126bf4","93e6e8532b4fdb5170d4a57fd492041946c16e18","304a4823e540294704cc624f4e01c50cd1d291ec","9f3cc03b1c9fc9c3e080e42a0ddd34cdd24a20fb","179f80848143cf109fa6aebae6c3844da03b062c","132e3d3b5cfc2f59db6ed69ac1eac4a1ee6dca71","2fc8a439f0f73462f875870c403c90ea1fb99e41","6f93e0325e577f49f4bed46a2adcfee4a649dc83","357e97b04375f09e9f4cfd45c69ecd9d7f0a15e1"],"s2Url":"https://semanticscholar.org/paper/2e9d33cba9f547a2e3febe088bae443f1d74d594","s2PdfUrl":"","id":"2e9d33cba9f547a2e3febe088bae443f1d74d594","authors":[{"name":"Linghao Song","ids":["2719313"]},{"name":"Xuehai Qian","ids":["2064331"]},{"name":"Hai Li","ids":["38929644"]},{"name":"Yiran Chen","ids":["5442167"]}],"journalName":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)","paperAbstract":"Convolution neural networks (CNNs) are the heart of deep learning applications. Recent works PRIME [1] and ISAAC [2] demonstrated the promise of using resistive random access memory (ReRAM) to perform neural computations in memory. We found that training cannot be efficiently supported with the current schemes. First, they do not consider weight update and complex data dependency in training procedure. Second, ISAAC attempts to increase system throughput with a very deep pipeline. It is only beneficial when a large number of consecutive images can be fed into the architecture. In training, the notion of batch (e.g. 64) limits the number of images can be processed consecutively, because the images in the next batch need to be processed based on the updated weights. Third, the deep pipeline in ISAAC is vulnerable to pipeline bubbles and execution stall. In this paper, we present PipeLayer, a ReRAM-based PIM accelerator for CNNs that support both training and testing. We analyze data dependency and weight update in training algorithms and propose efficient pipeline to exploit inter-layer parallelism. To exploit intra-layer parallelism, we propose highly parallel design based on the notion of parallelism granularity and weight replication. With these design choices, PipeLayer enables the highly pipelined execution of both training and testing, without introducing the potential stalls in previous work. The experiment results show that, PipeLayer achieves the speedups of 42.45x compared with GPU platform on average. The average energy saving of PipeLayer compared with GPU implementation is 7.17x.","inCitations":["1cc0b5aaa294e56c6d20ec672ad7f89972227ff3","e629e31f7fcbb8e0197f5f8d3d24f48f09d2d278","381e7525bc8b9d47ae0343e471f5f1d5e6963bbe","96bcfbb766744dbd2127ca50f4411a8857849dad","e530b5dbced106b72ecd0d1ef542d2c9eaf00856","381b008b49d04c1bd5ff00649521fa028b9d3ea8","bf5a2bed3a98f6dc093460a6592a5d1b99a60ae5","5fa68bb091d5a46c67c341d9c3d3b37442431abb","270ac71d9fdfbeb27c296865a27ed068207a330e","cb14f2138d6de2f459841430aa52a2b6f2d3fc90","7f7e5559c6d25b8d42c61d83988fded70e3b10d1","5ce80b41443518a14d800f6b93b4057bbb007432","ab74a44813207a7728e1e13b7dfee1347fc20c3b","7af861caca22d40f2680abaa0e1d7e46f6418acb","29d80ba32a2fbe36aab8d4424802039d8be4f370","6c07e102414ddf46551026c3cb9e4f93ee17c1ca","de58743ea346bc5f69dbedecf440f87e5710f3d4","1769a24a37dc3a3492c5ad686f8c11fb8789f5c9","5a831b0846fc8fbaf1befa27a3f91ed89f865133","7b9339d3b359310ddbaf6caae13d3a65f657bf04","99a9304cc17be64d2e779c1ca5f824e7b52f4261","6f537c85b5160a6375306f6eca1a3e8558e7dbd9"],"pdfUrls":["http://alchem.usc.edu/portal/static/download/nn_memristor.pdf","http://doi.ieeecomputersociety.org/10.1109/HPCA.2017.55"],"title":"PipeLayer: A Pipelined ReRAM-Based Accelerator for Deep Learning","doi":"10.1109/HPCA.2017.55","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCA.2017.55","venue":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)"},
{"entities":["Algorithm","Attribute–value pair","Experiment","Key-value database","Operator overloading","Randomness","Redis","Response time (technology)","Server (computing)","Simulation"],"journalVolume":"","journalPages":"195-206","pmid":"","year":2017,"outCitations":["2821db8962fce43265215a9c4b8d66af02e16ae7","0831a5baf38c9b3d43c755319a602b15fc01c52d","1d99b7749a9311d2db24a3d84728e444eff23e4b","1021a40384a9adf9e85aa99ea587135197a9ca1b","065465ac37607a347186ea50873fc63d17cd2c79","8e597e69610a3ee22cb11fcd83edd8a2d46bfed1","87ec26d1622d0293173b3b695d71a17e425d68c5","0437df54051fc7c4d9b5f2941c8488e6a765918f","2308ec37e6bc4d59aedbfe13994d905dc72385e8","18a5f443299784479e78d9e77f175af57cb2fa2b","00ab6bb0df7fd605038d64eb5798b31481a39dd0","37c7b481a82a98fdba98dba8240014c770102343","53a5485c197ec44f6fb9f0308cac7716e50d1584","64a6dd2a598d5f012a54fe6ca06d4f7235f66626","09f0751d7452cd0480d572171593d07996325fcb","6b7e2de8bb1b67f4487e0efa3551538f9e126458","50f4b86e497b5a0d4f2b576238babf99a5c0f661","2ae7c9a89c7f6c105b68343dda9a0159eb2f118d","17bef89290a3054ecfdd68d2fe5be8066d59b856","6e669e90a34c4179f9364406d8a7a7f855745086","c03998fba80568419db43e7e9fd78f8f7d1798dc"],"s2Url":"https://semanticscholar.org/paper/ba65e9d69cd8510095db28b421ca4ec96c3059d5","s2PdfUrl":"","id":"ba65e9d69cd8510095db28b421ca4ec96c3059d5","authors":[{"name":"Tim Kaler","ids":["3164907"]},{"name":"Yuxiong He","ids":["1772774"]},{"name":"Sameh Elnikety","ids":["1767761"]}],"journalName":"","paperAbstract":"Interactive services send redundant requests to multiple different replicas to meet stringent tail latency requirements. These additional (reissue) requests mitigate the impact of non-deterministic delays within the system and thus increase the probability of receiving an on-time response.\n There are two existing approaches of using reissue requests to reduce tail latency. (1) Reissue requests immediately to one or more replicas, which multiplies the load and runs the risk of overloading the system. (2) Reissue requests if not completed after a fixed delay. The delay helps to bound the number of extra reissue requests, but it also reduces the chance for those requests to respond before a tail latency target.\n We introduce a new family of reissue policies, Single-Time / Random (SingleR), that reissue requests after a delay d with probability q. SingleR employs randomness to bound the reissue rate, while allowing requests to be reissued early enough so they have sufficient time to respond, exploiting the benefits of both immediate and delayed reissue of prior work. We formally prove, within a simplified analytical model, that SingleR is optimal even when compared to more complex policies that reissue multiple times.\n To use SingleR for interactive services, we provide efficient algorithms for calculating optimal reissue delay and probability from response time logs through data-driven approach. We apply iterative adaptation for systems with load-dependent queuing delays. The key advantage of this data-driven approach is its wide applicability and effectiveness to systems with various design choices and workload properties.\n We evaluated SingleR policies thoroughly. We use simulation to illustrate its internals and demonstrate its robustness to a wide range of workloads. We conduct system experiments on the Redis key-value store and Lucene search server. The results show that for utilizations ranging from 40-60%, SingleR reduces the 99th-percentile latency of Redis by 30-$70% by reissuing only 2% of requests, and the 99th-percentile latency of Lucene by 15-25% by reissuing 1% only.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3087556.3087566"],"title":"Optimal Reissue Policies for Reducing Tail Latency","doi":"10.1145/3087556.3087566","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087556.3087566","venue":"SPAA"},
{"entities":["Best, worst and average case","Canvas fingerprinting","Digital footprint","Fingerprint","Information","Spatial variability","Tor Messenger"],"journalVolume":"","journalPages":"2021-2036","pmid":"","year":2017,"outCitations":["1a987c4fe65fa347a863dece665955ee7e01791b","0ae31e412826cf1dfb45c85b14df33f1863b5011","42fc84bb1b9e1445ea393ff2d1dda78d748276ea","18b1c62d6c7fa0e619f0c13172d8852b3d5a71fe","2452c0b6563b95c743e70b91782af73f4aba6826","14d19771bc69f1d41f63052e56e134f9ed569c1e","39a651ace163e7741bc98e266201afe83ad63219","067c6f27a67976a7e67f567e5568996d6ca14962","377240154366ee44e56e172c2279b3a81cf2c50b","3b00ce776aa36ae4cdcb9d96d219bad61d5d510e","1ed8886fb8a9ba6b57b8742d0e5b76a32daa8fad","096a2026fa46abd43143e8ae3dc0ce6414310cf9","133e0e83dc6877c6d417431e875cd57876153893","0662c6e20750068e03711b950ee4b730f61ef342","d9ef20252f9d90295460953e8ab78667b66919ad","2e4b61ca5ff7af8743e4365edeb40cd87df15c5a","69a3527f4e2d301536cbe28e02d3789bcdc66c11","2fc986fd942797c0bcbebf01f464b375f1dd464d","af5582fb02dceaaf4b0fef84ea6bd8fb7ca14acc","2b5e90bc36ded540baf24cdc8a5bb8e66032bc08","065bbbf17109015ebdb6921f58af8f33dce90a3c","ac8bf8fb2489950d0cd616def80e5c78afc3e9fa","8750c0b8094957003fd7f681f9ef8af47b86a99d","2d2ff1db0079fc0a47a37d41be43c0c9a435e4bb","3212929ad5121464ac49741dd3462a5d469e668d"],"s2Url":"https://semanticscholar.org/paper/1cbada0c285c0cd1f884afa82af6a505b81b9a1b","s2PdfUrl":"","id":"1cbada0c285c0cd1f884afa82af6a505b81b9a1b","authors":[{"name":"Rebekah Overdorf","ids":["1857191"]},{"name":"Mark Juárez","ids":["36654005"]},{"name":"Gunes Acar","ids":["3307413"]},{"name":"Rachel Greenstadt","ids":["1754991"]},{"name":"Claudia Díaz","ids":["3091712"]}],"journalName":"","paperAbstract":"Recent studies have shown that Tor onion (hidden) service websites are particularly vulnerable to website fingerprinting attacks due to their limited number and sensitive nature. In this work we present a multi-level feature analysis of onion site fingerprintability, considering three state-of-the-art website fingerprinting methods and 482 Tor onion services, making this the largest analysis of this kind completed on onion services to date.\n Prior studies typically report average performance results for a given website fingerprinting method or countermeasure. We investigate which sites are more or less vulnerable to fingerprinting and which features make them so. We find that there is a high variability in the rate at which sites are classified (and misclassified) by these attacks, implying that average performance figures may not be informative of the risks that website fingerprinting attacks pose to particular sites.\n We analyze the features exploited by the different website fingerprinting methods and discuss what makes onion service sites more or less easily identifiable, both in terms of their traffic traces as well as their webpage design. We study misclassifications to understand how onion services sites can be redesigned to be less vulnerable to website fingerprinting attacks. Our results also inform the design of website fingerprinting countermeasures and their evaluation considering disparate impact across sites.","inCitations":["9a8a43e774851e9f9029fa91189ec85d4db06b28","97219fe63c4e3c95b39b0b9f2956217f3dedda14"],"pdfUrls":["https://www.freehaven.net/anonbib/cache/unique-ccs2017.pdf","http://doi.acm.org/10.1145/3133956.3134005","https://homes.esat.kuleuven.be/~mjuarezm/index_files/pdf/vulnerability-onion-services.pdf","https://users.cs.fiu.edu/~carbunar/teaching/cis5374/cis5374.2017/slides/onion.pdf","https://arxiv.org/pdf/1708.08475v2.pdf","http://arxiv.org/abs/1708.08475","https://arxiv.org/pdf/1708.08475v1.pdf"],"title":"How Unique is Your .onion?: An Analysis of the Fingerprintability of Tor Onion Services","doi":"10.1145/3133956.3134005","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3134005","venue":"CCS"},
{"entities":["Central processing unit","Interaction","Memory protection","Moore's law","Protection ring","User space"],"journalVolume":"","journalPages":"132-137","pmid":"","year":2017,"outCitations":["2343df8034837c982fe77492480a7bb1ea908c02","17886b4911ffd50d7e02a574caad34a286458b3a","b0ac2616034f56ab1469afb935b55fe7e37f8f41","69b7456f3d47fed3745239b5f67996a0b9a1a5c9","71a2d8c473f13d0c664f751db97e81128281b1eb","4c891cc807e701ba31a378a1e672d26bbac22cdc","17f19d9ec093ef82a10f1276fc53c10d4667836d","7aaede70f5efcb1542a80707c1f0f8b01955a7d2","06bf84f98e7dd39be8d96eb67bafbf56d61bc715","4c60ec65bd28c6637f82ee3f6ad28d6eaa9c4824","7927d7f25e2ca4ca23c1a95d671d4dde36f9fbc7","07f0e56d1c37c213cd5c617dbfba5a0549629a19","eeb5ec8d23124c4b352aa4168cb03f87f9480c92","104eb3716d8b2d7e6d69805357d5b7fb87caff3e","77cab38bef9d1b8b7bcfd3bb382c9d55541465e1","0a289fd7b14345822b1acda6d82750b15d59663e","1bd2d9fb62832737735d011154834b7c80c7e50a","6a8f65381a627a2db6c756a7185d9106f0acefec","3367eaf02789f5dcf741318fcc18c0dea8fcbb76","0a65844b2e318305c7031eb53cb306efe7763d22","0038ce3977245eb24664222903fc17699f3636e7","8eaaf9e6a63b8d7562d27ec73aca36931815b83a","d296252ddf0e2c6b7422008d703843c1863bd15b","5ac7a4dca5509c9dee49d96b4c3c62cc1d0bb9dd"],"s2Url":"https://semanticscholar.org/paper/7a5cf32d06c3b2e4f27bee372a53bdc2e8fcfbce","s2PdfUrl":"","id":"7a5cf32d06c3b2e4f27bee372a53bdc2e8fcfbce","authors":[{"name":"Andrew Baumann","ids":["1919355"]}],"journalName":"","paperAbstract":"Moore's Law may be slowing, but, perhaps as a result, other measures of processor complexity are only accelerating. In recent years, Intel's architects have turned to an alphabet soup of instruction set extensions such as MPX, SGX, MPK, and CET as a way to sell CPUs through new security features. Unlike prior extensions, which mostly focused on accelerating user-mode data processing, these new features exhibit complex interactions and give system designers plenty to think about.\n This calls for a rethink of how we approach the instruction set. In this paper we highlight some of the challenges arising from recent security-focused extensions, and speculate about the longer-term implications.","inCitations":["b3f2a11d45757e675be123d55ec0eb192bcca990","e9ecf9568b3c504bb1e5cdfefbd5a567b284ce9e","03e89626cbb864fb1243b4ee8b4037020a9250eb","0f627e7b85e9d0c59d9acde72464afa702795536","7cdf63e05545333f10f69317383a3a88c6e29d03"],"pdfUrls":["http://doi.acm.org/10.1145/3102980.3103002","https://www.microsoft.com/en-us/research/wp-content/uploads/2017/05/baumann-hotos17.pdf"],"title":"Hardware is the new Software","doi":"10.1145/3102980.3103002","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3102980.3103002","venue":"HotOS"},
{"entities":["Aspect-oriented programming","Aspect-oriented software development","Cognitive dimensions of notations","Interdependence","Introspection","Open-source software","Security through obscurity","Simultaneous editing","Software repository"],"journalVolume":"","journalPages":"67-78","pmid":"","year":2017,"outCitations":["0539d2d8d2515091e9a6a2b23fd137d905285805","167366978d3923de5b7cc0a4f41deec01c6473c0","2cb3af0ac1ac84ee60183fa2a9f9b64db7dab308","7fba36f6dd5daec3f69de12345fef20f90486a7c","6cd8bb7192347eb7defaef456d9a81c05f6e8037","76a0257d5fc6026dc15cc71b8ce97e7f6a618b6c","20b8f47e76a2866d8c223cf66432edb8d4332c9b","1b50986f1787ea334d64c5f848e1096b6b154df0","3a69b2518b5c639d8035fb2ce8dc1f442cbcaa44","265e121e7de432dcbeb281418137236d1950b7c3","67d1a1de663a5c52e694cc6eda5601bbe84e3787","c54d93d3973972f610d96ad668bb8f4354b54508","84f1c273b50487bbbb6f1c02d8a1b62f9f92d278","ff291488ac21515b6fd0ee36f6cb555133a4a6ac","21866c792bbbda991b19cfafef0375ac37018663","be6142b34ead5f1187fb744fcbcbde4763bde5c5","b547f8e9b17121f93b98c034322609fbaa4a2082","3278529b50498a0dac812e39e7cdc22e109c9094","4ac6fae400b55a4651a3576af8d2eec8a278f4d6","ce98ab59237de545b5486810b6870da84bf63ed1","8cb147d7ebd97efc27448d5bd0c44268a87bfabd","0414d0a85097dee507e9a3f18f3747363b94a16b","1f9c422ac5f4cae59f3c6959b62f45c213d05666","1eabcc0f1feb32a28480abcb64cdc89af149ea7a","bea4ba6ab20de9b8332eb87836d5f90dfe75017f","b7dbfb1a8b9c4f36f1c947227150766f6a4fbc3f","5383f464d555acb5c2df2777d197ec7681a60bfd"],"s2Url":"https://semanticscholar.org/paper/2010e5ce157eede9642da725b7f1d55da34b19a9","s2PdfUrl":"","id":"2010e5ce157eede9642da725b7f1d55da34b19a9","authors":[{"name":"Robert Bill","ids":["15334167"]},{"name":"Patrick Neubauer","ids":["37942063"]},{"name":"Manuel Wimmer","ids":["1690158"]}],"journalName":"","paperAbstract":"The maintenance of modern systems often requires developers to perform complex and error-prone cognitive tasks, which are caused by the obscurity, redundancy, and irrelevancy of code, distracting from essential maintenance tasks. Typical maintenance scenarios include multiple branches of code in repositories, which involves dealing with branch-interdependent changes, and aspects in aspect-oriented development, which requires in-depth knowledge of behavior-interdependent changes. Thus, merging branched files as well as validating the behavior of statically composed code requires developers to conduct exhaustive individual introspection. \n  In this work we present VirtualEdit for associative, commutative, and invertible model composition. It allows simultaneous editing of multiple model versions or variants through dynamically derived virtual models. We implemented the approach in terms of an open-source framework that enables multi-version editing and aspect-orientation by selectively focusing on specific parts of code, which are significant for a particular engineering task. \n  The VirtualEdit framework is evaluated based on its application to the most popular publicly available Xtext-based languages. Our results indicate that VirtualEdit can be applied to existing languages with reasonably low effort.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3136014.3136037","https://publik.tuwien.ac.at/files/publik_261415.pdf"],"title":"Virtual textual model composition for supporting versioning and aspect-orientation","doi":"10.1145/3136014.3136037","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136037","venue":"SLE"},
{"entities":["Apache Flink","Apache Spark","Computer data storage","Data-intensive computing","Dynamic random-access memory","HPCC","In-memory database","In-memory processing","Jumpstart Our Business Startups Act","Memory management","Throughput"],"journalVolume":"","journalPages":"549-558","pmid":"","year":2017,"outCitations":["5653a0e51c48e03be15182a0f00fdb387702f10d","c6dd5763ce70176c6850a32affa273660b73b887","1ccc78a4ccbebf07d464fa2b0d7d7fb50f76d9b3","53a886ccfb6b2b64ad42d79c110853ef78c344c1","15869be2a649ac2c82a9e3f1fb57317d21b95fcc","0558c94a094158ecd64f0d5014d3d9668054fb97","242b5b545bb17879a73161134bc84d5ba3e3cf35","24281c886cd9339fe2fc5881faf5ed72b731a03e","96cfd8eb3d72fa464d222eca5f65aa7e8995ac37","62a0dc7c9c45a5a0a016386100f35537bfe1707d","3aa1bc5f67254b4e2d86170b70adfacf937008f6","d81c5a462f5b2fd04897453333b6a3cb660cc47d","9c378565a0b510890b474df039caab1f2d58bded","3ea19afaddac7778540ea86f0609a99cbc1d18d8","9f948448e7a5f0cc94cd53656410face8b31b18a","0ad3358ffc0d5e44311160767cc0fb65ccd25b00","00fddb9852f5ebbb195d4f7fc2339ee29de78541","65ad9178eb3e3bb6ef01df6ced56e389e911376c","da30f9be5550ba3f0c96eba6a2ad7de28f2efeb2","334782999a2ea3cf4616d8c5df80f6b98fc2df2b","067c7857753e21e7317b556c86e30be60aa7cac0","8dae2c51620cc8980726a466605d2deac52c144b","83b25db931334a9b649e100eb19270a381fad85b","267ed9139427b2d30b17cfc91880b04fb910983a","208843384ddd6c85cd867c1d38a3731ef8aa0bcd","0fa21a92b4f55fb235a803d7e203ecee7face136","1bc50f26cbb045936612be9afb0f48c6d7bad913"],"s2Url":"https://semanticscholar.org/paper/9d84066054cb0d2faf71c59e83a60fb7194a2b1c","s2PdfUrl":"","id":"9d84066054cb0d2faf71c59e83a60fb7194a2b1c","authors":[{"name":"Pengfei Xuan","ids":["2706342"]},{"name":"Feng Luo","ids":["40520239"]},{"name":"Rong Ge","ids":["38342948"]},{"name":"Pradip K. Srimani","ids":["1713512"]}],"journalName":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)","paperAbstract":"In order to boost the performance of data-intensive computing on HPC systems, in-memory computing frameworks, such as Apache Spark and Flink, use local DRAM for data storage. Optimizing the memory allocation to data storage is critical to delivering performance to traditional HPC compute jobs and throughput to data-intensive applications sharing the HPC resources. Current practices that statically configure in-memory storage may leave inadequate space for compute jobs or miss the opportunity to utilize available space for data-intensive applications. In this paper, we explore techniques to dynamically adjust in-memory storage allocation and provide optimum memory to compute jobs. We have developed a dynamic in-memory storage controller, DynIMS, which monitors memory demands of compute tasks in real time and employs a feedback-based control mechanism to adapt the allocation of in-memory storage. We test DynIMS using HPCC and Spark workloads on a HPC cluster. Experimental results show that DynIMS can achieve up to 5X performance improvement compared to systems with static memory allocations.","inCitations":[],"pdfUrls":["http://dl.acm.org/citation.cfm?id=3101187"],"title":"Dynamic Management of In-Memory Storage for Efficiently Integrating Compute-and Data-Intensive Computing on HPC Systems","doi":"","sources":["DBLP"],"doiUrl":"","venue":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)"},
{"entities":["Adobe Streamline","Compute kernel","Loss function","Open-source software","Oracle Database","Parallel computing","Performance prediction","Runtime system","Speedup"],"journalVolume":"","journalPages":"32-42","pmid":"","year":2017,"outCitations":["fb4d1597e6fb1c8c9e1e8888fe4bbc8530c977cd","982b17f6441a51d53b7a7ce5093260604975fe00","a4f3faf40a34c08db5381329012bdd0b9c8b374f","5f3cce1bc739ebfc03e003010d3438bb318efc14","2fee9034f208596eefe51cc66acb98a99f6500dd","13b9a0f935d11105e7cbebe75187568372a9c34b","2c2fa29dfbbab106f1b94cdfdc67939d3355bd30","3e1bfe26ae904c6949111aab499e8ebbb8344cf8","c0d4c5713dba6472edb651334d25c3a5aa78d6f3","5732268aea93dc3aa6b6f4a2db57a609b9714417","07f3965cb6906c6da87c41ecbf2afb4b9ef2e856","4a58e3066f12bb86d7aef2776e9d8a2a4e4daf3e","273d591af0bdcbefe37d7dd9150e2f612ca7121d","3c48458d8f77b04c9e69b61f5beddf770e61ec04","13fe6b22febed9e51dd5b63e8b360a625b9e9a88","e1316c4e823a61a0c820e15f752d64eb62e1883e","1400901fca7695d180a44d1f0f49f6830e0ceeeb","87cd4d592fa384c9c4b95791b89591489f7240e8","755e4ad5468747b31b9d6994885b17ad957dc9d7","33f2baa7ca8b940e7606f030639c7953247685c1","602dcccc2bf6af1ca84355d530ff1e0a79391217","7926d0b9dfc36c13910a1850cd91a7db862f0014","2abe6e7ba6393d84e987702f52b42681bf041e4f","d8a67b13e2d4051dd7a451232314a5d778a1b047","07f0f2be6fc670034eaf62e21863bc72891f4950","70898287bad8556efaf7daaa206fb7ad175469e3","23177452df15b652dd54a59324502b92c99687a7","1ef7f02bce931c8e9ef529e095b274132ce4011a","14505c2bdd3822d7a62385121d28ba3eb36fea1d","e240f361ee577a1662b719a23c6117ecad3d307c","048db2a71844b96963709b0f254d5a1a5afa6384","42d91e6210fca1f9cee495f7181b6642f0237559","79818ab3f303ec9ba2838b63de1dbb48dc6924d2","021d7ca29cea1a55e5095e17ddb658e54e054793","8a21e393f1b6ac5690e4fa9f0152a57e77dda62c"],"s2Url":"https://semanticscholar.org/paper/15ad36fe02346e6fd1224bc41cf1842002526ed2","s2PdfUrl":"","id":"15ad36fe02346e6fd1224bc41cf1842002526ed2","authors":[{"name":"Ahmed E. Helal","ids":["39717121"]},{"name":"Wu-chun Feng","ids":["1688860"]},{"name":"Changhee Jung","ids":["39916306"]},{"name":"Yasser Y. Hanafy","ids":["1935184"]}],"journalName":"2017 IEEE International Symposium on Workload Characterization (IISWC)","paperAbstract":"Porting sequential applications to heterogeneous HPC systems requires extensive software and hardware expertise to estimate the potential speedup and to efficiently use the available compute resources in such systems. To streamline this daunting process, researchers have proposed several &#x201C;black-box&#x201D; performance prediction approaches that rely on the performance of a training set of parallel applications. However, due to the lack of a diverse set of applications along with their optimized parallel implementations for each architecture type, the predicted speedup by these approaches is not the speedup upper-bound, and even worse it can be misleading, if the reference parallel implementations are not equally-optimized for every target architecture. This paper presents AutoMatch, an automated framework for matching of compute kernels to heterogeneous HPC architectures. AutoMatch uses hybrid (static and dynamic) analysis to find the best dependency-preserving parallel schedule of a given sequential code. The resulting operations schedule serves as a basis to construct a cost function of the optimized parallel execution of the sequential code on heterogeneous HPC nodes. Since such a cost function informs the user and runtime system about the relative execution cost across the different hardware devices within HPC nodes, AutoMatch enables efficient runtime workload distribution that simultaneously utilizes all the available devices in performance-proportional way. For a set of open-source HPC applications with different characteristics, AutoMatch turns out to be very effective, identifying the speedup upper-bound of sequential applications and how close the parallel implementation is to the best parallel performance across five different HPC architectures. Furthermore, AutoMatch's workload distribution scheme achieves approximately 90% of the performance of a profiling-driven oracle.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/IISWC.2017.8167754","http://synergy.cs.vt.edu/pubs/papers/helal-automatch-iiswc17.pdf"],"title":"AutoMatch: An automated framework for relative performance estimation and workload distribution on heterogeneous HPC systems","doi":"10.1109/IISWC.2017.8167754","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IISWC.2017.8167754","venue":"2017 IEEE International Symposium on Workload Characterization (IISWC)"},
{"entities":["Algorithm","Central processing unit","IBM OpenPower","Library (computing)","Open MPI","Run time (program lifecycle phase)","Shared memory","Xeon Phi"],"journalVolume":"","journalPages":"13-24","pmid":"","year":2017,"outCitations":["32b873df142242696c13abd1788617d3f643a173","15ee1b0a68d65fa53aecfe16aec6e8894de95a68","5d4d8678c7abe4a99fe87cf2d1dd12a62d80dba2","ad91ce97c65bd785a8a0f7fb7ad8c22360886f42","5e983f887015d1de9a88a9eea97bc75b3f3f28da","7605fe626c3598ee68fefaf1f4e1d21fcd2cb3d4","5a92a26a2550ca38f2b4e7b1252cb678f5d48e55","8e80783316380bc01d69e9c7551e6a602303ac50","8e2011a5edab5780aef6303cb95774cf524f4e37","b472170ec02b9380d5aefdcd64380282c375ea4c","2a0c9f8248aad793810dfc2ec2bc21a8ebdca6f4","179264a9a96a7962d7ca6cc22aa605e3b121d9dc","5b2933791939f0244650daebd3da92904119f69b","1e2338427ceffd262bc7059c257b144917cf281c","42f26cd7904dda8843e357c283f323e9101f37c3","47488c34088ccd8adf78fa24b5c82dcbcf200021","019153a4a937fddf0f0e24a9e07e3053f6f990b1","830ad9ce5c06ed1ace24c44df4be9111e296d820","6aaebcfff03eaf2b278b8c713ace841f39651d02","3f750233c3e20da134b4427eb6645f877ac0a503","7e7292367aaa2d36d8d8b641425de15943f7032b"],"s2Url":"https://semanticscholar.org/paper/6f01ef0fd14d4b7bf99844df7d47edd674625e0f","s2PdfUrl":"","id":"6f01ef0fd14d4b7bf99844df7d47edd674625e0f","authors":[{"name":"Sourav Chakraborty","ids":["29719971"]},{"name":"Hari Subramoni","ids":["1802958"]},{"name":"Dhabaleswar K. Panda","ids":["1731654"]}],"journalName":"2017 IEEE International Conference on Cluster Computing (CLUSTER)","paperAbstract":"Multi-/many-core CPU based architectures are seeing widespread adoption due to their unprecedented compute performance in a small power envelope. With the increasingly large number of cores on each node, applications spend a significant portion of their execution time in intra-node communication. While shared memory is commonly used for intra-node communication, it needs to copy each message once at the sender and once at the receiver side. Kernel-assisted mechanisms transfer a message using a single copy but suffer from significant contention with a large number of concurrent accesses. Consequently, naively using Kernel-assisted copy techniques in collectives can lead to severe performance degradation. In this work, we analyze and propose a model to quantify the contention and design collective algorithms to avoid this bottleneck. We evaluate the proposed designs on three different architectures - Xeon, Xeon Phi, and OpenPOWER and compare them against state-of-the-art MPI libraries - MVAPICH2, Intel MPI, and Open MPI. Our designs show up to 50x improvement for One-to-all and All-to-one collectives (Scatter and Gather) and up to 5x improvement for All-to-all collectives (Allgather and Alltoall).","inCitations":["5ceb46a025ecb09fa0f8240c7bef23a5580eaea4"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/CLUSTER.2017.106"],"title":"Contention-Aware Kernel-Assisted MPI Collectives for Multi-/Many-Core Systems","doi":"10.1109/CLUSTER.2017.106","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLUSTER.2017.106","venue":"2017 IEEE International Conference on Cluster Computing (CLUSTER)"},
{"entities":["Algorithm","Data structure","Fock state","GAMESS (US)","Hartree–Fock method","Legacy code","Memory footprint","Message Passing Interface","Microprocessor","OpenMP","Parallel computing","Supercomputer","Thread (computing)","Xeon Phi"],"journalVolume":"","journalPages":"39:1-39:12","pmid":"","year":2017,"outCitations":["9ad521237d5d6a52c260f9772973bb7c564a2b8b","003f450dae97526423328285debf7c9a02f24cd0","b9992dbb2c10bdcb561f072e9fac0fd61f7c9799","b4e3057bcd459a68d8c63d2e96202c3742e82e10","62255642e3e314705567a6f45a5d3054227397f9","2f28a3d34e5d7372dd266f0b26ba31358dd5f225","06b7bfd1a5af3e2fda259ac658f0629717a4c939","d399ad91e0cefccffc843e9f6448fa6fc40919b5","ef06e488a15f0c6d0763e308ae17ac90229724db","0f3fd3bf563564f18a1470b714c89ba59689c459","6fbec8a91fb52aff579ca45369a862a445c9e0fb","a1cfb89c870d587a5ba37e73af7c78221e2ceca7","3941f89c8367bb070ed6e66a3def190c4ff2cdf4"],"s2Url":"https://semanticscholar.org/paper/3e23a19a94d4cf363e6f3dc278c45f6c53a1daa4","s2PdfUrl":"","id":"3e23a19a94d4cf363e6f3dc278c45f6c53a1daa4","authors":[{"name":"Vladimir Mironov","ids":["1879231"]},{"name":"Yuri Alexeev","ids":["2143727"]},{"name":"Kristopher Keipert","ids":["3095566"]},{"name":"Michael D'mello","ids":["4694106"]},{"name":"Alexander Moskovsky","ids":["3246206"]},{"name":"Mark S. Gordon","ids":["35112573"]}],"journalName":"","paperAbstract":"Modern OpenMP threading techniques are used to convert the MPI-only Hartree-Fock code in the GAMESS program to a hybrid MPI/OpenMP algorithm. Two separate implementations that differ by the sharing or replication of key data structures among threads are considered, density and Fock matrices. All implementations are benchmarked on a super-computer of 3,000 Intel&#174; Xeon Phi<sup>&#8482;</sup> processors. With 64 cores per processor, scaling numbers are reported on up to 192,000 cores. The hybrid MPI/OpenMP implementation reduces the memory footprint by approximately 200 times compared to the legacy code. The MPI/OpenMP code was shown to run up to six times faster than the original for a range of molecular system sizes.","inCitations":[],"pdfUrls":["https://arxiv.org/pdf/1708.00033v1.pdf","http://doi.acm.org/10.1145/3126908.3126956","http://arxiv.org/abs/1708.00033","https://arxiv.org/pdf/1708.00033v2.pdf"],"title":"An efficient MPI/openMP parallelization of the Hartree-Fock method for the second generation of Intel® Xeon Phi™ processor","doi":"10.1145/3126908.3126956","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126956","venue":"SC"},
{"entities":["Central processing unit","Coprocessor","Experiment","Field-programmable gate array","Hash join","Multi-core processor"],"journalVolume":"","journalPages":"433-445","pmid":"","year":2017,"outCitations":["6fa839ddc0c756f6e26d5bf896823a81b216c16c","6f46f2f204a89e505873deb402850154425b2c19","05eddbc2d37cf994fb7c6a4558e2679e5f40d23e","8572f800eeaae01b7faf7be62e041e3d08ea83ec","11c116b2750e064ce32b3b8de8760234de508314","7afe6271e3c345f0a1b60ab458c0de2e3ef940d5","704b2e130ad85ee95e136d00d55cce7da883cf57","31adf244a5da36629e769937bc2b7ec5fe00c458","3a79681b3f8252b5b828ac2f7a754610d2f7d9be","031b8aa2004c4a1d38bddc8229becc5126468d86","0f205bcecad72673a8a67c06a08d6c21c165d61e","3376caa6140cf46ccb4c22454aa0069d8f05615c","30db3e0e6add0c2c699e863e56eb8b5e89b10951","05a99a31ed4a5a25e21859fca562b7c0f70ab0dc","55180f27718451f931bb2768446fe26ccb01ba68","afc4e448edba15519b5ea054d7b47af1a5aab93d","4139eedda8717ffd60052f68ed78b996aaebfced","c94710a719d1721b7ffc8769ff440540731d7d7c","1ab74d44982409beeca21efb2dbcb97a5c7de4b2","871d2308e72cfa439e46f9729d799ae0fd7b67c0","829bb25d7b86a990232a392d468b0f0999c1939b","4eec0e89509a1b0db15eb830799bb62498fdeb1b","c0b438eee7bd423606da9335229602b9c77c10d4","9b10f9a29167b3350b01f00db84410f40a066fdd","1423fd30c0a6ffd2d0d08f5d8800587581a44185","15b7c7dbfece993f16054d1feaa8e141f59bc427","22fe96a684a69e952102c0f3e19dd5bf15b659ec","59ccde4b5676fe600d231c33326f6e372d60ce4a","988cb03fbe7169eb0a41e18e03c511b94f15d92d","be87b87400d68221be036d8c7b36b1dc09d2775b"],"s2Url":"https://semanticscholar.org/paper/cfd6cfdab32782394652944ca4ccac7ec9f2c2a5","s2PdfUrl":"","id":"cfd6cfdab32782394652944ca4ccac7ec9f2c2a5","authors":[{"name":"Kaan Kara","ids":["34680313"]},{"name":"Jana Giceva","ids":["2811717"]},{"name":"Gustavo Alonso","ids":["1687400"]}],"journalName":"","paperAbstract":"Implementing parallel operators in multi-core machines often involves a data partitioning step that divides the data into cache-size blocks and arranges them so to allow concurrent threads to process them in parallel. Data partitioning is expensive, in some cases up to 90% of the cost of, e.g., a parallel hash join. In this paper we explore the use of an FPGA to accelerate data partitioning. We do so in the context of new hybrid architectures where the FPGA is located as a co-processor residing on a socket and with coherent access to the same memory as the CPU residing on the other socket. Such an architecture reduces data transfer overheads between the CPU and the FPGA, enabling hybrid operator execution where the partitioning happens on the FPGA and the build and probe phases of a join happen on the CPU. Our experiments demonstrate that FPGA-based partitioning is significantly faster and more robust than CPU-based partitioning. The results open interesting options as FPGAs are gradually integrated tighter with the CPU.","inCitations":["077eb0de78522a25420fe0c0ab4e864a82ac7177","e9908fbf95834a81b99473277b9298cc54a5c471"],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3035946"],"title":"FPGA-based Data Partitioning","doi":"10.1145/3035918.3035946","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035946","venue":"SIGMOD Conference"},
{"entities":["Programming language","Run time (program lifecycle phase)","Software engineering"],"journalVolume":"","journalPages":"256-267","pmid":"","year":2017,"outCitations":["531190c5faae2437c5f8b1e2c7ee403cdf272305","d1a2bb461b37913659e8bb4ec359e4f07d471ceb","e487a90095cc8dd9b783391a5c4ce91b175b6d23","407a9722d948e2a8f53316e33f04b949e5bf9f32","1a112d3bad8b19a998908fee9af2657a48219f35","06b2c1f8301a98e268271cc2e3d33c50932b09d4","7e73399ec22ff2e89745f754c71ae1829801ad19","0f95717ff75d4e02cc7c981765cfb41115fadf89","a0d4f558071bf3dea7e4f2367b133f0e7e2764e1","8f6111c692b996cc06ac59b2b09f0f538fe6693a","3b9a02e717cae12d3762afe5fb56cc25464df2f0","2276f1c307064a110c3274258d4dab3665aec71a","07f639d1d93d18664151e683765e96ac7f95a67b","322f4b2b7c86f022496e3a3c6a9a2da5c7dccc6b","30ffc7c6aab3bbd1f5af69fb97a7d151509d0a52","780c44a2a7a262a23b2c8ea37e86cecef0752dfb","7b6df9b9f0975e4cc5f76966c00a6fd4eac26876","2e2289d350ee7b0627f5e54785d21fc07c1e9d3f","5371dcee6d9a55805dcc66dbcaf6b210ac7c654f","2438e5da4708053e4233dfa2402fa1ed0ce3335f","c26ff79189d1c06080a53427857dab3556f9d6fb","1560a93ea151d6e130f5ec845a33ad65cf62d467","fe222f8044272610ebd7de690d3de728276a6a36","da6353163c1fa35a9a117bba885cefdd9de9f51a","eed647284425aad525f0babecee51b53f06009b2","29f2a4b0e812c459ad2f9ed3781067cb83a1f7c9","748f7f8a7ed6111dc624d3e4f22810c1a010beb4","53e04e3bd9b3589747eca3c8156b6d414a4cd1d2","3ee47780011ee618bd5a64624a662375e1958e0a","23f4b96752fdb29b74b25f491e0df05a0701e6db","dc9338d735ebcb4bb3e2665db0ee216ffe68d0cd"],"s2Url":"https://semanticscholar.org/paper/798d05714f7520100073ec81e8426a21c6ca1973","s2PdfUrl":"","id":"798d05714f7520100073ec81e8426a21c6ca1973","authors":[{"name":"Rui Pereira","ids":["1686967"]},{"name":"Marco Couto","ids":["39534603"]},{"name":"Francisco Ribeiro","ids":["35851129"]},{"name":"Rui Rua","ids":["37685890"]},{"name":"Jácome Cunha","ids":["1689398"]},{"name":"João Paulo Fernandes","ids":["1715196"]},{"name":"João Saraiva","ids":["1733627"]}],"journalName":"","paperAbstract":"This paper presents a study of the runtime, memory usage and energy consumption of twenty seven well-known software languages. We monitor the performance of such languages using ten different programming problems, expressed in each of the languages. Our results show interesting findings, such as, slower/faster languages consuming less/more energy, and how memory usage influences energy consumption. Finally, we show how to use our results to provide software engineers support to decide which language to use when energy efficiency is a concern.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3136014.3136031"],"title":"Energy efficiency across programming languages: how do energy, time, and memory relate?","doi":"10.1145/3136014.3136031","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136031","venue":"SLE"},
{"entities":["(a,b)-tree","B+ tree","B-tree","Concurrency (computer science)","Data structure","Experiment","FLOPS","Fast path","HTML","Non-blocking algorithm","Overhead (computing)","Search tree","Transactional memory","Vendor lock-in"],"journalVolume":"","journalPages":"293-302","pmid":"","year":2017,"outCitations":["00b3ebd315991e5b5f4e6beec2e1488281368028","835c0aa9082e7fd7937c802f64e0393e267e6496","01b029b617b6ac6dcdd3a0622f7ba459ff830f00","dcfafc13f92e52bb693087db8cd8e0af0954f553","51e8b3cfca99f4477f7267ea633adb72a442288a","6479bc321dd7859eb6b6b8cca100bade86940526","e52fe20fcee68879d78069c8688055f31f8f188e","0fc3098d4413dd75ef750c8dddf6cbe87ea9d8d7","e02ec8cd92c8e687b9e343868b07e0898302c72f","a16d51087e5505b296e2b15a4b5b6fddff194ebf","3697307709b52af113469831457f3525d389c7cd","942f2a6df29234c304b69129872835d60cf5e9e9","0df83d1108c6af842908743473f4cb8c0af7a802","46e61ad29ab20618fb551afbc00ebb8eb4e9be21","2900690eb3132a4d1536226d629727de41f38a66","ab310a105f6d5b04d798c4be0d6890ba385463c4","cf04ca948a4f1932766613398c6c741c8c2758dc","88f8ce2d785888c86db1ddcd97dcdc4ee948ab32","3f505df2ea7730fd006987677467ee8c996620a0","22839816fbd337d77b81a7f3c6430324e057c250","8a8d3dcf409212fc53c09f74d28abb135acdbc13","1372e033396fe1a5aa12a1b148c5015a2e09d1d6","20ccc698045ec67de16517e3af799c9ca4b95596","d3842f290898211d4f02d66877194876c9a0a3e4","94cecbcd0530b40a6b2cc0b55c4725d123caa831","17ccb526085ec88fa2d35d8c8d7dc246b9d1bbe3","4f499f49640fb39d16b9c05f42503b5d6b0cb531","bdf2591487539051926341ee52e8c62198a3633c","01d6463bd6dc85f938edb6e75c96c997c8b06799"],"s2Url":"https://semanticscholar.org/paper/6144837b78596253906461406df8ef2d3f612a0b","s2PdfUrl":"http://pdfs.semanticscholar.org/6144/837b78596253906461406df8ef2d3f612a0b.pdf","id":"6144837b78596253906461406df8ef2d3f612a0b","authors":[{"name":"Trevor Brown","ids":["40310370"]}],"journalName":"","paperAbstract":"Algorithms that use hardware transactional memory (HTM) must provide a software-only fallback path to guarantee progress. The design of the fallback path can have a profound impact on performance. If the fallback path is allowed to run concurrently with hardware transactions, then hardware transactions must be instrumented, adding significant overhead. Otherwise, hardware transactions must wait for any processes on the fallback path, causing concurrency bottlenecks, or move to the fallback path. We introduce an approach that combines the best of both worlds. The key idea is to use three execution paths: an HTM fast path, an HTM middle path, and a software fallback path, such that the middle path can run concurrently with each of the other two. The fast path and fallback path do not run concurrently, so the fast path incurs no instrumentation overhead. Furthermore, fast path transactions can move to the middle path instead of waiting or moving to the software path. We demonstrate our approach by producing an accelerated version of the tree update template of Brown et al., which can be used to implement fast lock-free data structures based on down-trees. We used the accelerated template to implement two lock-free trees: a binary search tree (BST), and an (a,b)-tree (a generalization of a B-tree). Experiments show that, with 72 concurrent processes, our accelerated (a,b)-tree performs between 4.0x and 4.2x as many operations per second as an implementation obtained using the original tree update template.","inCitations":["877581fb962f543a03fc5ae83204c8bf06ea8b7a"],"pdfUrls":["https://arxiv.org/pdf/1708.04838v1.pdf","http://arxiv.org/abs/1708.04838","http://doi.acm.org/10.1145/3087801.3087834"],"title":"A Template for Implementing Fast Lock-free Trees Using HTM","doi":"10.1145/3087801.3087834","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087834","venue":"PODC"},
{"entities":["Algorithm","Anytime algorithm","Experiment","Polynomial","Time complexity","Tree decomposition"],"journalVolume":"","journalPages":"273-287","pmid":"","year":2017,"outCitations":["1ffc977d82798cfab971e4abdb46ae7b707c57c0","05a9a562a215e855fa4f3f324eb219313f5f5dec","8157707e331a21b7aa1c00cf7e64c0e36a0367cd","0da1b4f93ac3f7ebc5e70fae547e2a85581c6745","846726e0c5b3e5d74fe5292bbf4866e4b93cd4e2","f57fe866f8b059bd9fbb372d706e484368cc2883","1b1c21d0749f34d0acf8c3aca0b3bc25ba6a0b4f","ef4ff3c0f2d686832458cd629709927441476019","b05011bcb117b104ca0efe5b13bf011d73c1977a","257a11168aa90ae86b57afa336c453f9abd2a49e","6d5d6156d37705e63fac2e10948d25f6b8f10109","68cec9a204178c15072c84d8ca090179e5c17450","980a8e1b59a782dde9fb4f1e84be61a74d80f332","d1605abcbae458feddd57b8037f4dfbf91e20171","3c1f77be28d487cedb197100556b55613cf532f8","ec80574bde11fc789b83247e70e40c765b48386b","bf6af5a2d45964c7daf45a22976d6f2ffe205c16","2e4a2236ecfe43630c3988a3fb953be09ed54b7a","072f30530dbec74eff91243b08587cd2df14ab77","3717b9b45aa7dd3b9379147e7db8cfd87390aff5","e4af685b3b228e09f77789f054eaf90351a5aed7","b17f651273c629e615523bb0003d9d42b80175ca","5d0d098dd284b74504d27af7c5e0e5c50f1b7fd4","07a0a39ff4447ce9f0d2b06978d7b00a6d9fab15","eab7b3ccd519323bb29b0ac4011001936deb06c6","13b77bed4038262f2dedc3bfba8a1905e1e8dd2b","1fafe0013162e7e7154950ac710d18d8c2971295","3da04674c4fedc0bc72f3eac2d4fbdd7cea9ecf4","85f260779afce6a7586eddb7ca9648f8a5bdf106","a894334d4af1318ef2f5c6c06cf88f614ff3550b","01be0018674ecb8a7cc3a8a43745e0fd8a518dfc"],"s2Url":"https://semanticscholar.org/paper/0acc3b8712c183f3b4ae3cb194a5803ea4a5a187","s2PdfUrl":"","id":"0acc3b8712c183f3b4ae3cb194a5803ea4a5a187","authors":[{"name":"Nofar Carmeli","ids":["3393481"]},{"name":"Batya Kenig","ids":["2831260"]},{"name":"Benny Kimelfeld","ids":["1679226"]}],"journalName":"","paperAbstract":"We present an algorithm that enumerates all the minimal triangulations of a graph in incremental polynomial time. Consequently, we get an algorithm for enumerating all the proper tree decompositions, in incremental polynomial time, where ``proper'' means that the tree decomposition cannot be improved by removing or splitting a bag. The algorithm can incorporate any method for (ordinary, single result) triangulation or tree decomposition, and can serve as an anytime algorithm to improve such a method. We describe an extensive experimental study of an implementation on real data from different fields. Our experiments show that the algorithm improves upon central quality measures over the underlying tree decompositions, and is able to produce a large number of high-quality decompositions.","inCitations":["e5724c98020636809508508ec35f8bb14df9dc5e","059940fec3b7348e5728d22113b1c6853847aa69"],"pdfUrls":["http://batyak.cswp.cs.technion.ac.il/wp-content/uploads/sites/81/2017/07/tdenum.pdf","http://doi.acm.org/10.1145/3034786.3056109"],"title":"Efficiently Enumerating Minimal Triangulations","doi":"10.1145/3034786.3056109","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3034786.3056109","venue":"PODS"},
{"entities":["Hall effect","Heuristic","Instrumentation (computer programming)","Internet","Load testing","Multitier architecture","Nautical chart","Profiling (information science)","Queueing theory","Response time (technology)","Run time (program lifecycle phase)","Server (computing)","Testbed","Throughput","Tier 1 network","Web application","Web server"],"journalVolume":"","journalPages":"115-126","pmid":"","year":2017,"outCitations":["387bb95ad5c7635f646b989fe06fcda46447d933","81c343a4f02553094397824c715a852c75091a7e","72c1990b2c992dfb25d48c51c44513c1f99b1baf","d7b2d876862ad356e979b31ce9dfde4c7b340026","e59e46303f112fb68e6bf40bfee3c4dc949515b1","7ae1aa8edbdaad1641f7d3fb55ced8fdd578bd8f","2498644b120efc708e253b3ae9fbb5abba062d50","ef9d6ead4070b0aaed56958d2b5fcd07879161b0","2ff6da15f3f9f8bc529f1e674f3c86909f60df5a","998d7172611819ae1dddbf1256bee64d2ba5eba4","b8220a9f9481254314569847ffb2181e5f52bdd0","0019a2539997a8c38523268b4c03d0316457654d"],"s2Url":"https://semanticscholar.org/paper/d4ff82de141fccda4c2543917299754e9c84a71b","s2PdfUrl":"","id":"d4ff82de141fccda4c2543917299754e9c84a71b","authors":[{"name":"Varsha Apte","ids":["1989470"]},{"name":"T. V. S. Viswanath","ids":["10405465"]},{"name":"Devidas Gawali","ids":["3448900"]},{"name":"Akhilesh Kommireddy","ids":["10444850"]},{"name":"Anshul Gupta","ids":["1696026"]}],"journalName":"","paperAbstract":"A multi-tier Internet server application needs to be analyzed for its performance before it is released. Performance analysis is usually done by (a) load testing of the application on a testbed and (b) building a performance model of the application. While there are a plethora of Web load-generator tools available, there are two problems with these tools: one, the tests have to be configured manually, which can lead to a time-consuming trial-and-error process until the desired performance charts in the appropriate load ranges are obtained; and two, the load generator tools do not produce output that is directly useful for creating a performance <i>model</i> of the application. In this paper, we present <i>AutoPerf</i>, a load generator tool designed to meet two distinct goals, named <i>capacity analysis</i> and <i>profiling</i>. The goal of capacity analysis is to run a comprehensive load test on a Web application, in an appropriately chosen range, at a minimal number of load levels, while still producing an accurate graph of throughput and response time vs load levels. The goal of profiling is to generate a detailed <i>server resource usage profile per request type</i>, without instrumenting the application code. This data (e.g. CPU execution time by Web server for one request) is crucial for parameterizing performance models of the application. AutoPerf intelligently plans and configures its load tests by using analytical results from queuing theory along with some heuristics. Results show that AutoPerf is able to run performance tests very efficiently while still producing an accurate chart of performance metrics.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3030207.3030222"],"title":"AutoPerf: Automated Load Testing and Resource Usage Profiling of Multi-Tier Internet Applications","doi":"10.1145/3030207.3030222","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3030207.3030222","venue":"ICPE"},
{"entities":["Black box","Encryption","Functional encryption","Learning with errors","Naruto Shippuden: Clash of Ninja Revolution 3","Quadratic function","Traceability"],"journalVolume":"2017","journalPages":"650","pmid":"","year":2017,"outCitations":["d4d37fcde3ed7a99845ab3f51e3a69519e4f87b1","76421de7130dcff1a359c8ed70411ed09f71f1cb","91e55f174f8eb5b88736b89e5a0235014e3b1ea3","becddb754d41fa2055be5d50eac0cade5b4004ce","4f68a80dec7eebe30dade51c975f491ee52e7b18","60d8af8746d97abb0d4342ee98081d595d5e758d","6a06c062d995a841e10a15ed5ea809a9ab6e8381","0bd21967574e1971aff7fb70f9dd7ecbed4118c5","02bc3fa288d50fde1745eb149947fd4b5f940769","591772092ce9d7a2b078d499b3a9193416f59eb1","35bd1fddb880a7a59893b915a663dc19b4498e23","3d16773d6b7a183cff002f484b66d55bb99b2e48","1cbdeeb78685e896fe88916d3e74c01c5d8c7775","a81af39a193cc9a087b392d6d49620b96b4f8eb3","28da48429ea84c2e0db1a673f2f2319eb2f23431","6315150466122890a010beca4e5def5891851be7","26c9a6bf0cfcf56d5e9da607d5a02ed49b5c4ac2","25518a206a45b3af9fbb68d11aa905480cf8f61d","8645bc6360dd3705398c984e8ebe83cb3e38c648","382892b73562f6ace340e181300d701f32987409","020ff6532a58ee426217cf4e75ed64af4658bd6a","1b82a2619e4500b908bf89a8a140cd4631b87e52","1e608e5e6693f9ae384ce03c79244ed6406b7ca9","94b248ff6a5639ba077f82650d3f8d760fa3d33f","627976735aaa8f079d6018a79615ce454d3e97da","4a94ad7d52370542090be52da30cc819fb403d47","0ec8116340335a94b09e1f09586ffb945181f4db","29aef15822b7f0fef84e7ac56e6e252cd03ae0b3","0d6cf2ddd2f49a4b513a4e5e1f8876ccfe95e475","186d506bcd042bfad20c83a67d8b59fd5235acb2","32680871e6fd42a028316f334fc35e2dbb92384a","da09bc42bbf5421b119abea92716186a1ca3f02f","0f3f6efbc665124043bc5637fc7c1219d416b9c4","3885a073038bc64266b641fa68ac397058b55be3","19e6f3ea035d33590a8598be68ac82e6f00ce518","2ca36cfea0aba89e19b3551c325e999e0fb6607c","093090c975a71e22cec1948c29da282f30f920f8","370e5b4ec00e883c294ff0628002dae57e206423","87153d5d6d4047c0612748531778a1bb6bb2f90a"],"s2Url":"https://semanticscholar.org/paper/b495f9c7e18734b5349471f0d5d745d73efb57d3","s2PdfUrl":"http://pdfs.semanticscholar.org/b495/f9c7e18734b5349471f0d5d745d73efb57d3.pdf","id":"b495f9c7e18734b5349471f0d5d745d73efb57d3","authors":[{"name":"Shweta Agrawal","ids":["40540677"]},{"name":"Sanjay Bhattacherjee","ids":["2035856"]},{"name":"Duong Hieu Phan","ids":["1680071"]},{"name":"Damien Stehlé","ids":["1803138"]},{"name":"Shota Yamada","ids":["1689211"]}],"journalName":"IACR Cryptology ePrint Archive","paperAbstract":"We provide e cient constructions for trace-and-revoke systems with public traceability in the black-box con rmation model. Our constructions achieve adaptive security, are based on standard assumptions and achieve signi cant e ciency gains compared to previous constructions. Our constructions rely on a generic transformation from inner product functional encryption (IPFE) schemes to trace-and-revoke systems. Our transformation requires the underlying IPFE scheme to only satisfy a very weak notion of security the attacker may only request a bounded number of random keys in contrast to the standard notion of security where she may request an unbounded number of arbitrarily chosen keys. We exploit the much weaker security model to provide a new construction for bounded collusion and random key IPFE from the learning with errors assumption (LWE), which enjoys improved e ciency compared to the scheme of Agrawal et al. [CRYPTO'16]. Together with IPFE schemes from Agrawal et al., we obtain trace and revoke from LWE, Decision Di e Hellman and Decision Quadratic Residuosity.","inCitations":["b61563bac2a6aade6903e3455a2c7515f1699c4a"],"pdfUrls":["http://eprint.iacr.org/2017/650","https://eprint.iacr.org/2017/650.pdf"],"title":"Efficient Public Trace and Revoke from Standard Assumptions","doi":"","sources":["DBLP"],"doiUrl":"","venue":"IACR Cryptology ePrint Archive"},
{"entities":["Cilk Plus","Common subexpression elimination","Compiler","Concurrency (computer science)","Control flow","Control flow graph","Intermediate representation","LLVM","Loop scheduling","Loop-invariant code motion","OpenMP","Optimizing compiler","Parallel computing","Recursion","Scheduling (computing)","Spawning networks","Tail call"],"journalVolume":"","journalPages":"249-265","pmid":"","year":2017,"outCitations":["eaf130a181b812e35154f70a5bc05acf1d70b200","728209cc265fd27f3a4f28265ff051279c747456","1eb4c18aa99f19a8dc91e6235e2dbdb7fd46d06c","72ae6c9b296f58cfcc9185ef3fdfd54a81fe03cc","101bcfb23ad622fa5fed78ca627f0ef3fc8e5624","1156f60e40548096df49528b1342bb3e88b0f378","0606b9b2bedb67039eb1615f8ef5b13f42f8339a","39867c7d684e77377f03d4f83e5dadf4acd8d61b","13f7df91eb208a387d18fbad192c6f0f834f0b82","3ee0eec0553ca719f602b777f2b600a7aa5c31aa","03f5501e776ca19515df15e11f216265f3afc43d","0fb659af82f2277c8a62ac888f4bfd01570e5470","358f1efb36a605462288b5b9707e68621887358d","27a956c44b9beda32618fde7efce542565e06381","934b34df03bff0c934d2808e52403ec8cf97e094","b483cabdce5562753abae51c144d26f3eaac75fb","56e70cd03dfbc9b436b2ffa688ab69ea2fa82fd1","61f6ae61c4e0b0b4333e9cad1feead72ab73b9d4","e7351e01e0d41d666dba23d7a2da0a1f7dcae4af","1f33e83905ee40dfeeacd6c04f64c1af71c2b7fb","7b83b2cc9b4d5c0ce578b96c2508b0aa926fefda","7330ddee7271f498926e5598271cb483dfc4caf1","04b3880ea2ddca5f1b8cba48edee655a4dedbc48","588f239fd53676109cd7996ce5f0cee4639dc89f","1ee116d4253bc30c0988c995a3be2c594337f856","1742aa2092223ca9f78f379ce9f541bac1001aaf","6005fdb7813e0f07d90d6ed8e7beecd733ef4d04","2b0cc03aa4625a09958c20dc721f4e0a52c13fd0","855ebfd962bc26b7b646e3a01983338adf70ce4c","5752172e2c9d97a544798a97fa17b2a627d7116d","0d9c39200e541ce7c5a2f3cfa54302c2c9bc631a","3d985a05e4a49be71d497e7a2ff3fcbeb74c4bc8","7673efb3f26da627247838b427ae3980d97689be","3ccc1e2f8be4c99a38abd10560c606d9256d176b","47fea97038923902a502403219fc44fd22b5d19f","a68e2ede5e01997bc7fe0cf597a06650acdac0f5","950790da1aaa1389327cb35fb65af8ffead25515","8368d2fc947cf6ac46a1d251d1895f2f87c7d498","0bd6329e696abf03e763f0b77d253b352c87d9cb","26999d2b6bd57cf699f9b8b89dd93f3dae982f70","3dff11679346f5344af1018cad57fa14cc349f2f","1c9885c43f26f791a26d44c929ae3ab0c6a79f81","5732268aea93dc3aa6b6f4a2db57a609b9714417","2194c3460ab71f3826db00b045b2ae590c753319","3667d48b43140092f552fef31affa1ddba9636de","145f95174e769bc0195fbf632ffce174f8a1ac1a","0836859831c6c69412ae633bcf47e96355a92d6b","36d2c1290591a3e194df392a54149d5c0548f7d6","2e375fbc7bc0ac5c169056a13839723ae8101055","b8719183f3579e6f0bdf2d98ee500097a28cb9cf","077e8c0df834570e7baa110599825059ce5f34f8","0a89fafea6184b469511ba73735d451da92c18fa","0003b4b4c35f0384596b6f129f7dda8449cdc79f","101f10b90ce859135868668478fbde5882c87458","3486aeaf540c48952120fe853d672af984f40a6a"],"s2Url":"https://semanticscholar.org/paper/6acd2cce7d04bba4af841a5d524a69cc423e671e","s2PdfUrl":"","id":"6acd2cce7d04bba4af841a5d524a69cc423e671e","authors":[{"name":"Tao B. Schardl","ids":["2792832"]},{"name":"William S. Moses","ids":["16521420"]},{"name":"Charles E. Leiserson","ids":["1712661"]}],"journalName":"","paperAbstract":"This paper explores how fork-join parallelism, as supported by concurrency platforms such as Cilk and OpenMP, can be embedded into a compiler's intermediate representation (IR). Mainstream compilers typically treat parallel linguistic constructs as syntactic sugar for function calls into a parallel runtime. These calls prevent the compiler from performing optimizations across parallel control constructs. Remedying this situation is generally thought to require an extensive reworking of compiler analyses and code transformations to handle parallel semantics.\n Tapir is a compiler IR that represents logically parallel tasks asymmetrically in the program's control flow graph. Tapir allows the compiler to optimize across parallel control constructs with only minor changes to its existing analyses and code transformations. To prototype Tapir in the LLVM compiler, for example, we added or modified about 6000 lines of LLVM's 4-million-line codebase. Tapir enables LLVM's existing compiler optimizations for serial code -- including loop-invariant-code motion, common-subexpression elimination, and tail-recursion elimination -- to work with parallel control constructs such as spawning and parallel loops. Tapir also supports parallel optimizations such as loop scheduling.","inCitations":["e191fb663b1dd33d59a8f2c9048a408ae145fca3","2d4fdf953dc3f79fd760b317bca228fe80ec9386","5be83e638fb0bb16d1e3bb51c2f5a5e814d813dc"],"pdfUrls":["http://wsmoses.com/tapir.pdf","http://dl.acm.org/citation.cfm?id=3018758"],"title":"Tapir: Embedding Fork-Join Parallelism into LLVM's Intermediate Representation","doi":"10.1145/3018743.3018758","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3018743.3018758","venue":"PPOPP"},
{"entities":["Battle of Midway","Cloud computing","Kernel (operating system)","Linux","Linux","Multitenancy","Operating system","Peer-to-peer","Serverless computing","The Daily Dot","Throughput"],"journalVolume":"","journalPages":"169-173","pmid":"","year":2017,"outCitations":["225603198cc415d363db8a8a2bd30b0df3c963b1","6d496d510f867274473a01dcb0a1a7bf45d0904f","9747efb725620e0767597b923f174057f7d9e82b","22fd20f23c40ecb9044cae7ee58b76d39fcf45b6","184c5be1a8931fa88b7da10448b4c2fb58f4e150","5cfc936d12bbd8a0f100687b12b20e406215f30a","aa931bfc67b3e7b56671e14facdfe7a85d26992a","08832863bc3f041222f381c8ae143f8a66449059","005718daa82f7880b5b1f3b01e0e8f6aad2b5751","0d2ccae6d37b9e4053fc476887d1565de58e5924","080b1f2c8316dad80d8c385dfcb82335a64a4d29","f0b6e6d3da2853e3a0ea8b11ca68f5ef59ea3b93"],"s2Url":"https://semanticscholar.org/paper/7e4c7ed7c772ef43eda726afe68c25cb2e2357f3","s2PdfUrl":"","id":"7e4c7ed7c772ef43eda726afe68c25cb2e2357f3","authors":[{"name":"Ricardo Koller","ids":["6100194"]},{"name":"Dan Williams","ids":["30904419"]}],"journalName":"","paperAbstract":"From the inception of the cloud, running multi-tenant workloads has put strain on the Linux kernel's abstractions. After years of having its abstractions bypassed via virtualization, the kernel has responded with a native container abstraction that is eagerly being applied in the cloud. In this paper, we point out that history is repeating itself: with the introduction of serverless computing, even the native container abstraction is ill-suited. We show that bypassing the kernel with unikernels can yield at least a factor of 6 better latency and throughput. Facing a more complex kernel than ever and a relatively undemanding computing model, we must revisit the question of whether the kernel should try to adapt, we should continue bypassing the kernel, or if it is finally time to try a new native OS for this important future cloud workload.","inCitations":["33442a58af2978e0d8af8c513530474f8bed6109","2b24b48418ea265d1666cac509e8634bba2e5461","0657ec025e7097d06a798a4eb2f9253fdaef3e68"],"pdfUrls":["http://doi.acm.org/10.1145/3102980.3103008","https://www.sigops.org/hotos/hotos17/papers/hotos17-final99.pdf"],"title":"Will Serverless End the Dominance of Linux in the Cloud?","doi":"10.1145/3102980.3103008","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3102980.3103008","venue":"HotOS"},
{"entities":["Algorithm","Network congestion","Programming paradigm","Routing","Scalability","Scheduling (computing)","Self-awareness","Stock and flow"],"journalVolume":"","journalPages":"9-16","pmid":"","year":2017,"outCitations":["06154716d6d51256ed2bb014ef65ec8b5d41aa26","05b37f4722eddf503ca0d237aaeba14eb9ab9ea3","a32bbaf7b97c3d0d18ad93a52d34c0771ff19bf0","34d2d6e84c4a15eaefe7bcdf49015aad867b25ee","c678e962b158153924bbb24c4900b84375be7e57","12d3952369fd92db86d4a3fff0a6fa8de3509095","55c5a2c1f2f6f66646baf64405464357fa7df8a0","1e157cfbd2fa3ca1b786bdf6bcf3f6cf40ed39bb","346965e005bbffdfb02d6536b057859dc51c879b","1434811cbe1c7831f0ee2974e9093d1e57461f0f","8b0a16e9ab419a2096dbd55d5326607cbc385025","47f91197bf11a475c14b287050edd1476201d586","00f6f16f4b76e931d3924e56674a74fca8d94df3","2e3cc2d55770aac26d3ce0cb6ddd96dbbcfec4cc","b2956f170dfe1df2155608ecfcab79687a131aa8","ca200e61ce15f552bea554fc4635b4dbcd50466e","129567778989fab23b50812b3df30e899e2d6a4e","5a71fd875ff689961ad6dce1046e039af30fc88c","025652412d507a8cf98ecacd8a44d32ce28995e1","19ff9dac013d1ebca1ea1c9845325c9ddafdf93a","093b8adeb29ee4c17b3528c1b9791f275630c8f2","663e064469ad91e6bda345d216504b4c868f537b","4687fdf3c77ef00700fdf1399f7dd81bfe87ef97","2806af1373a9f1f42cf9fe199649c6a24b51e78c","231ba17921ebd80e95771e28dfb5082e169d5a53","c9cb7f464a72cfd833b1932be6bc310c64145784","2a628e4a9c5f78bc6dcdf16514353336547846cc","3167f508865250baa3fd6b924d77a25274968bd1","2e0057911766d411b7a342c8bae2d6e3d29c47cd","24ac696e598717e4752af563c9a477b22c29fefd","3309a3a199478f24f0c5544d8e79aff7c7ed4128","122229239aeba1eb4f1623adb40f1845c582a520","506027ee1a7754aaeb3f6c5dfbd94a1a34179095","5c5d03e884d4f0094b217c62267466fa11432c8e","a86eb622eaaae24053a158a857624470af790bb6"],"s2Url":"https://semanticscholar.org/paper/293ca58169024b0f40ae3342200737767321f6b1","s2PdfUrl":"","id":"293ca58169024b0f40ae3342200737767321f6b1","authors":[{"name":"Asaf Samuel","ids":["40044675"]},{"name":"Eitan Zahavi","ids":["3154206"]},{"name":"Isaac Keslassy","ids":["1785739"]}],"journalName":"2017 IEEE 25th Annual Symposium on High-Performance Interconnects (HOTI)","paperAbstract":"The network plays a key role in High-Performance Computing (HPC) system efficiency. Unfortunately, current HPC routing solutions are not application-aware, and therefore cannot deal with the sudden HPC traffic bursts and their resulting congestion peaks.To address this problem, we introduce Routing Keys, a scalable routing paradigm for HPC networks that decouples intra- and inter-application flow contention. Our Application Routing Key (ARK) algorithm proactively allows each self-aware application to route its flows according to a predetermined routing key, i.e., its own intra-application contention-free routing. In addition, in our Network Routing Key (NRK) algorithm, a centralized scheduler chooses between several routing keys for the communication phases of each application, and therefore reduces inter-application contention while maintaining intra-application contention-free routing and avoiding scalability issues. Using extensive evaluations, we show that both ARK and NRK significantly improve the communication runtime by up to 2.7x.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/HOTI.2017.14"],"title":"Routing Keys","doi":"10.1109/HOTI.2017.14","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HOTI.2017.14","venue":"2017 IEEE 25th Annual Symposium on High-Performance Interconnects (HOTI)"},
{"entities":["Complex event processing","Ethernet hub","Failure rate","Fault tolerance","Home automation","Reliability engineering","Residential gateway","Single point of failure"],"journalVolume":"","journalPages":"41-54","pmid":"","year":2017,"outCitations":["33bfbb042e6ad35c50b48de22a5798783d553735","78c83644fbfa65e69137f57e22fa3b53f225a5d5","0de106f547d644f1c2a13bf767840eb9049ff7fc","a6690317643f1a50d510c0922bb0c473096dc6a4","48d5c7b3dbf631dec66b51f7b7a9e168a86506bd","352680a8eaada2f8fe26afd49b85df7a0ed32179","e1bbd3187d0ae01a5d7e0f6b29d67aacbf5dc09b","45998ae76d590314e6fd930a02d9d49556bc5a64","6a656a567097c53a49b1dbeb9e1e77bebf7524ec","20c450f099b661c5a2dff3f348773a0d1af1b09b","49aec52ff74120061cb35c65dd899f3f7bcb2fab","514e9179cda253e7e04be3107cb3425162e049e8","0832f564cb62f153534e815eeeae620d3cc01c01","0e14b04ee84972831ef0a12e350e5f9ef32c7d26","1160e7bf54e72fa10c769c15a9d319d4798b7b1b","b54bd28a1ec3df9f6a5e13b1f359cf0f2ee699cb","5dd204ae6b82ccaf4a840a704bfd4753e8d48add","5578cabaef7b5dfc88443626e74d2e04951818f7","e847c3ec130da57328db79a7fea794b07dbccdd9","036e006a9f2049d15c1533ac254dcfce2483a1f6","685f1e1a88f299704591266f2ee9abe29afdd124","a6e0e547d137327de6e808dd59a81edcad07634b","126f4e76145299425bfb03e85d13f91108aea032","341d0668662682e7fd4b610e0154881d268eeca6","446cd3b0aa52ea6863b025ba4e16e4dcf194dec2","77064d504c6aa9f6baecb27e8978139547649fba","4ce25286205c62fffda7d685a916cf4508149245","50b0205264b16991cd7ac5f0c141cd3b1fe0b97a","034ef3644de78f3d76e5855bed16db00a83f14a4","76ec30f9d6516a94a032831a60368f2cc376f664","65776abca3a9ead1ea72702e5b2f3334c48b884d","1f11725f7d81b5e9b97fc3a3c178aa695e786a79","1832010db94205828c86df95df985f3848c3ca37","16c9604d0fc53dc7f21fb31cbc7fab6bd9bdddd6","3cb1f4c1650f7e55b78abba5a00b56a90b8e0567","ee62379ffb236569f73538ff7621e64a7892907a","2da7eb94c118a1afb95408cbde1f8cdd5916c0a6","633248ac3ae1d65b948e77fa8044bcdc099ba207","5ec542457fde76117338d96bab2a1c021e0486fc","177dc0912254778423fa50815ed1eaf6544d0423","69314ab4fa664bd5965c093574f2b4fc94c0d496","deeca8e378c7aa2302455e7ae01b88fe9fa3fa05","670bfd38f3e57389f9d68fb9fa2dba4197028358","0e74f8e8763bd7a9c9507badaee390d449b1f8ca","13d325384be1a20ea69cac6d09b8d4a0b7021c3b","05ca83fe3b178e2ea0eb8caad6521c003860c9e8"],"s2Url":"https://semanticscholar.org/paper/4e99f2e275afb80e977343568c4d3f1af8ee24ba","s2PdfUrl":"","id":"4e99f2e275afb80e977343568c4d3f1af8ee24ba","authors":[{"name":"Masoud Saeida Ardekani","ids":["3086775"]},{"name":"Rayman Preet Singh","ids":["18612874"]},{"name":"Nitin Agrawal","ids":["26642757"]},{"name":"Douglas B. Terry","ids":["1680763"]},{"name":"Riza O. Suminto","ids":["3197683"]}],"journalName":"","paperAbstract":"Rivulet is a fault-tolerant distributed platform for running smart-home applications; it can tolerate failures typical for a home environment (<i>e.g.</i>, link losses, network partitions, sensor failures, and device crashes). In contrast to existing cloud-centric solutions, which rely exclusively on a home gateway device, Rivulet leverages redundant smart consumer appliances (e.g., TVs, Refrigerators) to spread sensing and actuation across devices local to the home, and avoids making the Smart-Home Hub a single point of failure. Rivulet ensures event delivery in the presence of link loss, network partitions and other failures in the home, to enable applications with reliable sensing in the case of sensor failures, and event processing in the presence of device crashes. In this paper, we present the design and implementation of Rivulet, and evaluate its effective handling of failures in a smart home.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3135974.3135988"],"title":"Rivulet: a fault-tolerant platform for smart-home applications","doi":"10.1145/3135974.3135988","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3135974.3135988","venue":"Middleware"},
{"entities":["JavaScript","Privacy","Reference frame (video)","Tor Messenger"],"journalVolume":"","journalPages":"163-178","pmid":"","year":2017,"outCitations":["2f96da380abcf9e549612bc811025aeb4b5c5360","164a7c8521c0e2734ebda97a5b7eecc202e03795","51865dda5a27e14627b15979e8546bf261f089f0","058da9f371ed8a33b4186979bc431555e0eab6f2","8796f9d1eb4ffa8a3f752bfac8db053487eb3120","25e8930dd98a3d9cff1c7154b2874148da597724","8a0af8ae748210ef571d074362b552af571e6d33","05a618847e4f08e5bca29dff732757779722b2e0","2d4ef2f1ceeaba4acc46dec6c48dc18deb9ddb5f","05a14a4aa20fb48f1278f4b04173bf34b44b6c73","7a800db534a612575217ead87f4c1a8acce022af","3001d2504e1dbc547d12d05f3ed1a671d125c4ce","66a6b8b5086454d2f511089ed3c157075239eb7d","56238020ce7c21d572f340d694f4b16478fad71a","1f38c11fe8511c77fb7d383126214c9e7dc28e4a","38720bc0d2c36c156bd2be9b472be6f83169e41a","02179081a241710264019bea393cb25cfd5c663d","834cdbde6e7800f9f50d4884858bb093fc3b65f6","3a2047c0532ca0ae45e404ff659b313287737809","624f889ee119c31062eaaea60cf723f4c7863177","03f02ace66cd558fa4dd465bc988edbe6cee8d5e","9837a70c231c0ef3d33c2c9f5b56afd40548acce","0584a08bf9932d557a564e77647e659ae7f8d981","fd67e410437ae239dcc9beaddaf1dc80fddb6461","0d939c3826455ca42310a92d5c00a956c4630b0e","24cba0ea8970cba2a4bb750347fb59b82d028126","192dc9e8618d00beb8451553d59dd391bcf53124","9a2934caacf51e28030b9c60cfd4671ddeb4128e","3188dc28042effbd519005ec18c07e7afa51c975","5a70de39295c09dd4ee05b94e791ed79b4b00c84","857348ee328c6870a812bf36179460306697ee6e","3d8775945f7c62b2bca55b7097fde9427b0363bd","3a6db9085a191b3f73c1ef0eeea977297a03f8ea","959cfe05045e1c7e80406209244d3346061ca4e6","482fcc1057c6ed9ea21f71c990088eeb092ec243","2c87990d979e3744078c2af95b8cabba0be42313","400078e734d068b8986136ca9e3bbaa01c2bd52b","1d15930cd9e4ececf22fd96bf9ba52f12dc0665e","d7ae2ea551e43f22bd525f999c7b6ca0e0c0f23e","323ab3462f3f6621cdf3b792cb82edb9edaa80cb","695d602b2e0e358c43e1ffd5cbf994e4453c2c20","182a81eaf31b1a76be592c0890182cacd4199be0"],"s2Url":"https://semanticscholar.org/paper/570552045c4d26d37e87aaa35fe79f8b412974f8","s2PdfUrl":"","id":"570552045c4d26d37e87aaa35fe79f8b412974f8","authors":[{"name":"Yinzhi Cao","ids":["3139121"]},{"name":"Zhanhao Chen","ids":["24020529"]},{"name":"Song Li","ids":["1806013"]},{"name":"Shujiang Wu","ids":["24066743"]}],"journalName":"","paperAbstract":"Timing attacks have been a continuous threat to users' privacy in modern browsers. To mitigate such attacks, existing approaches, such as Tor Browser and Fermata, add jitters to the browser clock so that an attacker cannot accurately measure an event. However, such defenses only raise the bar for an attacker but do not fundamentally mitigate timing attacks, i.e., it just takes longer than previous to launch a timing attack. In this paper, we propose a novel approach, called deterministic browser, which can provably prevent timing attacks in modern browsers. Borrowing from Physics, we introduce several concepts, such as an observer and a reference frame. Specifically, a snippet of JavaScript, i.e., an observer in JavaScript reference frame, will always obtain the same, fixed timing information so that timing attacks are prevented; at contrast, a user, i.e., an oracle observer, will perceive the JavaScript differently and do not experience the performance slowdown. We have implemented a prototype called DeterFox and our evaluation shows that the prototype can defend against browser-related timing attacks.","inCitations":[],"pdfUrls":["https://arxiv.org/pdf/1708.06774v1.pdf","http://www.yinzhicao.org/deterfox/deterfox.pdf","http://doi.acm.org/10.1145/3133956.3133996","http://arxiv.org/abs/1708.06774"],"title":"Deterministic Browser","doi":"10.1145/3133956.3133996","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3133996","venue":"CCS"},
{"entities":["Vulnerability (computing)"],"journalVolume":"","journalPages":"445-462","pmid":"","year":2017,"outCitations":["6173558ba7f1cec8c8cee0ddad6b9e81e89bdebb","3d46dbb0da1b4e0ee5b45c46525d9459fb94222d","db70ac76519d74f18090229210d682d07858d83d","1c55777aba716f302e5083f18cfa964711250f63","4116a6f1cd0efe28f8ab24e277e2ca43c301be90","f9879006532007705965cba23a12a70801d215d5","c617c8803fdeb439fe9bdac993c47df1070a818f","01f2e7f3dee35c2c7b9179d8eb46f4f766c101d1","5c93aebbc5caf080cc740d7876414e9a06eeb9b8","462c0a5ab09b983623aea687b36e3e64d47332ab","0849cec8dbced50deb6c1e36e764d280e9c8df87","db1bc90df0bdfd3473cd82534e7e7e8ba0d4acd9","6200d129b2c877929c21c22f28927e85cd47b1e5","4681a0116597fd0804b07e8176b8761e4f569743","4e8d6ac43d1f9df6af2f2936edeafbe518e1ac76","c06c04c65d997264feee6a65a2d7d5006ffef7cc","588ae052b7831f8aeaaaca8489c1b62bd4824ae6","c484e351445232ea526c8d73b84bc529ffcddee1","be20eb62c946dbd03a1ae2623028b16b0d1971af","9a25143ad5cb06a596eb8bda2dd87c99de36d12c","0bd506c244cebeca588578b978b23e5f429334da","3655cf413dfe8a05ea6eecda86ec7b6d6d8425c4","72bda8b4833efa1b0b0e8be115cacd16163c3bcf","e34f06634a15790473d6d1d8513924652f1d8b30","153f2bb7f27d6475692ca6a6700e2609ac64d0bc","34110f07e10ee4734d8b274f4c12590cd981f1a5","65f55691cc3bad6ca224e2144083c9deb2b2cd1d","e555be01f8043e653488c60e0c4d6f36627bd8b2","79ae1dc11016cab3faf7ef29806e3d0278435efa","dff46b474057183e9db033ed038aefb693f6b7c7","387e2538e7df60f59701163e47d7f19e32a152e1","04645e17a1acb783a2ffb2b9b201624c76d52ae2","54bdf79b699c26dab5047186d533ba10f1fe22a8","a1ff6ca8cae11e1858a061b04f67e2dbf255f17d","b9b563efa9ada517da2b0ccebbf7ce44dd431b9d","3385c2d73d985ac92deef5e6c47584622bc6ae44","6b7dee7321564106e889e57371af620e3b5f5796","5c4a6ead27531632b4998d9f330bff0d6fc16a14","5d4a9e5f0c90a9bae8a85a5a67d82de19d7f2429","3dfb4699a5121e4b5b034fd063f7c4c93f614822","48f1145733cbcb1e438271572267ddde5b463702","456d79275d17e63a77868046703ab072a88da9b5","0d51fc5764b1d38c4a09bee222a767401ec1987c","6f3032e94f760f7115571d3b72631741ca5c7290","9db1ca86b92cb5e0a21263de77e3e266b71637af","078d2f8c370bce64629f14bfd177f6fd43a10074","9a4f0bb69dd41906fe2c1a7e4e1a5c5835550606"],"s2Url":"https://semanticscholar.org/paper/5a4cc3e885f9f2a512e2d914928b4e7d82b84446","s2PdfUrl":"","id":"5a4cc3e885f9f2a512e2d914928b4e7d82b84446","authors":[{"name":"Daniel R. Thomas","ids":["39922425"]},{"name":"Sergio Pastrana","ids":["1794388"]},{"name":"Alice Hutchings","ids":["36106268"]},{"name":"Richard Clayton","ids":["1892117"]},{"name":"Alastair R. Beresford","ids":["2619693"]}],"journalName":"","paperAbstract":"We evaluate the use of data obtained by illicit means against a broad set of ethical and legal issues. Our analysis covers both the direct collection, and secondary uses of, data obtained via illicit means such as exploiting a vulnerability, or unauthorized disclosure. We extract ethical principles from existing advice and guidance and analyse how they have been applied within more than 20 recent peer reviewed papers that deal with illicitly obtained datasets. We find that existing advice and guidance does not address all of the problems that researchers have faced and explain how the papers tackle ethical issues inconsistently, and sometimes not at all. Our analysis reveals not only a lack of application of safeguards but also that legitimate ethical justifications for research are being overlooked. In many cases positive benefits, as well as potential harms, remain entirely unidentified. Few papers record explicit Research Ethics Board (REB) approval for the activity that is described and the justifications given for exemption suggest deficiencies in the REB process.","inCitations":["6972f7e6704a524980d53353c65adbabedc602c0"],"pdfUrls":["http://www.cl.cam.ac.uk/~drt24/papers/2017-ethical-issues.pdf","http://doi.acm.org/10.1145/3131365.3131389","https://conferences.sigcomm.org/imc/2017/papers/imc17-final137.pdf","https://www.cl.cam.ac.uk/~drt24/papers/2017-ethical-issues.pdf"],"title":"Ethical issues in research using datasets of illicit origin","doi":"10.1145/3131365.3131389","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3131365.3131389","venue":"IMC"},
{"entities":[],"journalVolume":"","journalPages":"49-62","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/51491eb0e341731ef60141b0ecd82d97780ec264","s2PdfUrl":"","id":"51491eb0e341731ef60141b0ecd82d97780ec264","authors":[{"name":"George Bosilca","ids":["1709514"]},{"name":"Clément Foyer","ids":["32974771"]},{"name":"Emmanuel Jeannot","ids":["1795494"]},{"name":"Guillaume Mercier","ids":["39868021"]},{"name":"Guillaume Papauré","ids":["31917146"]}],"journalName":"","paperAbstract":"","inCitations":["4ff196f7dea7bca99558c17aadd2249354ded70c"],"pdfUrls":["https://doi.org/10.1007/978-3-319-64203-1_4"],"title":"Online Dynamic Monitoring of MPI Communications","doi":"10.1007/978-3-319-64203-1_4","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-64203-1_4","venue":"Euro-Par"},
{"entities":["Application checkpointing","Central processing unit","Component-based software engineering","Experiment","Failure rate","Markov chain","Markov decision process","Simulation","Software system","Throughput"],"journalVolume":"","journalPages":"245-256","pmid":"","year":2017,"outCitations":["fb35b5bc1e02de4d9b31176c39247ee9ad6c3290","6e1ceacdaa0c979cf52af5f478cc2a9891e2b6a0","ddcb1cb84899b2d0d6aee3b95fe2f2b3018c252a","54ff0557d9d78b711e7ebbd7278d3fd4a091202e","029d525dd48347fa4b8a48dbf4b41b4b37199a6a","c1416bd9b71ee8c8b204e09ec2f51afc40433f76","ce9fd32b48148c824ad8ab53386027cb0cf007ee","2d0844dd884e33e4f34869969ac1e01ae60bebfb","02544882276ff1a35f4b6f1a8504a972b8df4087","619a739b6290c0ef32b56759763b9ab555f12f6e","7b70d4dbe727d4eb3c1f1ec7d5515eb1625b1d5f","6a139103526a5068a6517f5986c702d9d0dca5c1","05b1aeb6e8020c5d31e30cd4613ead87a4fb9b3f","cd69034e49d8821636c704c14fb6dfe5c78fc3ac","b6d66e08e7d73150749e1b292f06e7c85d590f72","ce343d8ddf416bc20d8e7254591f8fe5c776bdd8","8d417d46b5d76bb308802fd7a34127d0f0354da3","871586fdcb18b2380e0288b651bb954f84fb5e1a","18011a5c998cd8ff1d80cfb2f296d9f8537d7663","6cc46c57fc958ebc96a1ae209667cf31df7557cc","fce001f86c570ef216df8503e884500806c67b03"],"s2Url":"https://semanticscholar.org/paper/5559e38ecd2b80bcd58fd7db45862dd19bc3d038","s2PdfUrl":"","id":"5559e38ecd2b80bcd58fd7db45862dd19bc3d038","authors":[{"name":"Noor Bajunaid","ids":["10424754"]},{"name":"Daniel A. Menascé","ids":["1758079"]}],"journalName":"","paperAbstract":"Checkpointing and rollback is a key mechanism used to improve the reliability of software systems. The benefits of this mechanism can be offset by the overhead of checkpointing when the failure rate is low. The problem of developing analytic models of rollback and checkpointing has been continuously addressed for over four decades using different assumptions. This paper examines the problem under a more realistic angle, i.e., one in which there are several software components sharing resources (e.g., processors and I/O devices) among themselves and with the checkpointing processes. Additionally, the paper allows for different components to have different computing, rollback, and checkpointing demands, as well as different failure distributions. Our models also allow for various checkpointing processes to be executing concurrently to checkpoint the state of different software components. The analytic models developed here combine Markov Chains and Queuing Networks and allow us to compute the following metrics: (1) average time needed by a component to complete its execution, (2) average throughput of a component, (3) availability of a component, and (4) checkpointing overhead. The models were validated through extensive simulation and experimentation.","inCitations":["624a141beeaa85d5febf617ad8c1c0cfcc4fa482"],"pdfUrls":["https://research.spec.org/icpe_proceedings/2017/proceedings/p245.pdf","http://doi.acm.org/10.1145/3030207.3030209"],"title":"Analytic Models of Checkpointing for Concurrent Component-Based Software Systems","doi":"10.1145/3030207.3030209","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3030207.3030209","venue":"ICPE"},
{"entities":["Fractal","Graphics processing unit","Hausdorff dimension","Minimum bounding box","Sierpinski triangle","Speedup","Time complexity"],"journalVolume":"","journalPages":"427-433","pmid":"","year":2017,"outCitations":["8be038d946d7f0991651a8972e6acbf43e194a78","65d0d1804504b488c97837cb36c0237d9c3dd9b5","67b2918c1804a76552002aa2ea6f35e0722d3b8f","7418b4e800da0800b1b8cc7307414a8e60bdf16c","20f344558d22f2fc10df9e5455fcaefa4842d582","9d72b4341f812bb9e3e9de098b53076721f9d5cd","8bb8c6754cede532bc98dec94eea3d3550bf7109","2e2fc5cc8ebdf828df558d5ad30172155da7987a","b613769edfaf1b673a5ad2b36fbfdda021d4e7b7","a8cb014bc9fac3fba629f09fa85c5cedf6259d76","559ee17e688a7440296ec4194d351559616b6c81","22d09b761dd1265a072d87dba58fd295c7e8fac5","0989b891d54547253c0964fcc042fb7c8b66f1f0","4101482421f14913ab90c7054c93634551f13817","2cbb9fa88a88ad662c364f932df89b483b0acc1d","693f679b0780544220449537f2555b0f138451fe","133c176b649618b1f6bc13ec6783647c87bf9935","a57b0c777e1e04ced17991efa43d9aba1ff7b55e","6bf1cde01c74429a39d7073bc4839eb24b7e48d1","01eb452d6592d94824920e435c173ad2f0c716af","596c4f92b44a59dbff0135a87c4ba883bdf90d49"],"s2Url":"https://semanticscholar.org/paper/0ed9aad8b08f052b6ef96a2e2c0fc0e1b5450e78","s2PdfUrl":"http://pdfs.semanticscholar.org/0ed9/aad8b08f052b6ef96a2e2c0fc0e1b5450e78.pdf","id":"0ed9aad8b08f052b6ef96a2e2c0fc0e1b5450e78","authors":[{"name":"Cristobal A. Navarro","ids":["25530637"]},{"name":"Raimundo Vega","ids":["34896107"]},{"name":"Benjamin Bustos","ids":["1691646"]},{"name":"Nancy Hitschfeld-Kahler","ids":["2266518"]}],"journalName":"","paperAbstract":"This work studies the problem of GPU thread mapping for a Sierpiński gasket fractal embedded in a discrete Euclidean space of n × n. A block-space map λ : Z2E 7→ Z 2 F is proposed, from Euclidean parallel space E to embedded fractal space F, that maps in O(log 2 log 2 (n)) time and uses no more than O(n) threads with H ≈ 1.58... being the Hausdorff dimension, making it parallel space efficient. When compared to a bounding-box map, λ(ω) offers a sub-exponential improvement in parallel space and a monotonically increasing speedup once n > n0. Experimental performance tests show that in practice λ(ω) can produce performance improvement at any block-size once n > n0 = 2 , reaching approximately 10× of speedup for n = 2 under optimal block configurations. Keywords—GPU computing; thread mapping; block-space fractal domains; Sierpinski gasket;","inCitations":[],"pdfUrls":["https://doi.org/10.1109/HPCC-SmartCity-DSS.2017.56","https://arxiv.org/pdf/1706.04552v1.pdf","http://arxiv.org/abs/1706.04552"],"title":"Block-Space GPU Mapping for Embedded Sierpiński Gasket Fractals","doi":"10.1109/HPCC-SmartCity-DSS.2017.56","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCC-SmartCity-DSS.2017.56","venue":"HPCC/SmartCity/DSS"},
{"entities":["Algorithm","Centralisation","Cluster analysis","Computation","Data point","Machine learning","MapReduce","Privacy","Product binning"],"journalVolume":"","journalPages":"572-581","pmid":"","year":2017,"outCitations":["7117704b70919d7458a4aa4c218ae64482a5bc4e","977a5fd404f742fec71367bb8e2a9fc2e616437f","34510661d328233aacd53090538bb17fbf759057","009342aa77a56c46a475fa85e66506219f271526","7677ab0a2ca00016665e9914ad8b797115d99ffa","8ecd462bc48a07bb78f8e21a621602c5db0c6c03","b02d791913d74ee2b3a4449092919d442c786518","25cc2f1ff16830a6889b93004510db58452b8b7d","12d49ecc6aa2bf20a850100cafe061a237a4874e","4aad1756e88dba86399a75891895e00b160f5460","4c7e9b8857828b3d143576e02406a5a1664c3f74","48b344de96ce911a78311309c648af006394db4c","afb6af175c2dc5122fb09b55f48bc13a5fe7d782","42b6ea0bbc174ce1ecb116aff6280559545dd6db","edadd09eb8a6aab754ec81917f5ea2304baf2c6d","10e1e88f9c137d8e350bfc6c9f60242a8f3d22b4","ae9e3a647a53362b820f42d4a7d57dba992f15a0","1941002f4b3a4c0efd8b23fe0a551d8c8eec9585","8f3f63773aa801b2cdcfa2e5699e3abb9aed7443","23c5bb6caadcf9bebb770e71158272b2dce8d4cd","4fe2bf624e18d71d87ae36824606c42c64446562","12ff0fe079d93c2f048c960ec657e6613d06c362","478815622d22d85b0ade98c59b6ac78c3fb1ac21","ade86d0570c2fddb257ef5400297c4bcc27049f3","a620d007603111ae263c5769c9dc9ac37efd2ddb","25fd3466554913010e3221e825b715027742916e","59f5f73372dfeefbc955851489e0b63c4c13abf7","52047d6a5096c2951f6bdb11f6d9f57f2718841b","dc8d0f31c95149af0426ea82f5e082de4b97c2b2","2a59ad03300072f9e6bfe726f5f459b3df2d5f8e","1c799eca7983c62f7815ac5f41787b3e552567b6","d1c523fcf6ada9031ae5a7415b164a65c0641d9f","498a25a560af8637b22d67511c1c2aacc4d64ede","4954fa180728932959997a4768411ff9136aac81"],"s2Url":"https://semanticscholar.org/paper/684615df82dc31784362bfe4e4226a624378164b","s2PdfUrl":"","id":"684615df82dc31784362bfe4e4226a624378164b","authors":[{"name":"Xinyu Chen","ids":["1781266"]},{"name":"Jeremy Benson","ids":["34773586"]},{"name":"Trilce Estrada","ids":["1762267"]}],"journalName":"2017 IEEE International Conference on Cluster Computing (CLUSTER)","paperAbstract":"Traditional machine learning algorithms often require computations on centralized data, but modern datasets are collected and stored in a distributed way. In addition to the cost of moving data to centralized locations, increasing concerns about privacy and security warrant distributed approaches. We propose keybin, a distributed key-based binning clustering algorithm for high-dimensional spaces. keybin locally generates a spatial key for each data point across all dimensions without needing knowledge of other data. Then, it performs a conceptual Map- Reduce procedure in the index space to form a global clustering assignment. We present an implementation and a case study on the capabilities and limitations of this approach, showing that this algorithm can learn a global clustering structure with limited communication and can scale with the dimensionality and size of data sets.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/CLUSTER.2017.96"],"title":"keybin: Key-Based Binning for Distributed Clustering","doi":"10.1109/CLUSTER.2017.96","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLUSTER.2017.96","venue":"2017 IEEE International Conference on Cluster Computing (CLUSTER)"},
{"entities":["Big data","Brute-force search","Central processing unit","Clock rate","Cloud computing","Data rate units","Internet bottleneck","Memory hierarchy","Multi-core processor","Requirement","Run time (program lifecycle phase)","Scalability","Server (computing)","System configuration"],"journalVolume":"","journalPages":"2-11","pmid":"","year":2017,"outCitations":["053825c0a1c111e76c18f28b6d8ae13b414f3bed","76116aa12334141b48abc71024613d4280724d39","76cea12429afa30f17064e2f343597d10a5efb06","4c94cf9c41aa971a2a01b6d5108299036d0d891d","6b1146e51b2c4d5b8433d4d9c6dbf87c6c484196","8b10b13fb495101d1e4eb768907cff05e3bd9315","1bed9dbc346fcc7c39ac42c8a3be089a76f4d11a","c3f443d86a5f1b34c4cbcbf18ec6c08a37d5a649","6ea670c7deabcf9f0a516a5b89049f1febfbbe38","9d182554b9c2b20569763c0ff4cd18a97bce923c","1bed30d161683d279780aee34619f94a860fa973","78e009cc05a6a832106d5ca6802ce56bef6b247f","243dcd92c3892f85f0177700a1801add9b32d5b2","dc19eefd5e13601fa132aa2d8b2a4cdd12351a90","09483e24a562eb423db73946cf20ab3b324be77e","1c437e8220d4122476d3a1ea0ca2debc4871aa76","110c050c6c992d2b956f7b47d717810ac5c91bdc","00de82b9bbc7528ca6d089cb69f01a4fd3d64301","581b0e29991ffd8396e2d91b9c53ad483e72d9b8","41fca6c199464c983cb6384ae65c83eb7522fb46","19d8f8af2d774bda8b95bbeacf62c85811c37b3c","32aa639d91607c10520d163726dbafbcd79ea46e","55b3e22b56599ed8520deb1d7cb9ac460f4fa6bb","de0a9dc7edcb717711cc743165329791d6d5d0e2","03e53dddc865bf688fe313a94ad186a4d96bffe0","03d6143cffcc8cf96abf78d23e74cb1083f54d1b","5b9c21826a213857fbfe91f42ee423e0ad0af32b","a751f6f93c46d72a4f8201a0a5df3432243a0991","d63e4cada8347686372d63a3d00afa89a1515a31","3e74ae88cdaa33bf89136800258bde97ab397ec9","00ecfb48c72709de7ea719e658b2a37301136cda","a694f3583ca033904d9d3073d3693feac585a2bb","4080cc361e61a3a1145b47c407e4fce88aa280f6","358ce90c730bbd72c7a94c09ac05677ddfcca492","9700c76ee9dd6360d8fa366f983a7e7e5a1e9b9a","aa611707c5ea9d30eba199570e15a27fa422406c","6d5823a8b19ec5e64ab3ab97fccd0b7ee070baec","0c978f712efd21b0bdb38d5839063eed639d9e7d"],"s2Url":"https://semanticscholar.org/paper/1c42383a51b2832d842df418fc1c35023b6bbd6d","s2PdfUrl":"","id":"1c42383a51b2832d842df418fc1c35023b6bbd6d","authors":[{"name":"Hosein Mohammadi Makrani","ids":["30521811"]},{"name":"Houman Homayoun","ids":["1747542"]}],"journalName":"2017 IEEE International Symposium on Workload Characterization (IISWC)","paperAbstract":"Scale-out infrastructure such as Cloud is built upon a large network of multi-core processors. Performance, power consumption, and capital cost of such infrastructure depend on the overall system configuration including number of processing cores, core frequency, memory hierarchy and capacity, number of memory channels, and memory data rate. Among these parameters, memory subsystem is known to be one of the performance bottlenecks, contributing significantly to the overall capital and operational cost of the server. Also, given the rise of Big Data and analytics applications, this could potentially pose an even bigger challenge to the performance of cloud applications and cost of cloud infrastructure. Hence it is important to understand the role of memory subsystem in cloud infrastructure and in particular for this emerging class of applications. Despite the increasing interest in recent years, little work has been done in understanding memory requirements trends and developing accurate and effective models to predict performance and cost of memory subsystem. Currently there is no well-defined methodology for selecting a memory configuration that reduces execution time and power consumption by considering the capital and operational cost of cloud. In this paper, through a comprehensive real-system empirical analysis of performance, we address these challenges by first characterizing diverse types of scale-out applications across a wide range of memory configuration parameters. The characterization helps to accurately capture applications' behavior and derive a model to predict their performance. Based on the developed predictive model, we propose MeNa, which is a methodology to maximize the performance/cost ratio of scale-out applications running in cloud environment. MeNa navigates memory and processor parameters to find the system configuration for a given application and a given budget, to maximum performance. Compared to brute force method, MeNa achieves more than 90% accuracy for identifying the right configuration parameters to maximize performance/cost ratio. Moreover, we show how MeNa can be effectively leveraged for server designers to find architectural insights or subscribers to allocate just enough budget to maximize performance of their applications in cloud","inCitations":[],"pdfUrls":["http://ece.gmu.edu/~hhomayou/files/iiswc2017-2017-Hosein-2.pdf","http://doi.ieeecomputersociety.org/10.1109/IISWC.2017.8167751"],"title":"MeNa: A memory navigator for modern hardware in a scale-out environment","doi":"10.1109/IISWC.2017.8167751","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IISWC.2017.8167751","venue":"2017 IEEE International Symposium on Workload Characterization (IISWC)"},
{"entities":["AND gate","Adversary (cryptography)","Analysis of algorithms","Cache (computing)","Computation","High-throughput computing","Random permutation","Secure multi-party computation","Throughput"],"journalVolume":"","journalPages":"843-862","pmid":"","year":2017,"outCitations":["796ff7cef7dcd8b9c577a86473fc1067e1078144","55aafd6b8e9816203006c7e5c37e2e2fb8451113","5adc94602d07e49cc1e94e2aa2b1bdf3481a47f8","ada825ba76ae506dd30092c99af702ec3859272a","7dd5a9a774b96ef8f551ded6418fe8adf28e8952","d04f7f8eed11e5e58a41e314b00e49d7424d82ec","937cb0795bf3bfb5c9cbb7387ed68301bb6995ce","e50ae4d480d84c7cbdb8edcebf13e57f5a47c8ad","a853e0842d74fa3ff146f45ea7f2ed52dac08d1a","9fa0ee74353fd008f2fbb1f6d724437678cbf9dd","1c07a74467c912602b33f28e90abd6eeaa60af6d","13e622fca1a6b52aa85898e260f9455e4ba0d94b","362246709de205ec0ac5b34e07306839c38d5a3a","bcb49a06e4fb7ea831257e146073d84234f4d238","f71db4d70d4cc9e931a63dde7a6db8dad10a61a0","69dc0fe412f974a595abe6d7052d8fdf2304ba3b","8651440f3f6e1e0d8a29564c0135673e9dd13829","04948723dec0e6724777ee56f0d10168cce44921","6223684e14778e4d7948e994d2169ebf38e0a95f","23ec68ed03b485b645478a3f6905615617d905a6","19c3736da5116e0e80a64db35afe421663c4b4a8","94f133780f7c4b09e2513628e5cebe67c009b7d5","27e9745fc94ccf6039dd1804cbb99760544fc59b","15509fdb7fc7bf065fcdf776b38cf3d72d10c113","2aa24ddd5c4eea28fc3b751fb5915c01d9337626","a9ca6a9079bcb5c513ebf63a029d7cdbb8245fa3"],"s2Url":"https://semanticscholar.org/paper/4a77fe1e0f42d44339bf0f690deddab56ce0aa7c","s2PdfUrl":"","id":"4a77fe1e0f42d44339bf0f690deddab56ce0aa7c","authors":[{"name":"Toshinori Araki","ids":["2304646"]},{"name":"Assi Barak","ids":["19319982"]},{"name":"Jun Furukawa","ids":["1725272"]},{"name":"Tamar Lichter","ids":["19180578"]},{"name":"Yehuda Lindell","ids":["1682750"]},{"name":"Ariel Nof","ids":["2192482"]},{"name":"Kazuma Ohara","ids":["2548315"]},{"name":"Adi Watzman","ids":["19219245"]},{"name":"Or Weinstein","ids":["3479789"]}],"journalName":"2017 IEEE Symposium on Security and Privacy (SP)","paperAbstract":"Secure multiparty computation enables a set of parties to securely carry out a joint computation of their private inputs without revealing anything but the output. In the past few years, the efficiency of secure computation protocols has increased in leaps and bounds. However, when considering the case of security in the presence of malicious adversaries (who may arbitrarily deviate from the protocol specification), we are still very far from achieving high efficiency. In this paper, we consider the specific case of three parties and an honest majority. We provide general techniques for improving efficiency of cut-and-choose protocols on multiplication triples and utilize them to significantly improve the recently published protocol of Furukawa et al. (ePrint 2016/944). We reduce the bandwidth of their protocol down from 10 bits per AND gate to 7 bits per AND gate, and show how to improve some computationally expensive parts of their protocol. Most notably, we design cache-efficient shuffling techniques for implementing cut-and-choose without randomly permuting large arrays (which is very slow due to continual cache misses). We provide a combinatorial analysis of our techniques, bounding the cheating probability of the adversary. Our implementation achieves a rate of approximately 1.15 billion AND gates per second on a cluster of three 20-core machines with a 10Gbps network. Thus, we can securely compute 212,000 AES encryptions per second (which is hundreds of times faster than previous work for this setting). Our results demonstrate that high-throughput secure computation for malicious adversaries is possible.","inCitations":["3280131aeaee5d3391cff8de3cfc291049877000","5603325eee0f5d70176860d8cc77a9a9c89289a7","3470761bbe2c48b763a31a684abaeb8c99596b7c"],"pdfUrls":["https://doi.org/10.1109/SP.2017.15","http://www.ieee-security.org/TC/SP2017/papers/96.pdf"],"title":"Optimized Honest-Majority MPC for Malicious Adversaries &#x2014; Breaking the 1 Billion-Gate Per Second Barrier","doi":"10.1109/SP.2017.15","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/SP.2017.15","venue":"2017 IEEE Symposium on Security and Privacy (SP)"},
{"entities":["Asymptotically optimal algorithm","Communication complexity","Communications protocol","Multiparty communication complexity","Property testing"],"journalVolume":"","journalPages":"111-120","pmid":"","year":2017,"outCitations":["72205343db2b5ab3debeaa7afe354474d5256a46","315d727f1a305c1738ba8f4904d4773a82aee7ed","1c57e39eb00d3083b9dae397331307b5bf4e1839","5ff6db9d2ef805fc59248a466933a590cf524427","20f1dfc912bcacfc8c12b75cbc024b9890437f64","e05f410b45d75f78a72354d430a75373c395e9ce","50146c3fb11e45f9072a6bc0d4a6c336756a6537","2c74cac7f8171f9e6aec986c12b38025359c105a","0bbdad82e740a637e3d26c0955f680442c69feb4","261b545e2045dccaf4c8edd1f542dd9530e2c78a","29746f4d82c5d4c2bdd5cc42537541e68d825a83","632377f50d5b47c43947049ec3e9948338397282","ee4324d66cfd6e70d2b1033580a6e15dbe3827a3","0232002fec1ba80cdd1a4628267cbf156984a62d","e0e7a8712bf0808200985f6c92ead1da034733e8","c8045e36f0eb6af65fb326a96f3c7b926de56666","b144b8ed1fe17bc5bbd659b6b885e7c991ab7b06","05916fde7203116aac42310ea49b99535f7e0150","7bd16feb9af3b52a534cd3fcdb771e51f16cccd2","d921036a6cb7e340b019afa557a19bc65586a1ad","41f832326f962da15069444307fea289be7442dc","1bf92cfffe2e84878e3ea3b412c5fb140550b361","254a19a4c7b374d507de6d4c0aae709d3abdd733","8a4fb50c5dd2b9f0f4b15ad8c471274302ed8da5","0b000c7f9581eb35e3aebf4d87c05f7b409f2dad","8a79b5d8750b229c17c79db14503b7708845b5c3","222a8b02a0f81b485c26ba71138e3ed726877d3a","8b30695cb60ecc2d7b08cd6d2242885ad57ad5fb","04ee1c7ed1b22ce513ce2672b89eb3b2ea371258","6c16c543adb398f36bb7d7e90d3a06c43d104475","0094bd8fbb6841300d9a8bfcc206fc4f1a1f94bb","6faa7a1dc1bb32220e0153f109e397ff567a43cb","32081549f5f90db81f6569ef9eecedeeab5d46df"],"s2Url":"https://semanticscholar.org/paper/4e783a1a6b42a81206d0f31d1f7ef6e3aa4b789b","s2PdfUrl":"http://pdfs.semanticscholar.org/4e78/3a1a6b42a81206d0f31d1f7ef6e3aa4b789b.pdf","id":"4e783a1a6b42a81206d0f31d1f7ef6e3aa4b789b","authors":[{"name":"Orr Fischer","ids":["40640498"]},{"name":"Shay Gershtein","ids":["12427017"]},{"name":"Rotem Oshman","ids":["1757695"]}],"journalName":"","paperAbstract":"In this paper we initiate the study of property testing in simultaneous and non-simultaneous multi-party communication complexity, focusing on testing triangle-freeness in graphs. We consider the coordinator model, where we have k players receiving private inputs, and a coordinator who receives no input; the coordinator can communicate with all the players, but the players cannot communicate with each other. In this model, we ask: if an input graph is divided between the players, with each player receiving some of the edges, how many bits do the players and the coordinator need to exchange to determine if the graph is triangle-free, or far from triangle-free? For general communication protocols, we show that Õ(k(nd)1/4+k2) bits are sufficient to test trianglefreeness in graphs of size n with average degree d (the degree need not be known in advance). For simultaneous protocols, where there is only one communication round, we give a protocol that uses Õ(k √ n) bits when d = O( √ n) and Õ(k(nd)1/3) when d = Ω( √ n); here, again, the average degree d does not need to be known in advance. We show that for average degree d = O(1), our simultaneous protocol is asymptotically optimal up to logarithmic factors. For higher degrees, we are not able to give lower bounds on testing triangle-freeness, but we give evidence that the problem is hard by showing that finding an edge that participates in a triangle is hard, even when promised that at least a constant fraction of the edges must be removed in order to make the graph triangle-free.","inCitations":["7df5efc8036f4c4a281346ca929cc81db39a091e"],"pdfUrls":["http://arxiv.org/abs/1705.08438","https://arxiv.org/pdf/1705.08438v1.pdf","http://doi.acm.org/10.1145/3087801.3087821"],"title":"On the Multiparty Communication Complexity of Testing Triangle-Freeness","doi":"10.1145/3087801.3087821","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087821","venue":"PODC"},
{"entities":[],"journalVolume":"","journalPages":"345-354","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/ec94b1a6fbda7cc1e9cd7b0c426da43879130b1f","s2PdfUrl":"","id":"ec94b1a6fbda7cc1e9cd7b0c426da43879130b1f","authors":[{"name":"David Yu Cheng Chan","ids":["39768278"]},{"name":"Vassos Hadzilacos","ids":["2387538"]},{"name":"Sam Toueg","ids":["1729358"]}],"journalName":"","paperAbstract":"","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3087801.3087822"],"title":"Life Beyond Set Agreement","doi":"10.1145/3087801.3087822","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087822","venue":"PODC"},
{"entities":["Best, worst and average case","Computational science","Data-intensive computing","Image resolution","Interference (communication)","Network packet","Network performance","Network switch","Network traffic control","Routing","Scheduling (computing)","Simulation"],"journalVolume":"","journalPages":"204-215","pmid":"","year":2017,"outCitations":["6e1ceacdaa0c979cf52af5f478cc2a9891e2b6a0","0efcb98fab0c44bfc6a5403483b7cedca1278bcb","251544e7c508771ab34cb2d6b97800960cde1f1e","7e06d6922e32d30bd6f7e86ae660ed7bf2e99fd2","10f3fa67bcb56322427d12f81abf49ed10198247","59ba9f62728b6231f982ea3b59f9ba7422182f28","18fbcb1de113f5d60c8e81566231a0ecea46f3fe","67ddcb550dd8fe57e4567bd7ca78f6e841f25c4c","c39c26d510c1a965c5f132edc989a598ca92b700","9c4b6c885bfc6038cdac56763663880e0f2624e6","8610331089fae62c109580e293bc896f6d87f0f7","0736d68aad2c198a8f6dda851c27bd180421c2aa","075f51b0aeaac7ebed18d5fbf67e64a14c8943f1","050b6a5f0e650a12223c27fb133eb5e398df8480","ba625fb8f294a5003a0880096695a92bc9bb843a","0a9c8fef61634e392f9de6f34361cc1c690f7a00","31cfefc79d64ede4c13f231b8b30ebfd45666d3d","3ec4cf958f6ee00dc00aa14840c96268c4c3f9c9","88bf414148412b88378d0bd1b7fa194946dba00a","3037024ee9782764cfbe8e5c9c625e2edaaf83fd","4110d5ad162fbf43a3418f28b4d46609c2a147be","885f7657cd858f3c48707946083f2a9aa7ee7aee","865e20c6f2a2b09c21a73792c746270acbb64f46","fd3da0fbbe8d736506f43ecf1af20343c0a32301","b040e7de49f4b4e8e9e007d7e4149d7ef277c609","b460a8c552ba24afa9b05cf551f5f55db1985e56","5f8991828def57d2f0cda942566afff56740d150","145dcba6ff585990ff051e9e0dbd52296ebda6c6","a5c9bfcaf7b52edee6a94f58337b4a0e33575cd3","d5e9b36ec7e7d5f71aa406d2068f72b984342b0c","8cf9e252c8314e26f20b619acb6392d52abac647"],"s2Url":"https://semanticscholar.org/paper/1a7fbe4366c028875756ebe180b9499e6a33a9da","s2PdfUrl":"","id":"1a7fbe4366c028875756ebe180b9499e6a33a9da","authors":[{"name":"Misbah Mubarak","ids":["2383364"]},{"name":"Philip H. Carns","ids":["2797656"]},{"name":"Jonathan Jenkins","ids":["38538207"]},{"name":"Jianping Kelvin Li","ids":["8549365"]},{"name":"Nikhil Jain","ids":["1812494"]},{"name":"Shane Snyder","ids":["39683248"]},{"name":"Robert B. Ross","ids":["40211322"]},{"name":"Christopher D. Carothers","ids":["1759102"]},{"name":"Abhinav Bhatele","ids":["1823585"]},{"name":"Kwan-Liu Ma","ids":["1707383"]}],"journalName":"2017 IEEE International Conference on Cluster Computing (CLUSTER)","paperAbstract":"HPC systems have shifted to burst buffer storage and high radix interconnect topologies in order to meet the challenges of large-scale, data-intensive scientific computing. Both of these technologies have been studied in detail independently, but the interaction between them is not well understood. I/O traffic and communication traffic from concurrently scheduled applications may interfere with each other in unexpected ways, and this behavior may vary considerably depending on resource allocation, scheduling, and routing policies.In this work, we analyze I/O and network traffic interference on burst-buffer-equipped dragonfly-based systems using the high-resolution packet-level simulations provided by the CODES storage and interconnect simulation framework. The analysis is performed using realistic I/O workload sizes, a variety of resource allocation and network routing strategies employed in production environments, and a dragonfly network configuration modeled after current vendor options. We analyze the impact of interference on both I/O and communication traffic.We observe that although average network packet latency is stable across a wide variety of configurations, the maximum network packet latency in the presence of concurrent I/O traffic is highly sensitive to subtle policy changes. Our simulations reveal a worst-case single packet latency of 4,700 times the average latency for sub-optimal configurations. While a topology-aware mapping of compute nodes to burst buffer storage nodes can minimize the variation in maximum packet latency, it can slow down the I/O traffic by creating contention on the burst buffer nodes. Overall, balancing I/O and network performance requires careful selection of routing, data placement, and job placement policies.","inCitations":["9ddab4cbc6c64e33119f735986a30257c0cfe0cc"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/CLUSTER.2017.25","http://www.mcs.anl.gov/papers/P7080-0717.pdf"],"title":"Quantifying I/O and Communication Traffic Interference on Dragonfly Networks Equipped with Burst Buffers","doi":"10.1109/CLUSTER.2017.25","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLUSTER.2017.25","venue":"2017 IEEE International Conference on Cluster Computing (CLUSTER)"},
{"entities":["Busy waiting","Central processing unit","Critical section","Hardware virtualization","Hypervisor","Library for WWW in Perl","Linux","Linux","Lock (computer science)","Loop heat pipe","Preemption (computing)","Scheduling (computing)","Spinlock","Virtual machine","Whole Earth 'Lectronic Link"],"journalVolume":"","journalPages":"286-297","pmid":"","year":2017,"outCitations":["371c5cc544d758eacd08ee2e9333b1b94f26689e","6a285b0a2243223ee6905692d79b4a8d39f5af5e","ca6e70cca64c928872a8cd137515d72708b58a69","067c7857753e21e7317b556c86e30be60aa7cac0","014f2fde05dc7c6f0b71c13f98e4a0d0c4969e25","f47de67129a525a73fd9b15ed53f0746c594c290","3c3a05197123ab4b2ec3d402c2d9d2777c63c712","008f16f7af27244b507659be26bebb8bb07aded3","693770a65bf0183c9bca10e5fde5e3848bbbb40c","04e954c5afc21447cf43ba1420c9905d359eefd9","7c833a334df551456885bd8b55d63753afac1fae","136c75e41eb66c85aab922c7fdf62820d63b139f","1749ad1f7adb7c7bc984a2713277d71ae21ac28e","97c649dc68ad8818c7e2b7f75b9c164aa840f6a5","a3021aba46ea0b09bac5a6f9f1e5449b13da9c05","0e7af537d6eacd9832c90f31a46ced1ac91b573e","09cef59336519ce93d15841bc2756a79ce13477d"],"s2Url":"https://semanticscholar.org/paper/81532badf6f1a7da5c1b495c2c91243ef7968a37","s2PdfUrl":"","id":"81532badf6f1a7da5c1b495c2c91243ef7968a37","authors":[{"name":"Boris Teabe","ids":["2869488"]},{"name":"Vlad Nitu","ids":["32426008"]},{"name":"Alain Tchana","ids":["1685006"]},{"name":"Daniel Hagimont","ids":["1679417"]}],"journalName":"","paperAbstract":"In native Linux systems, spinlock's implementation relies on the assumption that both the lock holder thread and lock waiter threads cannot be preempted. However, in a virtualized environment, these threads are scheduled on top of virtual CPUs (vCPU) that can be preempted by the hypervisor at any time, thus forcing lock waiter threads on other vCPUs to busy wait and to waste CPU cycles. This leads to the well-known Lock Holder Preemption (LHP) and Lock Waiter Preemption (LWP) issues.\n In this paper, we propose I-Spinlock (for Informed Spinlock), a new spinlock implementation for virtualized environments. Its main principle is to only allow a thread to acquire a lock if and only if the remaining time-slice of its vCPU is sufficient to enter and leave the critical section. This is possible if the spinlock primitive is aware (informed) of its time-to-preemption (by the hypervisor).\n We implemented I-Spinlock in the Xen virtualization system. We show that our solution is compliant with both para-virtual and hardware virtualization modes. We performed extensive performance evaluations with various reference benchmarks and compared our solution to previous solutions. The evaluations demonstrate that I-Spinlock outperforms other solutions, and more significantly when the number of core increases.","inCitations":["8410828bc05c0e6109d866d3b1ccee075b127924"],"pdfUrls":["http://doi.acm.org/10.1145/3064176.3064180"],"title":"The lock holder and the lock waiter pre-emption problems: nip them in the bud using informed spinlocks (I-Spinlock)","doi":"10.1145/3064176.3064180","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3064176.3064180","venue":"EuroSys"},
{"entities":["Automatic vectorization","Categorization","Computation","Coprocessor","False sharing","OpenMP","Scheduling (computing)"],"journalVolume":"","journalPages":"316-323","pmid":"","year":2017,"outCitations":["fde04b7b524045969614382529bb1d6cc88efcf0","1f2ff98f9413bb36c641e9edcfa79f7b33eeb80a","408e61c117816833cdd807b5d8c9258f1c2022ab","23ed77d5aa2fe71f58d175d915e0209df7d202d5","0382955dcc73511c3ae9b5327e0213272a1b4152","3230131b14559a11c8ee9ab9beccf725dfb437de","d7cf43c5e59f07604cea7589ac49b87c594f1888","034ddc1749424d0335be143a7c7d07b7c559c2ad","962c1aced7e215d880d200665084b5239b5efbf2","c688010fdf80996d6f838d908d117f1c7eed8542","73f44853f0f2b02c481b0a36023c37f0b44d6685","eedb46c68a9c71ccb38de3933e5f7e1dd9a789c7"],"s2Url":"https://semanticscholar.org/paper/25ac02feec81b523dfd01b27227bcd2c14f6152f","s2PdfUrl":"http://pdfs.semanticscholar.org/25ac/02feec81b523dfd01b27227bcd2c14f6152f.pdf","id":"25ac02feec81b523dfd01b27227bcd2c14f6152f","authors":[{"name":"Srinivasan Ramesh","ids":["35068009"]},{"name":"Sathish S. Vadhiyar","ids":["3083298"]},{"name":"Ravi S. Nanjundiah","ids":["3165131"]},{"name":"P. N. Vinayachandran","ids":["7913822"]}],"journalName":"","paperAbstract":"Deep and shallow convection calculations occupy significant times in atmosphere models. These calculations also present significant load imbalances due to varying cloud covers over different regions of the grid. In this work, we accelerate these calculations on Intel R © Xeon PhiTM Coprocessor Systems. By employing dynamic scheduling in OpenMP, we demonstrate large reductions in load imbalance and about 10% increase in speedups. By careful categorization of data as private, firstprivate and shared, we minimize data copying overheads for the coprocessors. We identify regions of false sharing among threads and eliminate them by loop rearrangements. We also employ proportional partitioning of independent column computations across both the CPU and coprocessor cores based on the performance ratio of the computations on the heterogeneous resources. These techniques along with various vectorization strategies resulted in about 30% improvement in convection calculations.","inCitations":[],"pdfUrls":["http://arxiv.org/abs/1711.00289","https://arxiv.org/pdf/1711.00289v1.pdf","https://doi.org/10.1109/HPCC-SmartCity-DSS.2017.42"],"title":"Deep and Shallow Convections in Atmosphere Models on Intel® Xeon Phi™ Coprocessor Systems","doi":"10.1109/HPCC-SmartCity-DSS.2017.42","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCC-SmartCity-DSS.2017.42","venue":"HPCC/SmartCity/DSS"},
{"entities":["Domain-specific language","Governance, risk management, and compliance"],"journalVolume":"","journalPages":"175-181","pmid":"","year":2017,"outCitations":["06c5289976cb07eba78d13197799a13150e55b15","98a6b93b0ffe3ad143349ce45347ec6832981b12","47f6e54c6fdbd8c16aa85526dbd4d8be8fc8d31c","3fbe1be19fdd853963366be5533f26a2726176e4","4d44ee59a991e9b645c03c01facd8e605f11f65d","06ba50c664993a89763870a6a4a9055230297bff","852118bbeb4aa6950cadd47975e7cc3d7011958e","25a5df764d0e3cfb3a2d484cae405db1870eaf74","574085fae2b1b9337b70781803221d129b8ae82a","fc00215d0c5cddf7e4f491e9e7446d58742e6ab3","29b84f61b12fbfc0dcb3e9655ca83a4c911d6937","6be01c76649084ec29a18408dda208d011cc8f1b","1d000a1570a52239fa5198b50db761f4163a044d"],"s2Url":"https://semanticscholar.org/paper/e6bc3f22eab08e3624b6384831bd66d37575533c","s2PdfUrl":"","id":"e6bc3f22eab08e3624b6384831bd66d37575533c","authors":[{"name":"Suman Roychoudhury","ids":["1793299"]},{"name":"Sagar Sunkle","ids":["1778382"]},{"name":"Deepali Kholkar","ids":["1797699"]},{"name":"Vinay Kulkarni","ids":["1798720"]}],"journalName":"","paperAbstract":"Modern enterprises operate in an unprecedented regulatory environment where increasing regulation and heavy penalties on non-compliance have placed regulatory compliance among the topmost concerns of enterprises worldwide. Previous research in the field of compliance has established that the manual specification of the regulations used by GRC frameworks not only fails to ensure their proper coverage but also negatively affects the turnaround time both in proving and maintaining the compliance. Our key contribution in this paper is an implementation of a controlled natural English like (domain-specific) language that can be used by domain experts to specify regulations for automated compliance checking. We demonstrate this language using examples from industry regulations in banking and financial services domain.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3136014.3136018"],"title":"A domain-specific controlled English language for automated regulatory compliance (industrial paper)","doi":"10.1145/3136014.3136018","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136018","venue":"SLE"},
{"entities":["Color","Consensus (computer science)","With high probability"],"journalVolume":"","journalPages":"335-344","pmid":"","year":2017,"outCitations":["18be9f461ab087c2cdb546a62d09d93ebf0a2961","1253e6ec21897674442808c62bc892ec850df34c","8251f323f1c90e2428b32c397761249f78367392","5df0fddaf332602853ff9944f069ea49355b5b01","716a235c0095dccd5ab72f6edb65c80ac131f70f","304a2c940e6f16acfa7e9cbe5591b1e39f76728b","807c379142004805db66fe9130a7490ff05f3157","3b4d5b3e93aa6d5ea413c726c17057d8d1eafb2d","07a152ad1c17b35396d8b372cbde16e89705c7ec","893bb2d6a150ef04c06b143ab1854af5b863a730","b65e7a34b0bab3f293eb26985a87d81bbced3311","10b44b914a35142eb7c1cff7a33e5527715561ee","1b0d61aca9971768557958f083d4d741ae22414d","83373b291736be8280caef7b5fa8ae07b6affa44","a666369d920ccdd1d66095d5263f22b788d26ed8","211a6f0452fa889f90b87f256d2c720e02df10e7","8902cafc48a55f3a8da2c5494be33212e5f16d92","0c9215e0a103dc78dd8d14337c7caf0ed6a1b395","32928ac8acd055a8f0c49fd5e5152104123a2730","46d2a0131339d8cabb7fc431b8717fc6dd15d672","b06f887b880c45e9fd2cfd85a3f28cff7013f0cd","3045ab5550d9a5d1cd30f37a0547b956f570f14c","fa7e9af14a46e07db867d9d01cd885e02a06fd62","9012387d96865fb6c39f8a716ac7dadd928abe79","31eb28bf93e7e85c862475095b97f11a3f30741b","b23a15b89cf561d8fa6110dc0339424e407bc443"],"s2Url":"https://semanticscholar.org/paper/dc592f0e3d3a4b3c39e3a11588edffee76b974db","s2PdfUrl":"http://pdfs.semanticscholar.org/dc59/2f0e3d3a4b3c39e3a11588edffee76b974db.pdf","id":"dc592f0e3d3a4b3c39e3a11588edffee76b974db","authors":[{"name":"Petra Berenbrink","ids":["2028147"]},{"name":"Andrea E. F. Clementi","ids":["1702236"]},{"name":"Robert Elsässer","ids":["1751058"]},{"name":"Peter Kling","ids":["1704036"]},{"name":"Frederik Mallmann-Trenn","ids":["2385357"]},{"name":"Emanuele Natale","ids":["1693545"]}],"journalName":"","paperAbstract":"We study consensus processes on the complete graph of n nodes. Initially, each node supports one from opinion from a set of up to n different opinions. Nodes randomly and in parallel sample the opinions of constant many nodes. Based on these samples, they use an update rule to change their own opinion. The goal is to reach consensus, a configuration where all nodes support the same opinion. We compare two well-known update rules: 2-Choices and 3-Majority. In the former, each node samples two nodes and adopts their opinion if they agree. In the latter, each node samples three nodes: If an opinion is supported by at least two samples the node adopts it, otherwise it randomly adopts one of the sampled opinions. Known results for these update rules focus on initial configurations with a limited number of colors (say n 1 3 ), or typically assume a bias, where one opinion has a much larger support than any other. For such biased configurations, the time to reach consensus is roughly the same for 2-Choices and 3-Majority. Interestingly, we prove that this is no longer true for configurations with a large number of initial colors. In particular, we show that 3-Majority reaches consensus with high probability in O ( n · log n ) rounds, while 2-Choices can need Ω(n/ log n) rounds. We thus get the first unconditional sublinear bound for 3-Majority and the first result separating the consensus time of these processes. Along the way, we develop a framework that allows a fine-grained comparison between consensus processes from a specific class. We believe that this framework might help to classify the performance of more consensus processes.","inCitations":["1275bf8f185b7abf328efd957cf77d07bbb2536e"],"pdfUrls":["https://arxiv.org/pdf/1702.04921v1.pdf","http://arxiv.org/abs/1702.04921","http://doi.acm.org/10.1145/3087801.3087817"],"title":"Ignore or Comply?: On Breaking Symmetry in Consensus","doi":"10.1145/3087801.3087817","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087817","venue":"PODC"},
{"entities":["Baseline (configuration management)","Centralisation","Cluster state","Fan-out","Gang scheduling","Jumpstart Our Business Startups Act","Scheduling (computing)","Simulation"],"journalVolume":"","journalPages":"599-608","pmid":"","year":2017,"outCitations":["027bd50767a7f61fb0fc3c27051a63b209c10a99","3e257f01e3ee71545d824a1615c35659525b856a","4eab97d0d1c75641671aa5b7761978322d904c5c","be8cb70c82f2dca180c7753590b7a8e6ee576ded","090599a2caf4591c87699ad850c75554cd712937","835916e7ad1231d5aa2985340b0ee543cadbb5b6","11b12a29a9efb60a892b48fc61e70ab63e59b37e","31b27a3b4ff89993eb92e8b1353edead8d5f2520","0c83169bf4ebb29979bfe47708cb6b79b6e28755","11310368999afdce94bca4316eea38216b2446c5","234e6be0d4238f76b3ac038ee422be39f391c625","756d1f8f07a83f3cfc0edaa81493a9f109628e1b"],"s2Url":"https://semanticscholar.org/paper/66551f711a1f585d944ea3379a51a6ae4bf92a88","s2PdfUrl":"","id":"66551f711a1f585d944ea3379a51a6ae4bf92a88","authors":[{"name":"Chunliang Hao","ids":["3384952"]},{"name":"Jie Shen","ids":["1719912"]},{"name":"Celia Chen","ids":["4178789"]},{"name":"Heng Zhang","ids":["39712796"]},{"name":"Yanjun Wu","ids":["7860923"]},{"name":"Mingshu Li","ids":["38255368"]}],"journalName":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)","paperAbstract":"As a promising alternative to centralized scheduling, sample-based scheduling is especially suitable for high fan-out workloads that contain a large number of interactive jobs. Compared to centralized schedulers, existing sample-based schedulers do not hold a global view of the cluster's resource status. Instead, the scheduling decisions are made solely based on the status of a small set of randomly sampled workers. Although this simple approach is highly efficient in large clusters, the lack of global knowledge of the cluster can lead to sub-optimal task placement decisions and difficulties in enforcing global scheduling policies. In this paper, we address these challenges in existing sample-based scheduling approaches by allowing the scheduler to maintain an approximate version of the global resource status through caching the worker node's status extracted from reply messages. More specifically, we introduce the private cluster-state technique (PCS) for the scheduler to obtain such global information. We show that the scheduler can make better scheduling decisions by utilizing PCS and the scheduler can become more capable in enforcing global scheduling policies. The use of PCS is of low cost since it does not initiate new communication in sample-based scheduling. Our approach is implemented in PSCSampler, a full distribute sample-based scheduler, which gains global knowledge from PCS. Experiment results from both simulation runs and Amazon cluster runs show that compared to Sparrow, PCSsampler can significantly reduce both 50th percentile and 90th percentile runtime. The firsttime success rate of PCSsampler in gang scheduling is closer to an omniscient centralized scheduler than baseline sample based scheduler.","inCitations":["0784846954b6b162fa60eaa5be28b825748f6ee9","6156334bcd7eba6cf44c39f6842b546457d56b05"],"pdfUrls":["http://dl.acm.org/citation.cfm?id=3101193"],"title":"PCSsampler: Sample-Based, Private-State Cluster Scheduling","doi":"","sources":["DBLP"],"doiUrl":"","venue":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)"},
{"entities":["Authentication","Command-line interface","Component-based software engineering","Data curation","Experience","Multi-factor authentication","Open-source software","Production system (computer science)","Software deployment"],"journalVolume":"","journalPages":"37:1-37:11","pmid":"","year":2017,"outCitations":["e28687cc68b035c17697d0846e18708e88e3ee2b","bee3b38355388fc4ac076e2e265c4a563bb38430","6adacd3f01ef16bd70b179132cdf8fa5ea6e6531","65ca6f17a7972fae19b12efdc88c9c9d6d0cf2e8","36400061d8cf4620069eb372c82fe86d0cc56bcb","19e5adf691d70deff696dfd27a521009cb1cf437","fabff2ac5b3a15dcce5325e808a6671d0aafc3d1"],"s2Url":"https://semanticscholar.org/paper/c040b6b4c5dffb90491da263d42fc649fd4fc895","s2PdfUrl":"","id":"c040b6b4c5dffb90491da263d42fc649fd4fc895","authors":[{"name":"W. Cyrus Proctor","ids":["3573218"]},{"name":"Patrick Storm","ids":["39794285"]},{"name":"Matthew R. Hanlon","ids":["2967845"]},{"name":"Nathaniel Mendoza","ids":["2996946"]}],"journalName":"","paperAbstract":"Multi-factor authentication (MFA) is rapidly becoming the de facto standard for access to all computing, whether via web, phone, or direct command-line access. HPC centers and other institutions supporting hundreds or thousands of users face challenging cost, licensing, user support, and infrastructure deployment decisions when considering a transition to MFA at scale.\n This paper describes our experiences and lessons learned throughout the assessment, planning, and phased deployment of MFA across production systems supporting more than 10,000 accounts. It focuses on the ultimate curation, creation, and integration of a multitude of software components, some developed in-house and built to be compatible within existing HPC environments, and all of which are freely available for open source distribution. We motivate the development of this customized infrastructure by highlighting some of the particular needs of our research community. What follows is an information resource for others when considering their own MFA deployments.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3126908.3126957"],"title":"Securing HPC: development of a low cost, open source multi-factor authentication infrastructure","doi":"10.1145/3126908.3126957","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126957","venue":"SC"},
{"entities":["Application checkpointing","CPU cache","Computation","Cryptography","Database","In-memory database","In-place algorithm","Kernel (operating system)","Locality of reference","Operand","Static random-access memory","Throughput"],"journalVolume":"","journalPages":"481-492","pmid":"","year":2017,"outCitations":["c7ae87b4e5952560362e24274a3e9f4e78a666f6","028f56e788bacbbdbb70cca474e0f0382b9b73aa","2394c6644efa856f0da160a0f0031d74cd3b5000","58cde17e911d8eda9fe91c6e446fc2f5f1030acc","73edc0858aac5cf61b72473145b01612c0fd416b","52206ebb2b53a7cfebfd6025fff6c3621b0b0809","0015d8b6ec47ec2bc4bc0564a11e2f98a3971650","0693ff4b3a8d1452b897a876d3ffe6b2074e98e4","500b80adc7e25dfffa9a05d25bdffce81b1b0031","a2ffe8428e96dbf89d3a0d80d6e3495656da28ed","352a8957005dc5519b15ed1870751ec494d66395","245babd157fa6f26696e3ed790847aecb665d51c","14b664dd04703d2333bce3cb35641f90a3a8a2ce","99d80987446ecc7fb546826e7bccebb2fdc5fa12","2b88cc9988d70a950b3eb50e99c8f0a6722210b3","110c050c6c992d2b956f7b47d717810ac5c91bdc","42524667961442587a9eac9b6612d8eb7690f0e6","72a2076a56fc310b92c985a97ce2a4a785729b19","5baaeed2b180d8b9886eca113ae0c86196c8bdaf","0c41bb4d1b3c049e42c12a5054eac206f35da859","e419e3ba88e01ae42f2bf2387e34faee9af03bbf","8e6681c2307b9b875ea580b89b94b405aa63e78e","11b6aa6c5532024f4b721fe8eea14e69cc914aae","3eae0271717f6b4d65024abf04e5d98aef41d748","1e4d081c6fa2103ccd0b9d977d98dffaff3a6f3c","853107ffd335c5151f42d193d10cc6a7c475d919"],"s2Url":"https://semanticscholar.org/paper/135c49e5543ce41ec8274b270b2ac25e015cabd9","s2PdfUrl":"","id":"135c49e5543ce41ec8274b270b2ac25e015cabd9","authors":[{"name":"Shaizeen Aga","ids":["1898809"]},{"name":"Supreet Jeloka","ids":["2934986"]},{"name":"Arun Subramaniyan","ids":["1870110"]},{"name":"Satish Narayanasamy","ids":["1678884"]},{"name":"David Blaauw","ids":["1687117"]},{"name":"Reetuparna Das","ids":["40040123"]}],"journalName":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)","paperAbstract":"This paper presents the Compute Cache architecturethat enables in-place computation in caches. ComputeCaches uses emerging bit-line SRAM circuit technology to repurpose existing cache elements and transforms them into active very large vector computational units. Also, it significantlyreduces the overheads in moving data between different levelsin the cache hierarchy. Solutions to satisfy new constraints imposed by ComputeCaches such as operand locality are discussed. Also discussedare simple solutions to problems in integrating them into aconventional cache hierarchy while preserving properties suchas coherence, consistency, and reliability. Compute Caches increase performance by 1.9&#xd7; and reduceenergy by 2.4&#xd7; for a suite of data-centric applications, includingtext and database query processing, cryptographic kernels, and in-memory checkpointing. Applications with larger fractionof Compute Cache operations could benefit even more, asour micro-benchmarks indicate (54&#xd7; throughput, 9&#xd7; dynamicenergy savings).","inCitations":["d66d840d8dec196a0bb6c279dc088b23f96b1a44","b6d93d63915d867f6aadea3c0f7ce206407a4b5f","0c4fe1f1a8043e8f4175b21faca1b72bff8033e6","4431efadb482fbc2619e9dbd50d5ce707efa6396","d9a6cfad15c6268b30da1f5b45f720b96ead1805","e629e31f7fcbb8e0197f5f8d3d24f48f09d2d278","00cc482570d739e7b733f45b6f8f1836b24056bd","9d7b70f7b69bf3f7309273a68d09964611715a77"],"pdfUrls":["http://blaauw.engin.umich.edu/wp-content/uploads/sites/342/2018/03/Aga-Compute-Caches.pdf","http://doi.ieeecomputersociety.org/10.1109/HPCA.2017.21"],"title":"Compute Caches","doi":"10.1109/HPCA.2017.21","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCA.2017.21","venue":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)"},
{"entities":["Application programming interface","Critical path method","High- and low-level","Message Passing Interface","Requirement"],"journalVolume":"","journalPages":"62:1-62:12","pmid":"","year":2017,"outCitations":["cf60b4d7f37cc74ca7345a579201b89a010a67e8","39e2c2017e5855c4a9010d1470ad76d27766c317","9c7566f3820b0ae59adadc7249bb972668d0845d","1a355960bad4ac65e4d6ae25f6d9af2b62bc7a04","1a7a3c3945947358e99257b3461d3eff8a06946d","309bd4c9b1b9cf81cbf071b8b2ad80e97acf7c60","3174e077cdf74252a489f64cd61052b7e1a482d9","61b8a8f5810f6670466f9ea58b7cb390ca1a4a89","f7478e8d8ab68c906c5aa1a2ebed7ad15ca13261","13fec303fe55489045ff5b66014b618fca83206a","e8464a4cfcefc5e7318b342e7870615a4ade2ff8","15fac76a4de8cd20b13d84d47bb8e0d7851c1988","8c9654d6f22d3c4e34e7e1be16129b5016cb8899","71dad05cbc0fab822e2e52084641caf7504515eb","11b102456d8d6d907103bb6a3c4bde80dc359c6a"],"s2Url":"https://semanticscholar.org/paper/478c09086fcdb2bdaf5f48542dee3e3267790d0f","s2PdfUrl":"","id":"478c09086fcdb2bdaf5f48542dee3e3267790d0f","authors":[{"name":"Kenneth Raffenetti","ids":["2673895"]},{"name":"Abdelhalim Amer","ids":["30563484"]},{"name":"Lena Oden","ids":["2652675"]},{"name":"Charles Archer","ids":["2058835"]},{"name":"Wesley Bland","ids":["2446648"]},{"name":"Hajime Fujita","ids":["1713011"]},{"name":"Yanfei Guo","ids":["1794267"]},{"name":"Tomislav Janjusic","ids":["1801345"]},{"name":"Dmitry Durnov","ids":["28294088"]},{"name":"Michael Blocksome","ids":["1685720"]},{"name":"Min Si","ids":["3120064"]},{"name":"Sangmin Seo","ids":["2632706"]},{"name":"Akhil Langer","ids":["34914217"]},{"name":"Gengbin Zheng","ids":["1729841"]},{"name":"Masamichi Takagi","ids":["2243970"]},{"name":"Paul Coffman","ids":["3315212"]},{"name":"Jithin Jose","ids":["31792655"]},{"name":"Sayantan Sur","ids":["2302544"]},{"name":"Alexander Sannikov","ids":["7959432"]},{"name":"Sergey Oblomov","ids":["28371726"]},{"name":"Michael Chuvelev","ids":["1980633"]},{"name":"Masayuki Hatanaka","ids":["20679817"]},{"name":"Xin Zhao","ids":["1708899"]},{"name":"Paul F. Fischer","ids":["1682196"]},{"name":"Thilina Rathnayake","ids":["40552468"]},{"name":"Matthew Otten","ids":["40033106"]},{"name":"Misun Min","ids":["2063968"]},{"name":"Pavan Balaji","ids":["2103230"]}],"journalName":"","paperAbstract":"This paper provides an in-depth analysis of the software overheads in the MPI performance-critical path and exposes mandatory performance overheads that are unavoidable based on the MPI-3.1 specification. We first present a highly optimized implementation of the MPI-3.1 standard in which the communication stack---all the way from the application to the low-level network communication API---takes only a few tens of instructions. We carefully study these instructions and analyze the root cause of the overheads based on specific requirements from the MPI standard that are unavoidable under the current MPI standard. We recommend potential changes to the MPI standard that can minimize these overheads. Our experimental results on a variety of network architectures and applications demonstrate significant benefits from our proposed changes.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3126908.3126963"],"title":"Why is MPI so slow?: analyzing the fundamental limits in implementing MPI-3.1","doi":"10.1145/3126908.3126963","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126963","venue":"SC"},
{"entities":["C++","Drop-in replacement","Fault tolerance","Memristor","Multi-objective optimization","Non-volatile memory","Overhead (computing)","POSIX Threads","Persistence (computer science)","Phase-change memory","Programming model","Schedule (computer science)","SerDes","Serialization","Synchronization (computer science)","Thread (computing)","Volatile memory"],"journalVolume":"","journalPages":"468-482","pmid":"","year":2017,"outCitations":["09031aa6d6743bebebc695955cd77c032cd9192f","0c96b3ac2e720448054f1bcebdfd52ee341eac57","44022fb8c1acc3ebd2b1f4f0f43f111422941e57","2efed59aab7ba6ab1f3e29784c6f9d79b09a20fe","10d8afea57c8f159c4eb2664a40c8fb859acefef","05a1357946de5eca42a477b7b268db4944219a2e","35963f0115d7a9b01d453d4ea33d42d9c26313d6","3b62c1f19254820c75dd0011f038d7aae04b3414","e23298e18aa92ac43fa941d0f5eacb339905b685","1bed30d161683d279780aee34619f94a860fa973","8bfadfde21e1385c7dbceccd54d124fc437b3721","1d15930cd9e4ececf22fd96bf9ba52f12dc0665e","300b683b6e04b691d5f4ec617948a303d3acbbe5","e9fa7e93d2f4e958cde16c6cf9d5bc966f8e7ffc","94783d113951822195d4ba44599a8fcbdef9d4bf","39e3d058a5987cb643e000bce555676d71be1c80","2db3fcbc192ccc04682a5c528f86190b30e1d11e","3ec5430347717ff2f02f435cdcf951f35cd1479a","47b851237f240831abee3971bca6bb8d2a121eb1","1fb1cfc676f3fcee296b3210a5c71f7f054ff1b0","6b60ac5240d9c291aa11412712d817119581db13","bf5497e15f22233cbc2a4d0c3cc2c36f26738701","544c1ddf24b90c3dfba7b1934049911b869c99b4","e37a835ef26a261f879eeaa2c59f4a2d95f0af90","512a8925693d5f4b8e4cfde32bcd3c846a14b71e","10a7ccd660e7f59bf984ce74886590b7c33e6da0","99723365fc9fe6960201bf9d246a90ccbb6396fa","339632faa043d4697570fc4fe48a52d007c3cf06","49b73fc335cb97c0b52b283ce236a4d4eb2b99c9","948c881ab7f1f62e9c940458e74c3e435320df72","a95436fb5417f16497d90cd2aeb11a0e2873f55f"],"s2Url":"https://semanticscholar.org/paper/39a1fb4cb03f5fada6e485a1d0dc6a723a17ed22","s2PdfUrl":"","id":"39a1fb4cb03f5fada6e485a1d0dc6a723a17ed22","authors":[{"name":"Terry Ching-Hsiang Hsu","ids":["14441372"]},{"name":"Helge Brügner","ids":["10377580"]},{"name":"Indrajit Roy","ids":["37977699"]},{"name":"Kimberly Keeton","ids":["2812707"]},{"name":"Patrick Th. Eugster","ids":["1697599"]}],"journalName":"","paperAbstract":"Non-volatile memory technologies, such as memristor and phase-change memory, will allow programs to persist data with regular memory instructions. Liberated from the overhead to serialize and deserialize data to storage devices, programs can aim for high performance and still be crash fault-tolerant. Unfortunately, to leverage non-volatile memory, existing systems require hardware changes or extensive program modifications.\n We present NVthreads, a programming model and runtime that adds persistence to existing multi-threaded C/C++ programs. NVthreads is a drop-in replacement for the pthreads library and requires only tens of lines of program changes to leverage non-volatile memory. NVthreads infers consistent states via synchronization points, uses the process memory to buffer uncommitted changes, and logs writes to ensure a program's data is recoverable even after a crash. NVthreads' page level mechanisms result in good performance: applications that use NVthreads can be more than 2&#215; faster than state-of-the-art systems that favor fine-grained tracking of writes. After a failure, iterative applications that use NVthreads gain speedups by resuming execution.","inCitations":["e3a66a2e79c2a5f7a52bf4e8089bf522fdc04abe","db57257e6b051e0f97d35209cc5aee0909cde1f1","cb2a018979184f87692d423322e367cc42a215d2"],"pdfUrls":["http://nvmw.ucsd.edu/nvmw18-program/unzip/current/nvmw2018-final60.pdf","http://nvmw.ucsd.edu/nvmw18-program/unzip/current/nvmw2018-paper60-presentations-slides.pdf","http://doi.acm.org/10.1145/3064176.3064204"],"title":"NVthreads: Practical Persistence for Multi-threaded Applications","doi":"10.1145/3064176.3064204","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3064176.3064204","venue":"EuroSys"},
{"entities":["Data center","Gigabyte","Memory hierarchy","Multitier architecture","Network congestion","Network switch","Non-volatile memory","Portals","Stock and flow","Throughput","Volatile memory"],"journalVolume":"","journalPages":"17-24","pmid":"","year":2017,"outCitations":["a56ee0c2ed063a4842d8ca785e9fadfda29d9123","144b1ba05cb64b493858b665cc38374f3ef7e332","10d8afea57c8f159c4eb2664a40c8fb859acefef","e1d29194ff677c7426d65af3f5b6fec3ffa182b6","112582b5903fe1c7d8cfbac85d6a5dca3561688c","7fcfcc1ea179cab57893ffb407a8e43d9c9da289","2d086787132666be7d425c5534132b0956c30435","a8205dcf9663742bd103f23e6fa598c6b6f4513e","c250168f0103da6ed94d20a9fb00e98cce05756d","005fc9cc5fd4e991612e3411950c5da5b0c07958","49ffbf9a6a6602ea571709c313432c216847272a","3b1c1002d1f051fbe3212961f88809c0714f7e61","a15bc58fa496b6cca937713723f19f45380fc2fe","7605fe626c3598ee68fefaf1f4e1d21fcd2cb3d4","33299bbc74d62c9d83f714f0753fc0f2ecadc645","400c8f6d1bc0284b887f3f6412e07f9be70650f8","e116690dfdfb44f9e350cb36fbf8e8b9b3da1d3f","031c9ab264449e18192d55e0f373d3bdb640b0e9","870c48a2c2fb067d12138bc0620b1a11a40a6a97","14e0d2bdfb3fca202b3fc0e19a12d3082f81b931","13fec303fe55489045ff5b66014b618fca83206a","373b88e34295875fdab7f6cdee1438edbd0571cb","7ac7265bf479558e99ec5edf21400f57c5205712"],"s2Url":"https://semanticscholar.org/paper/3f9cc2832b801a52677bad31f7f420e41c49bc38","s2PdfUrl":"","id":"3f9cc2832b801a52677bad31f7f420e41c49bc38","authors":[{"name":"Timo Schneider","ids":["3325511"]},{"name":"James Dinan","ids":["2604669"]},{"name":"Mario Flajslik","ids":["2567894"]},{"name":"Keith D. Underwood","ids":["1742910"]},{"name":"Torsten Hoefler","ids":["1713648"]}],"journalName":"2017 IEEE 25th Annual Symposium on High-Performance Interconnects (HOTI)","paperAbstract":"The advent of non-volatile memory (NVM) technologies has added an interesting nuance to the node level memory hierarchy. With modern 100 Gb/s networks, the NVM tier of storage can often be slower than the high performance network in the system; thus, a new challenge arises in the datacenter. Whereas prior efforts have studied the impacts of multiple sources targeting one node (i.e., incast) and have studied multiple flows causing congestion in inter-switch links, it is now possible for a single flow from a single source to overwhelm the bandwidth of a key portion of the memory hierarchy. This can subsequently spread to the switches and lead to congestion trees in a flow-controlled network or excessive packet drops without flow control. In this work we describe protocols which avoid overwhelming the receiver in the case of a source/sink rate mismatch. We design our protocols on top of Portals 4, which enables us to make use of network offload. Our protocol yields up to 4x higher throughput in a 5k node Dragonfly topology for a permutation traffic pattern in which only 1% of all nodes have a memory write-bandwidth limitation of 1/8th of the network bandwidth.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/HOTI.2017.17"],"title":"Fast Networks and Slow Memories: A Mechanism for Mitigating Bandwidth Mismatches","doi":"10.1109/HOTI.2017.17","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HOTI.2017.17","venue":"2017 IEEE 25th Annual Symposium on High-Performance Interconnects (HOTI)"},
{"entities":["Context-free grammar","Context-free language","Data dependency","Declarative programming","LR parser","Language workbench","Lazy evaluation","OCaml","Open-source software","Operator-precedence parser","Order of operations","Parsing","Programmer","Programming language","Rainbow table","Shallow minor","Word-sense disambiguation"],"journalVolume":"","journalPages":"55-66","pmid":"","year":2017,"outCitations":["fc93c176dcec649a8a15266a667e16766244edaa","ab1aeb95b493cc132cc1b60ffb96a94ae4326b31","322a7e6f646b8f54bc766a367f9a570f1acf7658","18c9c93c56817768a28bd66c329e01fe56b053d4","543ac7965639667f816214c6c98ec5f9f7cb36e1","869172852497052bc81d041c914c328bb16561ca","3709d6c71d1003f47fce2989134173bf477802ac","2bcc56aa8f39ec3d5f16c0064e461e90a6a1764f","93a6a7319dbbe63fe68f5bac5b5f4518ff5b14f2","79bb2782756dbcea84ab5431c131edcf226ee1f7","255989d3825d5d4c158919e11f8205f18b0aa2da","74a0e8f05c1bd8d69574278764cc41520f3398af","1ad2fe5d7d1fcd00218266898fe5371ab598639e","7b81149bae4381377080a6ec9173e0b6c89ae57b","6bd1a113a0256a4d4fbd7c82f7e4e88f70d720d0","215ac9b23a9a89ad7c8f22b5f9a9ad737204d820","fc24ca9db6cd2dd30ab1cb8792aaa9fd14dfd740"],"s2Url":"https://semanticscholar.org/paper/6e9c898d036b2cb7e1d50a4a54288b62cfff7cad","s2PdfUrl":"","id":"6e9c898d036b2cb7e1d50a4a54288b62cfff7cad","authors":[{"name":"Luis Eduardo de Souza Amorim","ids":["38066673"]},{"name":"Michael J. Steindorfer","ids":["2219597"]},{"name":"Eelco Visser","ids":["2447783"]}],"journalName":"","paperAbstract":"Context-free grammars are suitable for formalizing the syntax of programming languages concisely and declaratively. Thus, such grammars are often found in reference manuals of programming languages, and used in language workbenches for language prototyping. However, the natural and concise way of writing a context-free grammar is often ambiguous. \n  Safe and complete declarative disambiguation of operator precedence and associativity conflicts guarantees that all ambiguities arising from combining the operators of the language are resolved. Ambiguities can occur due to <i>shallow conflicts</i>, which can be captured by one-level tree patterns, and <i>deep conflicts</i>, which require more elaborate techniques. Approaches to solve deep priority conflicts include grammar transformations, which may result in large unambiguous grammars, or may require adapted parser technologies to include data-dependency tracking at parse time. \n  In this paper we study deep priority conflicts <i>\"in the wild\"</i>. We investigate the efficiency of grammar transformations to solve deep priority conflicts by using a lazy parse table generation technique. On top of lazily-generated parse tables, we define metrics, aiming to answer how often deep priority conflicts occur in real-world programs and to what extent programmers explicitly disambiguate programs themselves. By applying our metrics to a small corpus of popular open-source repositories we found that in OCaml, up to 17% of the source files contain deep priority conflicts.","inCitations":["0b58636ea52ac55ce61c31f96347000be48158bc"],"pdfUrls":["https://pure.tudelft.nl/portal/files/34444067/sle17.pdf","http://doi.acm.org/10.1145/3136014.3136020"],"title":"Deep priority conflicts in the wild: a pilot study","doi":"10.1145/3136014.3136020","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136020","venue":"SLE"},
{"entities":["Algorithm","Collaborative filtering","Database normalization","Experiment","Heuristic","Strategic management"],"journalVolume":"","journalPages":"215-224","pmid":"","year":2017,"outCitations":["308e6dbbc4436e96453110897b97a9ae79b413a6","1bc108785903f5a81153ec3104b8b67db9054938","40b5e9b2a00a4a192e5e1b6d751dcd4fcb96231d","0b387adf32a1d978378d0e49651013624de42473","8bdcde37ae42ff7eb54529d6a012428773b113ba","8ac3efcccf2a92ae19830d5fc19627785a52d4bd","2bf3fb9d50a39ad727f248ffd4b14f07a2d48e4a","7d986dac610e20441adb9161e5466c88932626e9","39519d1a73475502d1ccbe6c8b2ac9ad5c90412e","12f46619885bdebc60085d4f49f7a90ef2614519","0906cbe4c344eeb32420f994b63650b8835eeed2","184b7281a87ee16228b24716ca02b29519d52eb5","2c9b99c886ed0bf82b7fd3ccdce52dd9b7f10397","5908c36f7f6a2385256e1090738923d04d407e45","554f6cc9cb9c64a25670eeb12827b803f3db2f71","6aa1c88b810825ee80b8ed4c27d6577429b5d3b2","940b01d0d7931cb9d4d24f5bd50625b941b31a13","13e9052ec45b81b262a1dd72e81368ef5ea0a1be","d5fdc3c0b2049a025091179a73e0e4174105fcd4","45e6f16c521e36aecfbc808c2bd4676ca466ef99","da8b0378174bc25ed174be36a1c725787b81854d","2c1795748e767df44d18f0a820126f1804bc2e4a","1bc1a735bf6b3aca3b5c80912a222e4c8fc10eb7","530d53d8a1828e73ff0d731cd2d2cf8a8f8ecae4"],"s2Url":"https://semanticscholar.org/paper/cd6ddf13877b067e0a47c0a1663125e2a7f547d6","s2PdfUrl":"","id":"cd6ddf13877b067e0a47c0a1663125e2a7f547d6","authors":[{"name":"Rocío Cañamares","ids":["3247627"]},{"name":"Pablo Castells","ids":["2912921"]}],"journalName":"","paperAbstract":"We develop a probabilistic formulation giving rise to a formal version of heuristic k nearest-neighbor (kNN) collaborative filtering. Different independence assumptions in our scheme lead to user-based, item-based, normalized and non-normalized variants that match in structure the traditional formulations, while showing equivalent empirical effectiveness. The probabilistic formulation provides a principled explanation why kNN is an effective recommendation strategy, and identifies a key condition for this to be the case. Moreover, a natural explanation arises for the bias of kNN towards recommending popular items. Thereupon the kNN variants are shown to fall into two groups with similar trends in behavior, corresponding to two different notions of item popularity. We show experiments where the comparative performance of the two groups of algorithms changes substantially, which suggests that the performance measurements and comparison may heavily depend on statistical properties of the input data sample.","inCitations":["17121c7b3b937dafd88314739c25bb28ab660048"],"pdfUrls":["http://doi.acm.org/10.1145/3077136.3080836"],"title":"A Probabilistic Reformulation of Memory-Based Collaborative Filtering: Implications on Popularity Biases","doi":"10.1145/3077136.3080836","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3077136.3080836","venue":"SIGIR"},
{"entities":["Analysis of algorithms","Data access","Experiment","FITS","Geographic information system","Information system","Partition (database)","Space-filling curve"],"journalVolume":"","journalPages":"1525-1537","pmid":"","year":2017,"outCitations":["0b53d23584071656e88ca2943ed61857c20a26d0","7fb5d07836f38186a4385c5e4a9816b8de2914a6","1c27eafecd3d6f0008d74ffbe1e7c59a25869407","c128c60423daf4b3cc6fa24f01b712575b5828da","e467a52667aa6faa87ff27f0e5480981832044c2","351f57001290e6cce272b5d80d776a8b57801765","2dd6cd544f8c397927d18dab8c6f2ab5a3fc8e36","32a17985afca711e9bd09ab202c44ceeb5d2be64","bfc464efbe615805d386ef5c882e4d0f97071ec2","d758056c8d90543d6caff2262c648792caebafa5","3a134bc11a5805bcf45fdcb88a91321a1b1b63c3","b8862d944ac03fd018b282703301341cc5122a56","e80402ac18fc2d59a9a518d1fdeeae9767ba2971","823709fd1d9a4f98cea876650727dd17818409a1","b4b55fbedea644e6336937cb827c1251f11479dc","271bb32d09a4096e29ee936c1fd5cc144931bc76","566e63917526cc083b103985f96cf0c65ce7a4a5","0a2721cd57f436e6f1ca5b7055b81ccf0e17a0cf","71e62800c297987e4ef53c5d11f05fe2ebb00ab3","41c60f57772bc5440cf9e569e55d50f437b469ff","6350f382e814d4b2f888f5a2a8bd6dd0e9362d81"],"s2Url":"https://semanticscholar.org/paper/83c1a9d880807154c131cc3103d5a76f99433e18","s2PdfUrl":"","id":"83c1a9d880807154c131cc3103d5a76f99433e18","authors":[{"name":"Shoji Nishimura","ids":["2015383"]},{"name":"Haruo Yokota","ids":["1749641"]}],"journalName":"","paperAbstract":"Recently, massive data management plays an increasingly important role in data analytics because data access is a major bottleneck. Data skipping is a promising technique to reduce the number of data accesses. Data skipping partitions data into pages and accesses only pages that contain data to be retrieved by a query. Therefore, effective data partitioning is required to minimize the number of page accesses. However, it is an NP-hard problem to obtain optimal data partitioning given query pattern and data distribution.\n We propose a framework that involves a multidimensional indexing technique based on a space-filling curve. A space-filling curve is a way to define which portion of data can be stored in the same page. Therefore, the problem can be interpreted as selecting a curve that distributes data to be accessed by a query to minimize the number of page accesses. To solve this problem, we analyzed how different space-filling curves affect the number of page accesses. We found that it is critical for a curve to fit a query pattern and be robust against any data distribution. We propose a cost model for measuring how well a space-filling curve fits a given query pattern and tolerates data skew. Also we propose a method for designing a query-aware and skew-tolerant curve for a given query pattern.\n We prototyped our framework using the defined query-aware and skew-tolerant curve. We conducted experiments using a skew data set, and confirmed that our framework can reduce the number of page accesses by an order of magnitude for data warehousing (DWH) and geographic information systems (GIS) applications with real-world data.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3035934"],"title":"QUILTS: Multidimensional Data Partitioning Framework Based on Query-Aware and Skew-Tolerant Space-Filling Curves","doi":"10.1145/3035918.3035934","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035934","venue":"SIGMOD Conference"},
{"entities":["Algorithm","Autonomous car","Competitive analysis (online algorithm)","Datasheet","Deterministic algorithm","Embedded system","Online algorithm","Server (computing)"],"journalVolume":"","journalPages":"313-319","pmid":"","year":2017,"outCitations":["b01439268474c06f52b035c916d94571d6e3958a","c20c3cb7f48260b03eedc15436b65c8c6521266f","9d295f2bbef6d2a44f13fad34f0b2c3f7d1a1964","815c5c4e367c2efcf9f6d28a2de779ef5886ead1","4f90764fb8e7d4b1c18696f034804a2aa6487f44","adcad2cf8342cd5346dae87422e7ab236b1531c8","5948ce001843d1242e515c5543fb62552e04c235","18d80fd0971f524c1e292aca51aba81b729fe4e1","a7d20b0076dfc7e485b53d7b8cf808c4c9dca1e6","a4d21316dd619337d47561e9fe80e1438c310683","118f04c9a9fee4570fb841c3bcaeb3e480c76f12","772ac20c929b1fe4c1cddc23647d1a7f3604a2dc","c45cebaa4aa1e321e8e9f3719eba85a058c1aa7f","e70b26300bca8bb22e7f596119fad7a45f1c044c"],"s2Url":"https://semanticscholar.org/paper/59090a74e1075e017c7e547d472c922af9fb80d6","s2PdfUrl":"","id":"59090a74e1075e017c7e547d472c922af9fb80d6","authors":[{"name":"Björn Feldkord","ids":["7468259"]},{"name":"Friedhelm Meyer auf der Heide","ids":["1732130"]}],"journalName":"","paperAbstract":"We introduce the mobile server problem, inspired by current trends to move computational tasks from cloud structures to multiple devices close to the end user. An example for this are embedded systems in autonomous cars that communicate in order to coordinate their actions. Our model is a variant of the classical Page Migration Problem. More formally, we consider a mobile server holding a data page. The server can move in the Euclidean space (of arbitrary dimension). In every round, requests for data items from the page pop up at arbitrary points in the space. The requests are served, each at a cost of the distance from the requesting point and the server, and the mobile server may move, at a cost D times the distance traveled for some constant D. We assume a maximum distance m the server is allowed to move per round.\n We show that no online algorithm can achieve a competitive ratio independent of the length of the input sequence in this setting. Hence we augment the maximum movement distance of the online algorithms to (1+&#948;) times the maximum distance of the offline solution. We provide a deterministic algorithm which is simple to describe and works for multiple variants of our problem. The algorithm achieves almost tight competitive ratios independent of the length of the input sequence.","inCitations":["7df5efc8036f4c4a281346ca929cc81db39a091e"],"pdfUrls":["http://doi.acm.org/10.1145/3087556.3087575"],"title":"The Mobile Server Problem","doi":"10.1145/3087556.3087575","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087556.3087575","venue":"SPAA"},
{"entities":["Causal consistency","Causality","Data store","Lossy compression","Observable","Scalability","Snapshot (computer storage)","Snapshot isolation"],"journalVolume":"","journalPages":"453-468","pmid":"","year":2017,"outCitations":["c8ec9739351931965979a1f1ed3b9d29c6ad7933","13c27125584651329f66461981cbb20fa63e9023","3702d6e0c78050f3261fdbf0eb1aefbac59fb8cf","7038e23695dbc4d8a9d1b7c6dff8dbc138009c4b","ce40e225ffa0b2c4a4a2e25d7b65d33978af1eb2","32257d8d2b08c87e58c7b7f4b2430d58e4b51a81","2a42fb5ad895ed993219836b6b4ff93670c9db71","98cca67dfd0320d56030dd6637a733436d2b521e","2acf4ea8ebbb795965bf05c155fb90b6ff926f26","36147a54dfca257c03663cb4e9bb8589f52b7cef","091a8b2a10483b9899c667862dcfa92fc130bb74","5c9793fa07fcaaae864eb89fd1c1b9f6905ec546","223b9e0e1bf2d696458ca0fb7aabb1bb0ea0b639","01293cc2b2bda3c38c7095d2ea1813fcb0611a3e","3dbb0beee26501a93522230a094cb359eb121c70","1c8195cadc7ad4a8b59b16fe77574dd6d160d7d2","71c0dd6bd1dd57716b6797043e9f09b951c88a22","24cece61e2128780072bc58f90b8ba47f624bc27","4827cc74dba0c39172554cf0116eb111797f0d1b","5862fda99c4d83ce7a6bc5fda774ceeb5d573845","efb351341158c8cb92ea6f479021c05e8e2e6120","259a11bb2ccac5af9128b00c2bd0237c3f712d3c","bc631e10de057f1ae6f65cb1b6f4baac1024e449","cdee1c49685a1e66b040b6c8381ce6e85f643f3a","7f25a3491cc38f502c5eb9e00a4f88af1bf82a4c","9cd9321b82d573447f08d84e9a8ca31c46fd6b8e","55bef5db971deed1358bcb2b375d6832b9ba6a1b","068e59b88a1230d709d99c83a45d3a5b91260810","1aea752ab6558d73dcd4302750acb7132c7ba6ab","00f7b192212078fc8afcbe504cc8caf57d8f73b5","87b94c2f86b9e8838bf15276fcfe9be0fd293588","4593ae644f04d76f582dedc4cc32d2acd33c9a93","e706b8ae2952740cb95c0182c4c44b0d11cc54c1","0a9cc699ed94b4729de3255d76305b91b6a56aaa","1664b784dd7d446ee8838e0eec5b980f61792007","0831a5baf38c9b3d43c755319a602b15fc01c52d","6f2f219a4f6d64843efe35f868ed919ce8b3a031","9748241beb02ef1e2d0e6dc877c04b354033a838","33457f49553d918e912c2d8c54b81f4fd8a4c234","23346a18e78062e586cab22195819eb0f18ffc66","35c2f7e0454adc0130c4279fce84a31701cebc67","01667cd68d259d08807e266e07c4f8eb1c81d2af","9aa0d7253574e50fe3a190ccd924433f048997dd","5dd350cee6ecfd097b57772f89e6341ff05b5725","39ac2e0fc4ec63753306f99e71e0f38133e58ead","0541d5338adc48276b3b8cd3a141d799e2d40150","6fcaf13d4a3d72ea53060941efa4b5cd57de0503","408b8d34b7467c0b25b27fdafa77ee241ce7f4c4","635fe1706a2a719b9c7935712db6e720fd418fa9","49532e318be89eed64725b32617c1fc570f824a4","fc3fbb4c76448e8968f8a19f076d133b2e7a2849","8318fa48ed23f9e8b9909385d3560f029c623171","05a618847e4f08e5bca29dff732757779722b2e0"],"s2Url":"https://semanticscholar.org/paper/22d9bd7d4d4e071ae573ac56fca7b58824c50801","s2PdfUrl":"http://pdfs.semanticscholar.org/22d9/bd7d4d4e071ae573ac56fca7b58824c50801.pdf","id":"22d9bd7d4d4e071ae573ac56fca7b58824c50801","authors":[{"name":"Syed Akbar Mehdi","ids":["20652154"]},{"name":"Cody Littley","ids":["2935796"]},{"name":"Natacha Crooks","ids":["2174285"]},{"name":"Lorenzo Alvisi","ids":["2445753"]},{"name":"Nathan Bronson","ids":["3155879"]},{"name":"Wyatt Lloyd","ids":["2665531"]}],"journalName":"","paperAbstract":"We describe the design, implementation, and evaluation of Occult (Observable Causal Consistency Using Lossy Timestamps), the first scalable, geo-replicated data store that provides causal consistency to its clients without exposing the system to the possibility of slowdown cascades, a key obstacle to the deployment of causal consistency at scale. Occult supports read/write transactions under PC-PSI, a variant of Parallel Snapshot Isolation that contributes to Occult’s immunity to slowdown cascades by weakening how PSI replicates transactions committed at the same replica. While PSI insists that they all be totally ordered, PC-PSI simply requires total order Per Client session. Nonetheless, Occult guarantees that all transactions read from a causally consistent snapshot of the datastore without requiring any coordination in how transactions are asynchronously replicated.","inCitations":["8f4dea0f10e050c46a73c3be32e1a6bc476b3877","efb351341158c8cb92ea6f479021c05e8e2e6120","922b8a397dfdd51f91ca27d56d2a2c5b6c61ba7a","c1447c4c07721e4e444aaa7ad5bb6a661c742bd2","8c17cb64a2153ed38d7a2517ac6b57083e0a0eff","f9764ea76e896d199bcb2864b92086fd5cd5d970"],"pdfUrls":["http://www.usenix.org./system/files/conference/nsdi17/nsdi17-mehdi.pdf","http://www.cs.utexas.edu/~lorenzo/papers/Mehdi17Occult.pdf","http://www.cs.utexas.edu/~ncrooks/2017-nsdi-occult.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-mehdi.pdf","http://www-bcf.usc.edu/~wyattllo/papers/occult-nsdi17.pdf","https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/mehdi","http://www.cs.cornell.edu/~lorenzo/papers/Mehdi17Occult.pdf","http://www.cs.utexas.edu/~samehdi/cloud2017_poster.pdf"],"title":"I Can't Believe It's Not Causal! Scalable Causal Consistency with No Slowdown Cascades","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Aliasing","Experiment","Frequency-hopping spread spectrum","Home automation","Indoor positioning system","Limiter","Multipath propagation","Spatial anti-aliasing","Wireless access point","Zero suppression"],"journalVolume":"","journalPages":"238-250","pmid":"","year":2017,"outCitations":["05fe031e53dd8990e7076a91277cb2b74e22b811","00f324e77f618eb32f9f5b26f2943f287f596f80","5b7a6c35b258d2c32c09f0377b0c79ba02c9a9a3","8317f40c569af2b5bb0aefbb6b07d6a991c1204e","29e9cd18af650b7e448dea668121a1d98afd3c46","d66472c3048549a952f2c58ad92f5d14e7dc1d23","ec0bf3b110af1f1352c179405435173f4e4a1fc9","0d424feecc7420d7b02a4afa2e494b0364341921","a7016075b373b572b3ced9f6712f0d565c608c7c","2b00e526490d65f2ec00107fb7bcce0ace5960c7","67f4f3c1b772f86815f88bc39231727693f5deb2","889a9ac61712b5a6ba9241bf0fea16b3a4223f09","e5edfbdf645a3dbcdaf7d9fcbf350c67fbbadae5","117450cc965a994b0e570c98ab0d9a3c1e4f5b60","1f911ae809066d4a55598bce939a466de980b13b","18b94ae2f53920d884f77e9aa8a32c80f3005759","7e403d160f3db4a5d631ac450abcba190268c0e6","c3543736a6f6372dac4cd54b5b5e4acfe5b0f152","6ba82499fffb77b74d0801da1928f14679df490f","101aaa6b7a3ebd049412265a43f8aed414f44db1","82802e411495bbad77fa2415c6d4633dde180764","16ccb8d307d3f33ebb395b32db23279b409f1228","b5d8b259052ffecd1fcf3eae9b08e31b41c24ec0","1b1e0ac5224582b1df37b11ca08ac0a0e5c98900","0b3fa65882b095e97353814c4266d8b934f62eab","3bb76c2989cb4aeae3b20f42e619a862f0d871ca","3da658b2cad5ce155abfb9035191892e9515b8ea","d80c46b3e3553f77db3c3b8814eb412d38957bcd","8012327465664ca6a64ee4d202536ec6c6d024f1","08616ca445012df0e3c982f742d2662bf0f0ce6e","18c4419c3137aff6c6def63c5fa3e67ab0326c80","666fbcf4697fc64d576b9e007af6ee612d10a9f8","0017542f2f908b0f2ce3558ca1767687b1db42bb","32e12e79fad14da18a758715f8f62ae97143b6a0","e846a88ca573b610a41e348ecec09fd33c37fae3","e39c17f6c5a83581890640049b075badff0cd34d","18f355d7ef4aa9f82bf5c00f84e46714efa5fd77","2d3c4a0d1ba1f4e015aacb691699f649fc284332","5a0e84b72d161ce978bba66bfb0e337b80ea1708","510dfb8ecc6cb884321afe436e3ac50e667a7a9e","21d0f3b4c847e04be0f3735f5f55bffe32e942e3","540ac698963add83d4e47d52edc54c84160eddd1","17ae4340ebcb3f7d4d77fdc34106d80c924ac7ed"],"s2Url":"https://semanticscholar.org/paper/57ac29e03ef2998312cdb399ecceceb36c1fb7b0","s2PdfUrl":"","id":"57ac29e03ef2998312cdb399ecceceb36c1fb7b0","authors":[{"name":"Zhe Chen","ids":["1696121"]},{"name":"Zhongmin Li","ids":["1945738"]},{"name":"Xu Zhang","ids":["1701714"]},{"name":"Guorong Zhu","ids":["35538656"]},{"name":"Yuedong Xu","ids":["1722346"]},{"name":"Jie Xiong","ids":["1784158"]},{"name":"Xin Wang","ids":["1705489"]}],"journalName":"","paperAbstract":"Owing to great potential in smart home and human-computer interactive applications, WiFi indoor localization has attracted extensive attentions in the past several years. The state-of-the-art systems have successfully achieved decimeter-level accuracies. However, the high accuracy is acquired at the cost of dense access point (AP) deployment, employing large size of frequency bandwidths or special-purpose radar signals which are not compatible with existing WiFi protocol, limiting their practical deployments. This paper presents the design and implementation of AWL, an accurate indoor localization system that enables a single WiFi AP to achieve decimeter-level accuracy with only one channel hopping. The key enabler of the system is we novelly employ channel hopping to create virtual antennas, without the need of adding more antennas or physically move the antennas' positions for a larger antenna array. We successfully utilize the widely known \"bad\" spatial aliasing to improve the AoA estimation accuracy. A novel multipath suppression scheme is also proposed to combat the severe multipath issue indoors. We build a prototype of AWL on WARP software-defined radio platform. Comprehensive experiments manifest that AWL achieves a median localization accuracy of 38 cm in a rich multipath indoor environment with only a single AP equipped with 6 antennas. In a small scale area, AWL is able to accurately track a moving device's trajectory, enabling applications such as writing/drawing in the air.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3143361.3143377"],"title":"AWL: Turning Spatial Aliasing From Foe to Friend for Accurate WiFi Localization","doi":"10.1145/3143361.3143377","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3143361.3143377","venue":"CoNEXT"},
{"entities":["Crowdsourcing","Curve fitting","Directory Services Markup Language","Domain-specific language","Domain-specific modeling","Modeling language","Programming paradigm"],"journalVolume":"","journalPages":"129-138","pmid":"","year":2017,"outCitations":["5eb61b4544780757235a10bc384d72b2ebb5270c","87d95dc96c90e1e371ffc484ac6bfa83a3be75b5","0be1ab2398a7cdf1b8d2d4b496f4efd898e89e74","024b6bc78fb1f97e3056e3873cc47043780e220a","395d93ea7d00cb3655f3346afadef98ff38d636f","a82a10b8c59f330910bdd0e0391c46e2eb89d8d6","0e37876d4c7b60c2c2c748f723d304af72a3de03","fbc60c004d84d6ee55aaa02f34a823da4f898b2b","042a1d7e76d8a24851451099c32ede833e540572","f034e925e992f7cc080086087a95305a18b9745b","77ed3dce60ec3b67ccdbdf099b3c90b2fe003223","b043388c5f630687047c767bc02bf1716f508b0d","0afde1f62b74f13998b59b6ea9a27aa95863331a","dda8fe1f73559b7c17cfddc084f3271fb9d6f5e1","0a5543ee4d4fec9b7da1773399347d3c5519fabe","59970eba7298666165c54ba678d5900a9ecfc2d6","385cf0d0b528510e09ccfc2bb7670d335cee61e5","6522603ed4648394cc33246ff3e46d0dc0bf4708","421599bc84af4f5779c21a613aa93013751255b2"],"s2Url":"https://semanticscholar.org/paper/8c409b668f76f720d2b4efb11129c161b2dc46cf","s2PdfUrl":"","id":"8c409b668f76f720d2b4efb11129c161b2dc46cf","authors":[{"name":"Marco Brambilla","ids":["1720147"]},{"name":"Jordi Cabot","ids":["1705375"]},{"name":"Javier Luis Cánovas Izquierdo","ids":["39443934"]},{"name":"Andrea Mauri","ids":["34544046"]}],"journalName":"","paperAbstract":"Crowdsourcing has emerged as a novel paradigm where humans are employed to perform computational tasks. In the context of Domain-Specific Modeling Language (DSML) development, where the involvement of end-users is crucial to assure that the resulting language satisfies their needs, crowdsourcing tasks could be defined to assist in the language definition process. By relying on the crowd, it is possible to show an early version of the language to a wider spectrum of users, thus increasing the validation scope and eventually promoting its acceptance and adoption. We propose a systematic method for creating crowdsourcing campaigns aimed at refining the graphical notation of DSMLs. The method defines a set of steps to identify, create and order the questions for the crowd. As a result, developers are provided with a set of notation choices that best fit end-users&#039; needs. We also report on an experiment validating the approach.","inCitations":["d3c7378a568b81c45759698a0548080dbd7c656b"],"pdfUrls":["http://doi.acm.org/10.1145/3136014.3136033"],"title":"Better call the crowd: using crowdsourcing to shape the notation of domain-specific languages","doi":"10.1145/3136014.3136033","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136033","venue":"SLE"},
{"entities":["Central processing unit","Control plane","Data center","Forwarding plane","Hypervisor","Management plane","Microprocessor","Multi-core processor","Network interface","Network interface controller","Network switch","New Foundations","Program optimization","Software-defined networking"],"journalVolume":"","journalPages":"506-519","pmid":"","year":2017,"outCitations":["11c1af3385b836626f0cc0f3e70ec386c516a424","42824a703198f8824fa8eb001035f8e9d1c7fdd0","320dd86417661178837059025c6d1f9a75d08bfd","0d3f85933b6355789588476e491683532c68a906","c4f94368cab4575431ca56645ab4688bc907128b","110ca6f5ef5fb2963b8b987aec358a46c0cb7823","e9ddae666a8fde158d4b52b157fbed62542a4049","a1471d43cb75cc9699c392297ecf3693a5e5cf96","64f3a81fff495ac336dccdd63136d451852eb1c9","6bbb692392335a67f0187151a34ec5c16400a00b","7129b305ce45f83127e928e8510da9fae0783905","0baf1bef6ee3bcb0b385a4ac303dcf0b406c64f4","aaca14d54be1d34833fd086229ab2f5aa8b70050","3bc9d643f741343c6eef24363a20e2b483439149","4534c15b4760cb29a0ce74fcd43297fe83f2f277","99d473437ea95dddc983a197e96569505be757f2","36bb67d8fba0c85f2495449a9926018827368df5","3a86edce75e4d49dec49d799d30e41a0af877fbe","336b4f3099b8f629adc20a69aba15257e53539f9","8df62aad18d6de13331479666c3b5d6a32b0ba58","4bf97ac7427196bff2b9c689b53f34bbe98d52ce","3027396f89500a973e5cdf93c2aedb8d6a62eee6","088536c44bcbc67165dc064ba4af0bc015d58a65","11fe71a02b30a206ca0706391b33c45d3e9d8f37","1cbbdf58133f763813b3a61b8faf2f5ab74464b7","1901753d2664473a3758a1c4413421611d7f17bc","67da5535394a9bfb4e5853d89063db505776db8d","4f5ef5dfe854a9c9f34af44d306534c9a1606b15","bea095bd20dc301747b7645ff3ee9de80d16c701","847955ec5e2777f771e9ad757638b28671fc5f25","424bc408f86bada47693a2fb45369cdfaf5fbdb4","16d95a30bf189a0fe37af03eee9cc8af49709cd2","2233d39a189ab2bdf8ad370e61bea79c5c3192dc","7db303e5171f09dfd25065ba8a70a4d74e9ae345","b386c93eec61b5af3c137e125cf1471f7131167a","669c88fa482308d0336249d09f4b3b32edc36aa6","2077579d62fc090d4ddf45f107ffae0468936165","1b11d4b0b04e0eb061029b57e1a1c436193f13b1","225603198cc415d363db8a8a2bd30b0df3c963b1","bf710d87694f9c49ae16448dfcf7a42aad9b4fa0","4c5d4902583313fea69033c6e528b95a42353da6","b46e192c84945528f6029138fdb26a9629f2dc6c","ec448ceb3e05b9222113366dace9fdd2a62322de","14d644c617b1bdf57d626d4d14f7210f99d140e6","dc83b565728f78ad9c49a9b83138022de7a83d1c","39bfff0c76441e0af69f3d61915f2ad930bf6b27","163247e7ed8db43c9529d85c384d8843e22a136b","42d1b52254873ecd0f36eb7342f95dbad9c50187","9edfe7c6166d08eaf0b7dd865537e2c1c0ed082a","6068cdb7a834f47a38ffcbfa4128e70ed3e385eb","38835c6de31855989425eed69451969d8dfafe42","7ed8dd92f4a174b630836700cf12d0adebd5c708","2c7e254cfea97f0b10320d723aa906f3f5c9bed6","10bfd5aed1410b88c5c1b5212f450a1994fc5afe","2b0cdd2452832a36e15a1c17d8fdf91dfad9352f","0428e3b146a7849e7ad19143e09e0fa897fe2220"],"s2Url":"https://semanticscholar.org/paper/6cfe9dc89d0fd4778ec9a42af1a39ed99f605211","s2PdfUrl":"","id":"6cfe9dc89d0fd4778ec9a42af1a39ed99f605211","authors":[{"name":"Yanfang Le","ids":["2738554"]},{"name":"Hyunseok Chang","ids":["1692142"]},{"name":"Sarit Mukherjee","ids":["1706584"]},{"name":"Limin Wang","ids":["33345248"]},{"name":"Aditya Akella","ids":["1713535"]},{"name":"Michael M. Swift","ids":["9833675"]},{"name":"T. V. Lakshman","ids":["1707547"]}],"journalName":"","paperAbstract":"Increasingly, smart Network Interface Cards (sNICs) are being used in data centers to offload networking functions (NFs) from host processors thereby making these processors available for tenant applications. Modern sNICs have fully programmable, energy-efficient multi-core processors on which many packet processing functions, including a full-blown programmable switch, can run. However, having multiple switch instances deployed across the host hypervisor and the attached sNICs makes controlling them difficult and data plane operations more complex.\n This paper proposes a generalized SDN-controlled NF offload architecture called UNO. It can transparently offload dynamically selected host processors' packet processing functions to sNICs by using multiple switches in the host while keeping the data centerwide network control and management planes unmodified. UNO exposes a single virtual control plane to the SDN controller and hides dynamic NF offload behind a unified virtual management plane. This enables UNO to make optimal use of host's and sNIC's combined packet processing capabilities with local optimization based on locally observed traffic patterns and resource consumption, and without central controller involvement. Experimental results based on a real UNO prototype in realistic scenarios show promising results: it can save processing worth up to 8 CPU cores, reduce power usage by up to 2x, and reduce the control plane overhead by more than 50%.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3127479.3132252","http://pages.cs.wisc.edu/~akella/wisr-webpage/papers/p506-le.pdf"],"title":"UNO: uniflying host and smart NIC offload for flexible packet processing","doi":"10.1145/3127479.3132252","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3127479.3132252","venue":"SoCC"},
{"entities":["Adaptive system","Complexity","Control system"],"journalVolume":"","journalPages":"103-114","pmid":"","year":2017,"outCitations":["2613e7d1b36e751f66402acd6aaf8d8501b91b19","d2d57264938173760b2aa618f115e2af4d5c74e1","025652412d507a8cf98ecacd8a44d32ce28995e1","882e93570eae184ae737bf0344cb50a2925e353d","4c82cd09463cbb139e75d6adc21c53714d7f6a16","96427b170754bd2cbb4fbeab269c60dd82de22f5","7972269fbf1376495d44ac13485f306aed008810","d7b05c7f3b680f4d2d14b22c9db6fe9116290d63","91295da1d9a04ef726727d5e88f346441846cf2f","88a797a0a3a24acb64bc18dc8313ad8dc2d6352d","455742bb30f0115bcd06dab4e4b6c03a795a895b"],"s2Url":"https://semanticscholar.org/paper/2f94c1482a43338c0f7105fc0ccc9628ee2c1b2b","s2PdfUrl":"","id":"2f94c1482a43338c0f7105fc0ccc9628ee2c1b2b","authors":[{"name":"Michael Menth","ids":["1759515"]},{"name":"Frederik Hauser","ids":["38715805"]}],"journalName":"","paperAbstract":"Moving averages (MAs) are often used in adaptive systems to monitor the state during operation. Their output is used as input for control purposes. There are multiple methods with different ability, complexity, and parameters. We propose a framework for the definition of MAs and develop performance criteria, e.g., the concept of memory, that allow to parameterize different methods in a comparable way. Moreover, we identify deficiencies of frequently used methods and propose corrections. We extend MAs to moving histograms which facilitate the approximation of time-dependent quantiles. We further extend the framework to rate measurement, discuss various approaches, and propose a novel method which reveals excellent properties. The proposed concepts help to visualize time-dependent data and to simplify design, parametrization, and evaluation of technical control systems.","inCitations":["126885cad3a1efa8a9ec4d718a10a41ef2aa3016","91295da1d9a04ef726727d5e88f346441846cf2f"],"pdfUrls":["http://doi.acm.org/10.1145/3030207.3030212"],"title":"On Moving Averages, Histograms and Time-DependentRates for Online Measurement","doi":"10.1145/3030207.3030212","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3030207.3030212","venue":"ICPE"},
{"entities":["Automatic identification and data capture","Benchmark (computing)","Electron mobility","Holism","Quantum channel","Radio-frequency identification","Sampling (signal processing)","Stationary process","Tag (metadata)","Two-phase commit protocol"],"journalVolume":"","journalPages":"199-211","pmid":"","year":2017,"outCitations":["7b3d9e4bfc165d38dad83dca4b2397c024fbd2db","2cc668fd26f9a2fa1b9e64c1c61f32ddf7630791","4618dc76f77c3d09510f0530f1805dd7702f5b5c","2d12b6189a0681b933f9a96b8ab14daac2bcfd73","d72cece54137c12c76c333f8120730dfa6da39a2","49ba23ea599198121d7c6a8fffc8e1156ac5e5d5","540ac698963add83d4e47d52edc54c84160eddd1","1413b78c713429ea00dbd70a49e0d2e606a82be9","05eca7b08c495020d499716fb90a37ba0715f7ff","101aaa6b7a3ebd049412265a43f8aed414f44db1","6f6772cb62441732e831e0eef036e17cbf8858dc","644e1494176c0ff33fba8f745087a56cafa1ecaf","97a223a650576788408a3956aca4a54549ba6fa2","1879bf3d2e843155056344a8f6a6cd27b10e0668","9c84d7af3db4fc90e872556c936953aae48ea1a1","82802e411495bbad77fa2415c6d4633dde180764","c6befa4184c540516080a20e1058ce33bf51e586","19a8b624116966d42b616ad923205f5c1ec4a5c3","2b3aabf4173e515a6e9bbc3410cd5dd9c87549ba","a64b650820541396f221efc78cd98624bbf7a109","0b3fa65882b095e97353814c4266d8b934f62eab","a361f606d62e0be40df91b143f7f7086d0b249d4","21d33bfc0caf63357379d861debd12c91f7df03e","60b035d5c39df79d984b385eb2dd68288adea8fd","a6ef25ec69a84ccb16dd24615f4288e25df0ff7d","69e6c6aa4a207eb81be43949edc8af7d6b4782d1","8aea613645b3cf811d6c37811e34e8316ad972f1","1e45719efcccc817d382041b830c1f5052f1c36b"],"s2Url":"https://semanticscholar.org/paper/4d271267c20c4f6a93b7f22728cb65aba36596b4","s2PdfUrl":"","id":"4d271267c20c4f6a93b7f22728cb65aba36596b4","authors":[{"name":"Qiongzheng Lin","ids":["3084576"]},{"name":"Lei Yang","ids":["37417492"]},{"name":"Huanyu Jia","ids":["29824111"]},{"name":"Chunhui Duan","ids":["3444521"]},{"name":"Yunhao Liu","ids":["10258874"]}],"journalName":"","paperAbstract":"Radio-frequency identification (RFID) systems, as major enablers of automatic identification, are currently supplemented with various interesting sensing functions, e.g., motion tracking. All these sensing applications forcedly require much higher reading rate (i.e., sampling rate) such that any fast movement of tagged objects can be accurately captured in a timely manner through tag readings. However, COTS RFID systems suffer from an extremely low individual reading rate when multiple tags are present, due to their intense channel contention in the link layer. In this work, we present a holistic system, called Tagwatch, a rate-adaptive reading system for COTS RFID devices. This work revisits the reading rate from a distinctive perspective: mobility. We observe that the reading demands of mobile tags are considerably more urgent than those of stationary tags because the states of the latter nearly remain unchanged; meanwhile, only a few tags (e.g., &lt; 20%) are actually in motion despite the existence of a massive amount of tags in practice. Thus, Tagwatch adaptively improves the reading rates for mobile tags by cutting down the readings of stationary tags. Our main contribution is a two-phase reading design, wherein the mobile tags are discriminated in the Phase I and exclusively read in the Phase II. We built a prototype of Tagwatch with COTS RFID readers and tags. Results from our microbenchmark analysis demonstrate that the new design outperforms the reading rate by 3.2x when 5% of tags are moving.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3143361.3143387"],"title":"Revisiting Reading Rate with Mobility: Rate-Adaptive Reading in COTS RFID Systems","doi":"10.1145/3143361.3143387","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3143361.3143387","venue":"CoNEXT"},
{"entities":["A/B testing","Comparison shopping website","Computation","Cross-site scripting","Distributed computing","E-commerce","Peer-to-peer","Sandbox (computer security)","Secure multi-party computation","Server (computing)","Server-side","Software deployment","Watchdog timer"],"journalVolume":"","journalPages":"376-389","pmid":"","year":2017,"outCitations":["1844578c5f75884baa4931d2987cab10d70bd304","370e5b4ec00e883c294ff0628002dae57e206423","01dbc5466cce6abd567cc5b34a481f5c438fb15a","f16841e022038e94a59f7e0a82002102b78d79a4","598848aaa4aa40bb6b7ab51490821a173cf18800","4cf4ea6c801d3dad696464b198e7c51f1a77b302","378646bd5f089a464015676e3743fc6a0762121c","06a1d8fe505a4ee460e24ae3cf2e279e905cc9b0","d9e43b5772f35cd98cf833324c85f1a2541438bb","2e04e5c381edaf6334e43343aa8f0f79835dd1db","651b7744bebfeb6c6e42aa6b6d566e507fe319a5","abbb235fcf3b163afd74e1967f7d3784252b44fa","528cee5472f0a98fc295b4d8caf2e66ca1544d54","3f33c777387742f1713d98ba1a8817aac0598e19","1d89a12092d6323b9d3b1a5bd4e6790897e2a2be","bb63c68855d42c95623ed9362d0853ea1d4cc858"],"s2Url":"https://semanticscholar.org/paper/f7533b520c2aafe739da4958b2092bf52b3952ae","s2PdfUrl":"","id":"f7533b520c2aafe739da4958b2092bf52b3952ae","authors":[{"name":"Costas Iordanou","ids":["2331162"]},{"name":"Claudio Soriente","ids":["2678175"]},{"name":"Michael Sirivianos","ids":["2698864"]},{"name":"Nikolaos Laoutaris","ids":["1683137"]}],"journalName":"","paperAbstract":"We present the design, implementation, validation, and deployment of the Price Sheriff, a highly distributed system for detecting various types of online price discrimination in e-commerce. The Price Sheriff uses a peer-to-peer architecture, sandboxing, and secure multiparty computation to allow users to tunnel price check requests through the browsers of other peers without tainting their local or server-side browsing history and state. Having operated the Price Sheriff for several months with approximately one thousand real users, we identify several instances of cross-border price discrimination based on the country of origin. Even within national borders, we identify several retailers that return different prices for the same product to different users. We examine whether the observed differences are due to personal-data-induced discrimination or A/B testing, and conclude that it is the latter.","inCitations":["17061f61a89ca329a658e76b1c6a329757bfea47","78f8dde18d6e2f3788da6b80c0cc2e6d7eb218f3"],"pdfUrls":["http://conferences.sigcomm.org/sigcomm/2017/files/program/ts-9-2-Sheriff.pdf","http://doi.acm.org/10.1145/3098822.3098850"],"title":"Who is Fiddling with Prices?: Building and Deploying a Watchdog Service for E-commerce","doi":"10.1145/3098822.3098850","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3098822.3098850","venue":"SIGCOMM"},
{"entities":["CAS latency","Computation","DIMM","Data buffer","End system","End-to-end encryption","Field-programmable gate array","Flash memory","Gigabyte","Magnetoresistive random-access memory","Memory bus","NVDIMM","PCI Express","Pin compatibility","Prototype","Registered memory","Server (computing)"],"journalVolume":"","journalPages":"15-26","pmid":"","year":2017,"outCitations":["7c3ac5c755873cab6ae1120efa8606f93033b259","9071886ada746122ec49ef0338c011f4ce1aa060","8e8e622d5fab4c1d2a5bc7783db84e62cc570f9a","9725f9d16b4dca9f6c558c87adc6a10125013077","2960c89331eb7afa86584792e2e11dbf6a125820"],"s2Url":"https://semanticscholar.org/paper/b1a90d1ce4403aeaec632f38588ed7f8ee271813","s2PdfUrl":"","id":"b1a90d1ce4403aeaec632f38588ed7f8ee271813","authors":[{"name":"Bharat Sukhwani","ids":["2729527"]},{"name":"Thomas Roewer","ids":["2477992"]},{"name":"Charles L. Haymes","ids":["2809535"]},{"name":"Kyu-hyoun Kim","ids":["2306673"]},{"name":"Adam J. McPadden","ids":["16853118"]},{"name":"Daniel M. Dreps","ids":["2299788"]},{"name":"Dean Sanner","ids":["35138890"]},{"name":"Jan van Lunteren","ids":["2513955"]},{"name":"Sameh W. Asaad","ids":["2321017"]}],"journalName":"","paperAbstract":"We demonstrate the use of an FPGA as a memory buffer in a POWER8&#174; system, creating a novel prototyping platform that enables innovation in the memory subsystem of POWER-based servers. Our platform, called ConTutto, is pin-compatible with POWER8 buffered memory DIMMs and plugs into a memory slot of a standard POWER8 processor system, running at aggregate memory channel speeds of 35 GB/s per link. ConTutto, which means \"with everything\", is a platform to experiment with different memory technologies, such as STT-MRAM and NAND Flash, in an end-to-end system context. Enablement of STT-MRAM and NVDIMM using ConTutto shows up to 12.5x lower latency and 7.5x higher bandwidth compared to the respective technologies when attached to the PCIe bus. Moreover, due to the unique attach-point of the FPGA between the processor and system memory, ConTutto provides a means for in-line acceleration of certain computations on-route to memory, and enables sensitivity analysis for memory latency while running real applications. To the best of our knowledge, ConTutto is the first ever FPGA platform on the memory bus of a server class processor.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3123939.3124535"],"title":"Contutto: a novel FPGA-based prototyping platform enabling innovation in the memory subsystem of a server class processor","doi":"10.1145/3123939.3124535","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3123939.3124535","venue":"MICRO"},
{"entities":["Algorithm","Apex (geometry)","Bootstrapping (statistics)","Coat of arms","Exploit kit","Open security","Phishing","Rotten Tomatoes","Spawn (computing)","VirusTotal"],"journalVolume":"","journalPages":"537-552","pmid":"","year":2017,"outCitations":["05faf07051c6d4d18d2537e2ca00a66273a831ec","121d9c737a887f7f6a03ffbc5be87b26bdad17f8","523b3c576021827efbc54be8794953a216e77225","11bd3633e2647a205b78f71a7a583f81cbe33b39","0a964c5ac7e19cbdc820fd4ee101a5263385733d","1418c58ccf2f85461dfff22f1a7ac0ce27e44f7b","2912aa192bacb60c3764e7855a91ac8fb497093d","2ff9c10a0a8f43306f3a0492f8d6eca744d4e7c7","aa5b74993af58febc566cd067b94425e495b1a17","8188a3bc844d1ea707fa476edadfc99d4c38e3e3","7e9305eef5b3cd02c5d9e3768a5acf3c5654c8b3","090aca02c7faf914f8cab563065fca43f8aa6118","040f9477107816b0d0234ea49cb350befd4ce54c","34722d89e5f33203cf1cc1465350b8696bbf3a9e","297c46edcc9730e9177e28d7824c1cccba655fb5","416787e6a008ee539f2f5d157863f1cd36419e7d","6c5d03568e012a95c5a663309c8c21ff1e07e53f","01e1cbc042ba2c0b6fa73e41cf0a5ba2e972d0cf","49a8f9e8ed7dbd8382dbd30aa81321281cd54c07","69349684bf61888dc9fe5ff679ff1c7572d2d535","63b94d37f0826f65c2bc7ecc22c10da91efa6520","06240b5f5a928d49b53e848bcbaa4bf7c6beab35","b0d2e7a274bf7f778f0cd22486ead79d58c859ac","653eddac5447381e9a7e221498973296e8eb732c","3032182c47b75d9c1d16877815dab8f8637631a2","22a78f31395e79cb6c99c3cedd248ecd6568b7f7","0bb1bb38263368784df02ca4546fba3ea12c7c0e","6e9f6466a125587b4eeeb3845a5d8afe8b1e902c","0bec9e9fee4bee287ed2ea1ef9059b573fb0b711","0238bfd6a96479a45715423abaaedaa78a2e8b8a","ba9af0bf228cedfad61daa481a71ed433076ab8d","88a0a5f7dab7ca987d17d3bbdb4e49d3fbf439bc","0796bb6c803e4256d7bdc0885c6a26d058da3319","16b4a0d02f844e27a30dd722811442dd8e6a580d","219a11f8034f5d1a60a5afee946f9df386b71b4d","9509f45ebc129bd68ea94d55d90fee410afb8143","6db3835143fb2c337449717005e551ef11c58fbb","531ef3ad7b9e6d46b453547cf40182832eed2b0f","8714e68bb306f89b3fbce3307833405b6a632487","519a022f6103a68331402f499a9bc9447ef70995","353bc95ea6d720d867489e3d4cf5c9427531c7c7","2830246be09bbd376cd7f2ed9ae150110dcb08cf","e769c99f63f526ec88e74d9683bdbc12a6e55359","6a06f87d82975b873b3cd6130a60a26c1d0b181c"],"s2Url":"https://semanticscholar.org/paper/0a71dda39e97c9a4b8c4c88a135b9cda5bae588b","s2PdfUrl":"","id":"0a71dda39e97c9a4b8c4c88a135b9cda5bae588b","authors":[{"name":"Daiping Liu","ids":["2722186"]},{"name":"Zhou Li","ids":["1709780"]},{"name":"Kun Du","ids":["2146838"]},{"name":"Haining Wang","ids":["1699802"]},{"name":"Baojun Liu","ids":["33762719"]},{"name":"Hai-Xin Duan","ids":["39999006"]}],"journalName":"","paperAbstract":"Domain names have been exploited for illicit online activities for decades. In the past, miscreants mostly registered new domains for their attacks. However, the domains registered for malicious purposes can be deterred by existing reputation and blacklisting systems. In response to the arms race, miscreants have recently adopted a new strategy, called <i>domain shadowing</i>, to build their attack infrastructures. Specifically, instead of registering new domains, miscreants are beginning to compromise legitimate ones and spawn malicious subdomains under them. This has rendered almost all existing countermeasures ineffective and fragile because subdomains inherit the trust of their apex domains, and attackers can virtually spawn an infinite number of shadowed domains.\n In this paper, we conduct the first study to understand and detect this emerging threat. Bootstrapped with a set of manually confirmed shadowed domains, we identify a set of novel features that uniquely characterize domain shadowing by analyzing the deviation from their apex domains and the correlation among different apex domains. Building upon these features, we train a classifier and apply it to detect shadowed domains on the daily feeds of VirusTotal, a large open security scanning service. Our study highlights domain shadowing as an increasingly rampant threat. Moreover, while previously confirmed domain shadowing campaigns are exclusively involved in exploit kits, we reveal that they are also widely exploited for phishing attacks. Finally, we observe that instead of algorithmically generating subdomain names, several domain shadowing cases exploit the wildcard DNS records.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3133956.3134049"],"title":"Don't Let One Rotten Apple Spoil the Whole Barrel: Towards Automated Detection of Shadowed Domains","doi":"10.1145/3133956.3134049","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3134049","venue":"CCS"},
{"entities":["Algorithm","Best-effort delivery","Classful network","Denial-of-service attack","Goal-oriented Requirements Language","Lustre","Lustre (programming language)","Object storage","Quality of service","Rate limiting","Remote procedure call","Scheduling (computing)","Token bucket"],"journalVolume":"","journalPages":"6:1-6:12","pmid":"","year":2017,"outCitations":["26b99a8bceca2611c376978e40e9ee6e33381b59","78ccfd7e44dfc4e5f97f7b5047799ef8134a9d66","b9691c81824568fc61dfb0af56b366fc7a579847","dbe73781be3fcba36bb85b491789a53003e3292f","42f16de22db4c6be67d35507bad88322620a7dff","3e7fd5ac3fc1ab19c985c97a0614e4109fa91583","3572e2e04e187fd9f9b9fa051fd0651931a95b0e","7f0d159f3a4ce88f524669e08e19c0bbec4f261d","16d33d151da2a7b3160864a22f0324a5080301a1","0abe5211e209b272890ba6820a33b72e938b0b3b","1fa4666006fd54280c180012251004e9fdf95a2f","35501b12a19824cf2f4cf48eb65ceb1445b28c0e","0be9b098bf8b72e84b684aa8fc98672bef32513e","8fc8391ebed818f54f1f17dfe0b8dad57db24446","1ddd410257b00370c1fe58377f02f608ff16c3bf","111e2d5634cb30d5d841cdb22563f9b371fb5f54","29fa5399ec245d2b2d99b591ff37dd477e36cc0a","0b2c84be9e9f97f2464ad9d09be5f4c37edda47e","65a2cb8a02795015b398856327bdccc36214cdc6","0ccb855087109fb09d2c2e2445fe1df53c91085e","9093b918c0fa66c9f34f69a6c422f5ff7f340df8","31fcd061632d15567dbcbf4f9c5f7b781141a88a","1cace06116f34820aa0fdd6f0681f83c7be006b0","4ac4d917b384d9c0f26cfbe66ce31d4ab03bb1d0"],"s2Url":"https://semanticscholar.org/paper/214f4f4f555b608e59314168b08ed9daa4087200","s2PdfUrl":"","id":"214f4f4f555b608e59314168b08ed9daa4087200","authors":[{"name":"Yingjin Qian","ids":["2490811"]},{"name":"Xi Li","ids":["6916241"]},{"name":"Shuichi Ihara","ids":["28295813"]},{"name":"Lingfang Zeng","ids":["3348637"]},{"name":"Jürgen Kaiser","ids":["39664211"]},{"name":"Tim Süß","ids":["1783053"]},{"name":"André Brinkmann","ids":["1726087"]}],"journalName":"","paperAbstract":"HPC file systems today work in a best-effort manner where individual applications can flood the file system with requests, effectively leading to a denial of service for all other tasks. This paper presents a classful Token Bucket Filter (TBF) policy for the Lustre file system. The TBF enforces Remote Procedure Call (RPC) rate limitations based on (potentially complex) Quality of Service (QoS) rules. The QoS rules are enforced in Lustre's Object Storage Servers, where each request is assigned to an automatically created QoS class.\n The proposed QoS implementation for Lustre enables various features for each class including the support for high-priority and real-time requests even under heavy load and the utilization of spare bandwidth by less important tasks under light load. The framework also enables dependent rules to change a job's RPC rate even at very small timescales. Furthermore, we propose a Global Rate Limiting (GRL) algorithm to enforce system-wide RPC rate limitations.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3126908.3126932"],"title":"A configurable rule based classful token bucket filter network request scheduler for the lustre file system","doi":"10.1145/3126908.3126932","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126932","venue":"SC"},
{"entities":["Adversary model","Ciphertext","Ciphertext-only attack","Cryptanalysis","Dummy variable (statistics)","Encryption","Key (cryptography)","Known-plaintext attack","Linear algebra","Plaintext","Repetitive strain","Scheme","Security parameter"],"journalVolume":"","journalPages":"1069-1084","pmid":"","year":2017,"outCitations":["0677d17466f47dc8ef5fb89221ff3007c6196c33","197107b7ec65a623b59987cf7243921908068751","9506214130b9682d887869089f5e28d363991441","9e759181f4f3ff0883f3cf663cd7d3f5444f8ab2","7cc6a150b1ba5b40c8e5aca6e94c817d5bebbc5c","57d1cbb6501866a3dfeb1a34b29e1a12d528db39","965299efb158bace13e71ab11c6d547d6234d009","614ec837ec0f615c053fc97e9f1c1ceb8787926a","62ed6d4155c9872314d7b67416401344b442fb8f","c09241b21c87b0f3125f398254b0146281b578ae","b07fb9ae940ddaaa690de67cee2029e4373fdbc4","8776c004a351e23be9ef7a4d214da4fc93260484","010ab443478bbfbecb03be9c250a49ae3b19b4d5","18e704e31d06f955f39955cd4c785c4731e5fbd7","0832933a67612dc18e0f70cb0ed949fef1a830a5","0227e83202440c13c4c2b97b49ef7c64dfbd52c3","98cccb17fbefc01a6310574f25e591ab9d2586e2","39e042b4a1ffa5818ccb4783008bab297145b697","4beef78e9b21611a59237b63d512014e47f32d5e","50dd8acd7bd2e8daa96724138180de9152c01ec3","212fe709b564f26c63875c2621cd543149108cf7","234e14d7509ef2a14e829e1c08648f84462ad4ff","f36a8d4ea696a0d192a43c04158bae65bb472fb7","4a0c0f2fb44306730e6b106bd885b8def515daf7","33736e956a5c4703fb5f215bd3ad686eeeedf2de","0d202a739d29b1896b48510413009c0ffbbfc2ff","0aa4f7b8b5638731b474ede0a3c268c549092664","9b19a14e3c6e0a94a8a0e201e18c26c1c7c3105c","2cbe59fd40166a5cdab925bf6cd58d9d0d447d9c","2fca67c297ee39d8522ff25e464dbee8ebba66f5","2004123b3b9698abe916116910b2c46a712a5585","2f7c97e82641e4f0f8c7b508b75af4952b0cc07d","19f6680d750de9ceb0f88e1c801fb5014b094106","46527c14457cf84d1cf26487d6b4c31f4825db71","4af77753e00973f339fd93a27e4131047018e79c","55aafd6b8e9816203006c7e5c37e2e2fb8451113","3ed4d5df2a97d5d097e1fd837a8568eec0eb6d31"],"s2Url":"https://semanticscholar.org/paper/134506e98aa78c6e2efb1b93e08e25b61c25d8a0","s2PdfUrl":"","id":"134506e98aa78c6e2efb1b93e08e25b61c25d8a0","authors":[{"name":"Caleb Horst","ids":["39650803"]},{"name":"Ryo Kikuchi","ids":["2872966"]},{"name":"Keita Xagawa","ids":["2650377"]}],"journalName":"","paperAbstract":"Comparable Encryption proposed by Furukawa (ESORICS 2013, CANS 2014) is a variant of order-preserving encryption (OPE) and order-revealing encryption (ORE); we cannot compare a ciphertext of <i>v</i> and another ciphertext of <i>v'</i>, but we can compare a <i>ciphertext</i> of <i>v</i> and a <i>token</i> of <i>b</i> and compare a token of $b$ and another token of <i>b'</i>. Comparable encryption allows us to implement range and point queries while keeping the order of <i>v</i>'s as secret as possible.\n Recently, Karras, Malhotra, Bhatt, Nikitin, Antyukhov, and Idreos independently re-define comparable encryption and propose two schemes, a basic one and an \"ambiguous\" one, based on linear algebra~(SIGMOD 2016). The basic scheme is just comparable encryption. To hide the order revealed by tokens, they also proposed an ambiguous scheme where each ciphertext has two interpretations <i>v</i> and <i>v</i><sub>dummy</sub>. In the context of an indexed database, this means that every encryption has two places in the database corresponding to the two interpretations, masking the correct placement in the database unless the dummy value is detectable. They assessed that their basic scheme (and ambiguous scheme upon the basic scheme) is secure against known-plaintext attacks; the adversary will require <i>O</i>(&#8467;) plaintext-ciphertext pairs to recover secret key, where &#8467; is a security parameter.\n This paper cryptanalyzes their comparable encryption schemes by using simple linear algebra. We show that a few tokens and a few plaintext-ciphertext pairs instead of <i>O</i>(&#8467;) pairs allow us to mount several attacks efficiently. Our attacks are summarized as follows: <ul><li>Attacks against the basic scheme: -A ciphertext-only attack using two tokens orders the ciphertexts correctly. -A known-plaintext attack using two tokens and two plaintexts reveals exact value of <i>v</i>.</li> <li>Attacks against the ambiguous scheme: -A ciphertext-only attack using two tokens orders the ciphertexts with a constant probability. -A known-plaintext attack using three tokens and three plaintexts reveals exact value of <i>v</i>.</li></ul>","inCitations":["b2fcd2497eee0f6795dcf083c2dd6fd903b583ea","0bd8f0ab2ade3cbb560dca22c2f5dfd203f4cfd3"],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3035948"],"title":"Cryptanalysis of Comparable Encryption in SIGMOD'16","doi":"10.1145/3035918.3035948","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035948","venue":"SIGMOD Conference"},
{"entities":["Baseline (configuration management)","Central processing unit","Concurrency (computer science)","Dynamic random-access memory","Graphics processing unit","High Bandwidth Memory","ISDB","Locality of reference","Memory controller","Terabyte","Throughput","Wiring"],"journalVolume":"","journalPages":"41-54","pmid":"","year":2017,"outCitations":["80bedecd71a7e965b9c2f667b8f42c2705d4c714","37782ba980effbbb63d8518625d0f795be866822","540a65f5e2176c4000551f1335a24e0f07500f68","363f34245c38c45eafa9c1e50e790ed33c69f224","074a308aa9682041c06cb572698cc32cb73dba46","8b04ea524cb6ced72868c120a00c4679d84be006","464af3debb8434807ab04eb749d63594e78ee786","5bc38d62a09e26105973662c420628810b597750","1f3611aa60accc2ebd229162b8919b2a7ccbae33","37e49c57dd4d0849380d177222db53e52ff21347","942394566ccb9dbf40243dc2bd3c4d7605bbefa2","570445ec044aa24f8894c75130c57a5ed174e200","14505c2bdd3822d7a62385121d28ba3eb36fea1d","009e4da527a3518c29c95970efb79733a67979fb","8f1b17f8f327f6f3856f906a81e9ca19b7f9c5f7","2dc38b527e91f8cfee6f6c7ba4d079087c293471","54a15f2c25bec4274d5bb423dbc5002426a506a3","bfe6157690a837af71c62abc94811ef7faf45fd4","0b99d677883883584d9a328f6f2d54738363997a","4390f4a06a036b8f04cbb4fe7611fa5af9492797","d410f8128bd4efa6adc886259e5d9de4cd7587bc","3ad6c5012cba78f29cb8d0ed556c32b93966076e","c8b6e390eb9cf0a3452decfff8461359315416cd","1dec8f5106d11047aaaf126121110cbf890f17c3","10db43d5a1b3c1ddf6dc93fa992b8ed42dcf9833","232790b7531d6ab598ebae0aff2f5e0017bcbf28"],"s2Url":"https://semanticscholar.org/paper/6aeb1bc8306f0c079d24cded5c4eff7de5da46e8","s2PdfUrl":"","id":"6aeb1bc8306f0c079d24cded5c4eff7de5da46e8","authors":[{"name":"Mike O'Connor","ids":["2341074"]},{"name":"Niladrish Chatterjee","ids":["2866959"]},{"name":"Donghyuk Lee","ids":["15895903"]},{"name":"John M. Wilson","ids":["33301771"]},{"name":"Aditya Agrawal","ids":["40248185"]},{"name":"Stephen W. Keckler","ids":["1715863"]},{"name":"William J. Dally","ids":["1696619"]}],"journalName":"","paperAbstract":"Future GPUs and other high-performance throughput processors will require multiple TB/s of bandwidth to DRAM. Satisfying this bandwidth demand within an acceptable energy budget is a challenge in these extreme bandwidth memory systems. We propose a new high-bandwidth DRAM architecture, Fine-Grained DRAM (FGDRAM), which improves bandwidth by 4&#215; and improves the energy efficiency of DRAM by 2&#215; relative to the highest-bandwidth, most energy-efficient contemporary DRAM, High Bandwidth Memory (HBM2). These benefits are in large measure achieved by partitioning the DRAM die into many independent units, called grains, each of which has a local, adjacent I/O. This approach unlocks the bandwidth of all the banks in the DRAM to be used simultaneously, eliminating shared buses interconnecting various banks. Furthermore, the on-DRAM data movement energy is significantly reduced due to the much shorter wiring distance between the cell array and the local I/O. This FGDRAM architecture readily lends itself to leveraging existing techniques to reducing the effective DRAM row size in an area efficient manner, reducing wasteful row activate energy in applications with low locality. In addition, when FGDRAM is paired with a memory controller optimized to exploit the additional concurrency provided by the independent grains, it improves GPU system performance by 19% over an iso-bandwidth and iso-capacity future HBM baseline. Thus, this energy-efficient, high-bandwidth FGDRAM architecture addresses the needs of future extreme-bandwidth memory systems.","inCitations":["82d9d4cae6cb82ad516371414cc53da6ec9708b0","7910d6665da5f1aefc1d151e526ce9fe65a82ce0"],"pdfUrls":["http://doi.acm.org/10.1145/3123939.3124545","http://www.cs.utexas.edu/~skeckler/pubs/MICRO_2017_Fine_Grained_DRAM.pdf","http://www.cs.utah.edu/~nil/pubs/micro17.pdf"],"title":"Fine-grained DRAM: energy-efficient DRAM for extreme bandwidth systems","doi":"10.1145/3123939.3124545","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3123939.3124545","venue":"MICRO"},
{"entities":["CNS disorder","Cache","Cache (computing)","Central processing unit","Cluster analysis","Computer data storage","Fairness measure","Mathematical model","Mathematics","Multi-core processor","Policy","User space","Workload","cellular targeting","large latent transforming growth factor-beta complex","statistical cluster"],"journalVolume":"","journalPages":"194-205","pmid":"","year":2017,"outCitations":["48930aa2539b12d60352283dd4f91c845cf9b69c","398cc68e6df0cffb5b06da2ab39b004bec8ad9ab","048c75cd0a0d75c87e4362a7be3dae01754282ab","0b885bb186445ee0c50277d990eca18c53fef09b","2fae39f82be19b311d743d3525badd777228e3ed","04d18db6522acc5ee975bad34e3fa1765aabd130","06ca0342e4c132f65fd72c16fe688195cd320002","047ce7ad6d9d4f674e1775da86723c7e869e375b","014ba063a3721973ba6af6503232d4d21d1456bb","d52b40ed62b865ee455b0fd7741e83af9353ee3c","284bc76cd122b8295704b0746363266d5dc568f6","2f919f99bf5b6d5667968c318b62d7335814ceff","3ef44315caebb6169b7ffbf9886cd782193ab40e","40ccd404abbc52c306442fc7c396e50021d764e7","f16841e022038e94a59f7e0a82002102b78d79a4","e66455a61821afde0c4d2cbd95c3d9ed0f843675","37d98d3b43b1830083459376a4c9e9221c97a75b","515bafe6b8f1d893cf9742ff08ad0b50db07a980","c7cd26ef437f95622a8effe114e769fb589cbf47","8643adf49ed63d4a89015229f63b36753929fee1","4441f6b08fb7a2439dc46a468a1d8c17fe87c622","1d31aceaa4fbf3a8afca3139675482b1cdf84495","203dfcfffbb069f7d13fd4e7c1aafa9237817aaa","333da42f4369dff8ca905ad21ea6ee2f5dc99d55","a3ba3e4a305888694c692b0634be05209324c67a","01efab73433b00bfbf7e2178a4b6887fd8b063f4","ec7d53659035109483424c748c8665074ba0a573","68073f621072d793e95b9562bf9a9245415d5a96","863bcc82bd61f2199a4f2c4c6bc34a26c217c87a","1cb7d1b3226d0a2fc77e54dee596a7a2d6d098d5","1817aa7ffd9932244e6c7161205f5099692242f3","251ea4c57e71bb951ff6f9fe0ff63897a298402f","0fc52b5c7aa713802d69d3f1c6e7a26a5eb3493a","2451dc6bb08d2668f4a876ce94d0c15227ccab7a","31c1ebd6214a6146f2739fb81bf560229f413c91","d816026897f00477db1be36f230f0fd2578483bd","4c078fd1f07b9e8b65e27ecd9790e9f4fc579af1","283550fce0fdc0876db5df533625dffdfcd8d099","2269889c9085ff518ee9e7f5b2f92e4599dd3ff2","98cdaa6c09d786cf1e3992cd09811c92f596b478","c8babd715cdd1da173693d19184895a903269935"],"s2Url":"https://semanticscholar.org/paper/03d20778bfcec227a10bb5ba1539515f0ba1e4ee","s2PdfUrl":"","id":"03d20778bfcec227a10bb5ba1539515f0ba1e4ee","authors":[{"name":"Vicent Selfa","ids":["2896559"]},{"name":"Julio Sahuquillo","ids":["1813689"]},{"name":"Lieven Eeckhout","ids":["1717133"]},{"name":"Salvador Petit","ids":["5482726"]},{"name":"Mar&#x00ED;a E. G&#x00F3;mez","ids":["27080567"]}],"journalName":"2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT)","paperAbstract":"Achieving system fairness is a major design concern in current multicore processors. Unfairness arises due to contention in the shared resources of the system, such as the LLC and main memory. To address this problem, many research works have proposed novel cache partitioning policies aimed at addressing system fairness without harming performance. Unfortunately, existing proposals targeting fairness require extra hardware which makes them impractical in commercial processors.Recent Intel Xeon processors feature Cache Allocation Technology (CAT), a hardware cache partitioning mechanism that can be controlled from userspace software and that allows to create partitions in the LLC and assign different groups of applications to them.In this paper we propose a family of clustering-based cache partitioning policies to address fairness in systems that feature Intel&#x2019;s CAT. The proposal acts at two levels: applications showing similar amount of core stalls due to LLC accesses are first grouped into clusters, after which each cluster is given a number of ways using a simple mathematical model. To the best of our knowledge, this is the first attempt to address system fairness using the cache partitioning hardware in a real product. Results show that our best performing policy reduces system unfairness by up to 80% (39% on average) for 8-application workloads and by up to 45% (25% on average) for 12-application workloads compared to a non-partitioning approach.","inCitations":[],"pdfUrls":[],"title":"Application Clustering Policies to Address System Fairness with Intel&#x2019;s Cache Allocation Technology","doi":"","sources":[],"doiUrl":"","venue":"2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT)"},
{"entities":["CPU cache","Central processing unit","Commodity computing","Direct memory access","Disk buffer","Disk storage","Encryption","End-to-end encryption","Flash memory","In-memory database","Memory bandwidth","Network traffic control","Operating system","PCI Express","Page cache","Plaintext","Server (computing)","Streaming media","Throughput","User space","Web server","Zero-copy"],"journalVolume":"","journalPages":"211-224","pmid":"","year":2017,"outCitations":["67ac8e37fd240844e0726a2d171e20042c7648f4","158ebe313a72857c5534a313f3ec0e413593b732","2c11d5117a8b97ef2ef268e5fb38e8c5ffb1c58c","7b40f864cbaeffe0ba87e51da4f945a31543642d","20a63e9826480867d7c70be89e18e3952d00310a","46a38fb1e26c9957111d154c6fc2c39101ff0ba1","09bd66ed15985caa6b0bf1d54a36b508141ed128","4f7e07d71a54b257261aefecef390f7f66b79f61","5b7561f44f95ab68dbedb839849cbe72313aef20","080b1f2c8316dad80d8c385dfcb82335a64a4d29","29c324788b83463aa707784210edbca894694f20","225603198cc415d363db8a8a2bd30b0df3c963b1","7932a4597cec5149c575aa2303fe8f12241e4320","1b2e68064f2bea7de1f73c4c04a061d05cb0f3e8","0f04a0b658f00f329687d8ba94d9fca25269b4b7","093d1d23500d65e99c7d0cd5569ce0f0d4c37076","10fede77f843e9eb5ef1768a17543013616d9243","0a5bb204cf8e5cce872573445f3cdb17c12203ff","69258ba9b1ace027daa767192698c84bf49b9fb6","77a3133097ff59bae0b6ac8fae418a58b585dacb"],"s2Url":"https://semanticscholar.org/paper/2acd762364c619d8706cd7f983160d342bfea5aa","s2PdfUrl":"","id":"2acd762364c619d8706cd7f983160d342bfea5aa","authors":[{"name":"Ilias Marinos","ids":["2120871"]},{"name":"Robert N. M. Watson","ids":["2750619"]},{"name":"Mark Handley","ids":["5597426"]},{"name":"Randall R. Stewart","ids":["2958660"]}],"journalName":"","paperAbstract":"Conventional operating systems used for video streaming employ an in-memory disk buffer cache to mask the high latency and low throughput of disks. However, data from Netflix servers show that this cache has a low hit rate, so does little to improve throughput. Latency is not the problem it once was either, due to PCIe-attached flash storage. With memory bandwidth increasingly becoming a bottleneck for video servers, especially when end-to-end encryption is considered, we revisit the interaction between storage and networking for video streaming servers in pursuit of higher performance.\n We show how to build high-performance userspace network services that saturate existing hardware while serving data directly from disks, with no need for a traditional disk buffer cache. Employing netmap, and developing a new diskmap service, which provides safe high-performance userspace direct I/O access to NVMe devices, we amortize system overheads by utilizing efficient batching of outstanding I/O requests, process-to-completion, and zerocopy operation. We demonstrate how a buffer-cache-free design is not only practical, but required in order to achieve efficient use of memory bandwidth on contemporary microarchitectures. Minimizing latency between DMA and CPU access by integrating storage and TCP control loops allows many operations to access only the last-level cache rather than bottle-necking on memory bandwidth. We illustrate the power of this design by building Atlas, a video streaming web server that outperforms state-of-the-art configurations, and achieves ~72Gbps of plaintext or encrypted network traffic using a fraction of the available CPU cores on commodity hardware.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3098822.3098844","http://www.cl.cam.ac.uk/~rnw24/papers/201708-sigcomm-diskcryptnet.pdf"],"title":"Disk|Crypt|Net: rethinking the stack for high-performance video streaming","doi":"10.1145/3098822.3098844","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3098822.3098844","venue":"SIGCOMM"},
{"entities":["Bandwidth (signal processing)","Cache (computing)","Computer data storage","Graphics processing unit","Interference (communication)","Memory bandwidth","PCI Express","Quality of service","Resource contention","Server (computing)","Solo"],"journalVolume":"","journalPages":"17-32","pmid":"","year":2017,"outCitations":["2c2fa29dfbbab106f1b94cdfdc67939d3355bd30","2c62673138ce576b53259f53a10a00e1b0b1ef66","24bec342a0e677d9be167f24d2a824e1120b3e7a","39a6aa81ec3e20c1d500b99b560deb039c451b83","a5a95ad4b217cf5b2f1038753ba76fae94da1bec","3000e77ed7282d9fb27216f3e862a3769119d89e","02b141ddc423469afde9c99cf76028095ef28127","092a1cf971fb8359d3293004c6f1de82f05f3afb","76d791a34301b60f4c6c081b091fb7bdc2971435","0f44833eb9047158221e7b3128cde1347b58ccd6","5fe43f4d79d2829ba062fe9cf1711ee60903dd24","251ea4c57e71bb951ff6f9fe0ff63897a298402f","3c0bc4e9d30719269b0048d4f36752ab964145dd","4aec1ba26ca8a42a041dc0ac6a43dc91f1b6abc1","3ce662e1663456ce2a5b5d240112721c0d0a4582","9f66b44a04ea83433ceeb71c75eba71245e2df80","40bb6830ec715b52e0fcbe7566f489dd2d0c25fe","269c24a4aad9be622b609a0860f5df80688c2f93","26512755e7f78e10390b409ed4de3378aba2bac8","a3d4cb8407bbb8abc9b668ceb356b9cd41f49268","0612811b3ed9fc7ef8300e65cb70360613dab01d","23f4f3430cd97f034563dc0a41039c5fbc58f6a3","6d44790b6d952eff28f302998e8121f90786e3ff","c3c244e6a07810e738c8eb3c10d652b7da0267d6","1d286a264b233125b681e522e8f5fed596a8608c","956886e5d439f35864bb9ea0ea89e29932330b2d","1f1a1f0cd075cef63083c8ec15321021dbff2cfc","54a9b924b0c951fa444c600df2f5bd41d96932f2","4cc504da30fd273e12f28bc0cf573ff37f829f89","1a4f15385f40d8ae503a29c4d70c5a908cf492d8","0ca2b92a4f992b35683c7fffcd49b4c883772a29","c81e776d24fa2dcb497db553fd9625aa644c009e","7a978f2902460e732c50c36a171deb11733df1fc","2451dc6bb08d2668f4a876ce94d0c15227ccab7a","0e7148699994155cf8afae0ed943812fbb4f4b7f","0c6c30e3052fcc01aa5ee38252d77f75322d7b3f","c5b3f0caeba42a532a48adc80e6932c35bb26ac4","093f488e41a142e981c395f69f4946ed2b1983a7","04ba23e362786deee7af52b1987d956bb764ca7e","14505c2bdd3822d7a62385121d28ba3eb36fea1d","636c6bee41498659f8b264479f5013f7c7bc207e","b04c9e851ae605592d693aa65f0d753b8af08feb","362d884ff43d8c7cd6bce184944cfc04cdd57c18","3e57c6706759e1821cde8fda933750e73aed6896","7f01ded4bc1d3e658e7969a4ba7d262a6f7d2ed9","fe93a312039f2f95cf54834a454013be22b597fe","0652168cd1dfe44892ef6c42004b5dec267ac254","109b416bdbf1739373638eb7e5b37f5d475fd40e","590bd345ef4b8f274af3363a52b7d8f518cdc08a"],"s2Url":"https://semanticscholar.org/paper/fdd4cf09259974aa26a40be24cfbda792cf438c3","s2PdfUrl":"","id":"fdd4cf09259974aa26a40be24cfbda792cf438c3","authors":[{"name":"Quan Chen","ids":["1708641"]},{"name":"Hailong Yang","ids":["1976501"]},{"name":"Minyi Guo","ids":["1697293"]},{"name":"Ram Srivatsa Kannan","ids":["39620203"]},{"name":"Jason Mars","ids":["3348715"]},{"name":"Lingjia Tang","ids":["2235128"]}],"journalName":"","paperAbstract":"Guaranteeing Quality-of-Service (QoS) of latency-sensitive applications while improving server utilization through application co-location is important yet challenging in modern datacenters. The key challenge is that when applications are co-located on a server, performance interference due to resource contention can be detrimental to the application QoS. Although prior work has proposed techniques to identify \"safe\" co-locations where application QoS is satisfied by predicting the performance interference on multicores, no such prediction technique on accelerators such as GPUs.\n In this work, we present Prophet, an approach to precisely predict the performance degradation of latency-sensitive applications on accelerators due to application co-location. We analyzed the performance interference on accelerators through a real system investigation and found that unlike on multicores where the key contentious resources are shared caches and main memory bandwidth, the key contentious resources on accelerators are instead processing elements, accelerator memory bandwidth and PCIe bandwidth. Based on this observation, we designed interference models that enable the precise prediction for processing element, accelerator memory bandwidth and PCIe bandwidth contention on real hardware. By using a novel technique to forecast solo-run execution traces of the co-located applications using interference models, Prophet can accurately predict the performance degradation of latency-sensitive applications on non-preemptive accelerators. Using Prophet, we can identify \"safe\" co-locations on accelerators to improve utilization without violating the QoS target. Our evaluation shows that Prophet can predict the performance degradation with an average prediction error 5.47% on real systems. Meanwhile, based on the prediction, Prophet achieves accelerator utilization improvements of 49.9% on average while maintaining the QoS target of latency-sensitive applications.","inCitations":["ec7cd4b8be631f2000cf4a4bb059186b6fff85c6"],"pdfUrls":["http://doi.acm.org/10.1145/3037697.3037700"],"title":"Prophet: Precise QoS Prediction on Non-Preemptive Accelerators to Improve Utilization in Warehouse-Scale Computers","doi":"10.1145/3037697.3037700","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3037697.3037700","venue":"ASPLOS"},
{"entities":["Benchmark (computing)"],"journalVolume":"","journalPages":"199-216","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/9475bb3acf8483cac4c2f928c94d014d3d0167d2","s2PdfUrl":"","id":"9475bb3acf8483cac4c2f928c94d014d3d0167d2","authors":[{"name":"Peter Steinbach","ids":["38797515"]},{"name":"Matthias Werner","ids":["33656588"]}],"journalName":"","paperAbstract":"","inCitations":["8691c7ec9b9a22b0aba686f0bf8d04df9707cd6b"],"pdfUrls":["http://arxiv.org/abs/1702.00629","https://doi.org/10.1007/978-3-319-58667-0_11"],"title":"gearshifft - The FFT Benchmark Suite for Heterogeneous Platforms","doi":"10.1007/978-3-319-58667-0_11","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-58667-0_11","venue":"ISC"},
{"entities":["ARM architecture","Architecture as Topic","Central processing unit","Congenital contractural arachnodactyly","FBN2 wt Allele","Interdependence","Multithreading (computer architecture)","Predictive modelling","Scheduling (computing)","Thread (computing)","voltage"],"journalVolume":"","journalPages":"1-8","pmid":"","year":2017,"outCitations":["91b1c1107fa62f319137184232493e625570fa87","cbaa525322aa172c94b78a8c8affcd38c6cbfbdf","1bed9dbc346fcc7c39ac42c8a3be089a76f4d11a","352a8957005dc5519b15ed1870751ec494d66395","5ce74f1e96630ce71c23e065e987529033912263","c7ae87b4e5952560362e24274a3e9f4e78a666f6","30455ed559efdac68f2675e278548d27453b8c85","c762fe9d42cc53e7f5e62ec94e34bc1164739c84","4aeb08b5f9b03cab4cf6b2ac1dc9dda9a236ab52","14a2a931ad8f2b6baaa9797b0e9bf74e7d0426be","167c651a235cf567ee8ca19b8d0e4d2f19e01b42","e23298e18aa92ac43fa941d0f5eacb339905b685","03d6143cffcc8cf96abf78d23e74cb1083f54d1b","07ccd8f48c5067fff6f50e6654ff410195ff0a91","1491e934ee736e8219c2922ab1629322dac753a0","1fcec27437d40285684aad5c68d2db076b27a195","71aa0f7b09d9c5890f73ecb60d1b59c0694de808","7ce25a0852e2345be1a1bd02b8eb4cefb9d47073","17dea513763c57dcd0e62085045fb5be6770c600","27c66ba59c76e737f863ba05b7099ad5788af836","109df0e8e5969ddf01e073143e83599228a1163f"],"s2Url":"https://semanticscholar.org/paper/a826646a8e4e8a746111d3a6915c8f0fcfcc3a00","s2PdfUrl":"","id":"a826646a8e4e8a746111d3a6915c8f0fcfcc3a00","authors":[{"name":"Hossein Sayadi","ids":["34223410"]},{"name":"Houman Homayoun","ids":["1747542"]}],"journalName":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)","paperAbstract":"Composite Cores Architecture (CCA), a class of dynamic heterogeneous architectures, enables the system to construct the right core at run-time for each application by composing cores together to build larger core or decomposing a large core into multiple smaller cores. While this architecture provides more flexibility for the running application to find the best run-time settings to maximize energy-efficiency, due to interdependence of various tuning parameters such as the type of the core, run-time voltage and frequency and the number of threads, it makes it more challenging for scheduling. Past research mainly addressed the scheduling problem in composite cores architecture by looking at one or two of these tuning parameters. However, as we will show in this paper, it is important to concurrently optimize and fine-tune these parameters to harness the power of heterogeneity in this emerging class of architecture. In addition, most previous work on CCA mainly studied traditional single threaded CPU applications. In this work, we investigate the scheduling challenges for multithreaded applications in CCA. First, through methodical investigation of power and performance results, we characterize various multithreaded applications on a CCA which can be composed into few big or many little cores and demonstrate how the interplay among various application, system, and architecture level parameters affect the performance and energy-efficiency. Furthermore, based on characterization results, a highly accurate regression-based model for energy-efficiency prediction is developed to guide the scheduling decision. Using the predictive model, we developed a scheduling scheme for effective mapping of multithreaded applications onto CCA. The results show that the proposed scheduling scheme on average achieves close to 94% efficiency as compared to the Oracle scheduling.","inCitations":["11ca91ee2c9974fbc8577207893381a46d79fd3d"],"pdfUrls":["https://doi.org/10.1109/IGCC.2017.8323570","http://ece.gmu.edu/~hhomayou/files/IGSC17-Hossein.pdf"],"title":"Scheduling multithreaded applications onto heterogeneous composite cores architecture","doi":"10.1109/IGCC.2017.8323570","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IGCC.2017.8323570","venue":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)"},
{"entities":["Atomicity (database systems)","Byte","Byte addressing","Critical path method","Data structure","In-place algorithm","Non-volatile memory","Persistent data structure","Throughput"],"journalVolume":"","journalPages":"499-512","pmid":"","year":2017,"outCitations":["24724ad8962a9e04eb496fddaefe9708f6960601","4228d3fee9d28b3b3a7dc8e9585d02652109029f","87eb6044798792bb4fffd2dcb477bc8ad0982268","544c1ddf24b90c3dfba7b1934049911b869c99b4","05a1357946de5eca42a477b7b268db4944219a2e","a43f2375fc8ac9fadbab91d5c10e61ef88a0525d","0204f40221260d00c5ee63646560a40dcd7d97d1","01e9ddf1062f9a7d7847bb9bcd2371ce6e0d3e29","205cf007cf77bbf81e55b74635017087585f7b7c","d04957ae69caf43707b13fa833e50119724688f1","5a49c1c694028fd6ca7acc6af601c0f54efa0700","157352f39ed5ba9a571dd4c27b48786ac8be90cf","243c522b56809292f1f50117a9915053d32bf4fb","793f5e737284925a176f8ec82b3bb0d2178bb330","478e885ab5fe8324a3ed29dce2734684197d2c8c","2ef08ccb970632bb8ada93ea70078eac54ce92d3","0139dceb6cef21b234e454d53154f30391495862","76eea8436996c7e9c8f7ad3dac34a12865edab24","1594118f2696b573f08510cf837f3b37db87face","9aa0d7253574e50fe3a190ccd924433f048997dd","589fa768b4a51211d93250669391803869cb2941","6c079bc20b4dd76e25687f979fdabda227f5fa8c","75032b6df2f3988d2cb6988c73cbc01c7b9e80cb","10d8afea57c8f159c4eb2664a40c8fb859acefef","15c80ec5104e98d6f84b5ed348ba0276c0739862","7a9abc36f336750f4c0679f0b4ef87c9dc12133c","1220e4a011c46804d4369b5580dc7fb6e387af54","94783d113951822195d4ba44599a8fcbdef9d4bf","39e3d058a5987cb643e000bce555676d71be1c80","bf5497e15f22233cbc2a4d0c3cc2c36f26738701"],"s2Url":"https://semanticscholar.org/paper/83d89c2785cb82496a0259d9982dd69d286317de","s2PdfUrl":"","id":"83d89c2785cb82496a0259d9982dd69d286317de","authors":[{"name":"Amirsaman Memaripour","ids":["2138575"]},{"name":"Anirudh Badam","ids":["1783539"]},{"name":"Amar Phanishayee","ids":["3078275"]},{"name":"Yanqi Zhou","ids":["2389316"]},{"name":"Ramnatthan Alagappan","ids":["31817919"]},{"name":"Karin Strauss","ids":["1718508"]},{"name":"Steven Swanson","ids":["1760342"]}],"journalName":"","paperAbstract":"Data structures for non-volatile memories have to be designed such that they can be atomically modified using transactions. Existing atomicity methods require data to be copied in the critical path which significantly increases the latency of transactions. These overheads are further amplified for transactions on byte-addressable persistent memories where often the byte ranges modified for data structure updates are significantly smaller compared to the granularity at which data can be efficiently copied and logged. We propose Kamino-Tx that provides a new way to perform transactional updates on non-volatile byte-addressable memories (NVM) without requiring any copying of data in the critical path. Kamino-Tx maintains an additional copy of data off the critical path to achieve atomicity. But in doing so Kamino-Tx has to overcome two important challenges of safety and minimizing NVM storage overhead. We propose a more dynamic approach to maintaining the additional copy of data to reduce storage overheads. To further mitigate the storage overhead of using Kamino-Tx in a replicated setting, we develop Kamino-Tx-Chain, a variant of Chain Replication where replicas perform in-place updates and do not maintain data copies locally; replicas in Kamino-Tx-Chain leverage other replicas as copies to roll back or forward for atomicity. Our results show that using Kamino-Tx increases throughput by up to 9.5x for unreplicated systems and up to 2.2x for replicated settings.","inCitations":["cb2a018979184f87692d423322e367cc42a215d2","e3a66a2e79c2a5f7a52bf4e8089bf522fdc04abe","952267605cf8e7ace81576632ed3b9d70f6e3334","7206aead5a341f361e6571d607f3c032e65e2f7e","db57257e6b051e0f97d35209cc5aee0909cde1f1"],"pdfUrls":["http://doi.acm.org/10.1145/3064176.3064215","https://www.microsoft.com/en-us/research/wp-content/uploads/2017/01/paper-2.pdf","http://pages.cs.wisc.edu/~ra/kamino.pdf"],"title":"Atomic In-place Updates for Non-volatile Main Memories with Kamino-Tx","doi":"10.1145/3064176.3064215","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3064176.3064215","venue":"EuroSys"},
{"entities":["Database engine","High-level programming language","IBM Tivoli Storage Productivity Center","In-memory database","Online analytical processing","Online transaction processing","Replay attack"],"journalVolume":"","journalPages":"37-50","pmid":"","year":2017,"outCitations":["cd4b958bf9dda5f44fbb457f7bf0eca96d6563e7","3c6be4c9ea5c56d4ab97aabb4e7c9d5ced57bea8","2e50af2320dab632d8046b6d4c130ae6cce8903f","92e0243e1a73c77ef8b90292e3798f765b38f269","05eddbc2d37cf994fb7c6a4558e2679e5f40d23e","cf855ba4a09c2181d0166705717b5788454fcfa5","9748241beb02ef1e2d0e6dc877c04b354033a838","2610745375939fee88e556858344ab9344c47871","09ecdb904eb7ae8a12d0c6c04ae531617a30eafa","24c3330d34d640945e0eb99fe4a0b1c31695a8cb","00ac447d02035c26c7e2852c2457fe812e89038f","e9664a7b5b35be268180e45563cc5971df86404d","e75c5d1b7ecd71cd9f1fdc3d07f56290517ef1e5","13e6aa5f61267b2814fa9b32f47c17c0fcdef2d5","817da34922f767e11715f5aca7743e8d2388c68d","08150fd93c906fd8a882af537ea184d709e98264","97f18a7fd4a91a28c93545930a913e481425d57e","5046a718f92447642939f5c93414dc97225d726a","3542254ecc9f57d19f00e9fcc645b3d44469a6ba","145b46a0b1f8dc8f2182290655b9597fba087e78","14390fd81841cc4bb3d3764042481fc0a0e89e7b","463bec3d0298e96e3702e071e241e3898f76eff2","1ab74d44982409beeca21efb2dbcb97a5c7de4b2","41f8af6e2fafbf65f4f84534cb905c8824d7854d","8865ba2b6b169246ed0a1600bd7f9d447c4bd47f","ddf313f6fcc0520c716c54873164ded8e31703da","33ef71ebd67ed2dfffe14d73408173e6e8e94e5b","86daff3998005e12c963124e61f7c9cfd598a3cf","0997037e940df06ed7a6d19f7501579aab01e829","2525c025f11aec60cff428271ca851381b92008f","6033797f241a3687aab939db1d88b5184d32c0fb","2451dc6bb08d2668f4a876ce94d0c15227ccab7a","afda6470dd16dc0a865dbb6fc291e5806132379b","ef47742e72bd64fb1ae5359cd6d5dd6dfad34dc8","0eb1eba6a5bcf54391fcceecd431591d03a6df3a","12b71edea3a3cd18b507e4f0e20297d77f0f986f","9e5f18b528416025473bcab6082b51cf7ab60dcf","29f6129a8b8f80b547ed3394d2ada9ba10b95952","12c356a40e63af45aa6b0a63af38676a0dfe2b3e","afc4e448edba15519b5ea054d7b47af1a5aab93d","c8e6dd5bffa931f1252fd6a62dd267283cd85f69","35f751e46799e3a91425267819f40dce273abec1","b8d04f5a56f72aa39c1fd58db33c850c477862c5","13d350d63b88061db3b63355e90a05ef270972d6","45ac2218b74fd28ff170dc93cf4390649466c491","5c9d62f348c7ed09ee51e1d56643ced039ec1121","73f31354cc9058ddc2e47a1c585b753e1592c1bf","5ad1dd1aa78ba772c969aa01ee5e8ee0d255ce3d","1f4fac99af2d8a6d9471eb3cad7b5ae0365c0933","174148018456e391ee06adc21ea0535c825e8df3","0ad5ed5a0a7b9210993753d7594c7285d5e9b179","4f05a78c2e2abf932915c33c6a2bb9c726ce4ac2","028101c16b995cae0430fd52707cb91878a3b1d3","6479bc321dd7859eb6b6b8cca100bade86940526","06545f48a6b25a3cafd76e514b2310254972888b","412a9e54bbb31e12d008a9579994e009c5b40b46","8c6631f7a857e167406207c42ec47d7610a365b2"],"s2Url":"https://semanticscholar.org/paper/959a93bca92aafba2d1fc33fda530a50bf95fa69","s2PdfUrl":"","id":"959a93bca92aafba2d1fc33fda530a50bf95fa69","authors":[{"name":"Darko Makreshanski","ids":["1897378"]},{"name":"Jana Giceva","ids":["2811717"]},{"name":"Claude Barthels","ids":["3188030"]},{"name":"Gustavo Alonso","ids":["1687400"]}],"journalName":"","paperAbstract":"In this paper we present BatchDB, an in-memory database engine designed for hybrid OLTP and OLAP workloads. BatchDB achieves good performance, provides a high level of data freshness, and minimizes load interaction between the transactional and analytical engines, thus enabling real time analysis over fresh data under tight SLAs for both OLTP and OLAP workloads.\n BatchDB relies on primary-secondary replication with dedicated replicas, each optimized for a particular workload type (OLTP, OLAP), and a light-weight propagation of transactional updates. The evaluation shows that for standard TPC-C and TPC-H benchmarks, BatchDB can achieve competitive performance to specialized engines for the corresponding transactional and analytical workloads, while providing a level of performance isolation and predictable runtime for hybrid workload mixes (OLTP+OLAP) otherwise unmet by existing solutions.","inCitations":["5bd6f82d3d61270401d8284dc95437512e77d02f","264a5e7a5230b228b86f63a75546738a66454c56","077eb0de78522a25420fe0c0ab4e864a82ac7177"],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3035959"],"title":"BatchDB: Efficient Isolated Execution of Hybrid OLTP+OLAP Workloads for Interactive Applications","doi":"10.1145/3035918.3035959","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035959","venue":"SIGMOD Conference"},
{"entities":["Algorithm","Application checkpointing","Circuit restoration","Computer","Failure rate","Fault detection and isolation","Fault tolerance","Matrix multiplication","Mean time between failures","On the fly","Pin grid array","Process management (computing)","Scalability","Sparse matrix"],"journalVolume":"","journalPages":"580-587","pmid":"","year":2015,"outCitations":["11b48281fdb43813b723c62b6600bed8cbc446c7","01d62cd850496455ce1616500f491690effa5c98","3d3ae094f4122c30f03a29b1eca4b5a905f87bc7","0276799e326f5c2fe6d08a7c0c71f5dc638162e3","74ce9ab22a2b957de1e27fea1fd97ecc76ee1d77","8b320b841dbf925e37424ef74bb91367b0adf2a8","67ddcb550dd8fe57e4567bd7ca78f6e841f25c4c","001793649f6ba8e832376e57601378c33477cff1","15eae5a2a8b096635bfce2ebf332faa4ffb8081b","06d8aa948ed0ff654f772439c00711dfe7fa3d1a","96d860caedf7731e2f598a768e85d04e26753868","896f6698a74e656174045dc20840dd7e925f18bd","2f3548e58f063c71187eebf5ebd4109ededbe9b2"],"s2Url":"https://semanticscholar.org/paper/dec33589b23562b86e7a53ff7771e9160cacfe46","s2PdfUrl":"","id":"dec33589b23562b86e7a53ff7771e9160cacfe46","authors":[{"name":"Faisal Shahzad","ids":["2339709"]},{"name":"Moritz Kreutzer","ids":["2080743"]},{"name":"Thomas Zeiser","ids":["1932825"]},{"name":"Rui Machado","ids":["2045923"]},{"name":"Andreas Pieper","ids":["3029660"]},{"name":"Georg Hager","ids":["1694080"]},{"name":"Gerhard Wellein","ids":["1708441"]}],"journalName":"2015 IEEE International Conference on Cluster Computing","paperAbstract":"It is commonly agreed that highly parallel software on Exascale computers will suffer from many more runtime failures due to the decreasing trend in the mean time to failures (MTTF). Therefore, it is not surprising that a lot of research is going on in the area of fault tolerance and fault mitigation. Applications should survive a failure and/or be able to recover with minimal cost. MPI is not yet very mature in handling failures, the User-Level Failure Mitigation (ULFM) proposal being currently the most promising approach is still in its prototype phase. In our work we use GASPI, which is a relatively new communication library based on the PGAS model. It provides the missing features to allow the design of fault-tolerant applications. Instead of introducing algorithm-based fault tolerance in its true sense, we demonstrate how we can build on (existing) clever checkpointing and extend applications to allow integrate a low cost fault detection mechanism and, if necessary, recover the application on the fly. The aspects of process management, the restoration of groups and the recovery mechanism is presented in detail. We use a sparse matrix vector multiplication based application to perform the analysis of the overhead introduced by such modifications. Our fault detection mechanism causes no overhead in failure-free cases, whereas in case of failure(s), the failure detection and recovery cost is of reasonably acceptable order and shows good scalability.","inCitations":["117c30b9849d24afdaf99e3c3baf2397ad7332ce","294a4f149220ec1b1d7211ec5f7752a36f33e68c"],"pdfUrls":["http://arxiv.org/abs/1505.04628","http://doi.ieeecomputersociety.org/10.1109/CLUSTER.2015.106","http://arxiv.org/pdf/1505.04628v1.pdf","https://arxiv.org/pdf/1505.04628v1.pdf","http://arxiv.org/pdf/1505.04628.pdf"],"title":"Building a Fault Tolerant Application Using the GASPI Communication Layer","doi":"10.1109/CLUSTER.2015.106","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLUSTER.2015.106","venue":"2015 IEEE International Conference on Cluster Computing"},
{"entities":["Computation","Iteration","Locality of reference","Parallel computing","Tiling window manager"],"journalVolume":"","journalPages":"49:1-49:13","pmid":"","year":2017,"outCitations":["0e12eb94aab5d64d08baacf0df36a4b7ed054c46","318def48f4414636555d44f52da8c0bab16a46bc","53aa3fe2ea1237a7f5f305ed1c2d6f5a1915bda4","6963b27339daff5ac27ed5552aac5a5df19b9764","1c067c63ae74483b7f7aa8af395c8bd6111e6366","fe7bd2137955540edc81e84c5051ae32daf1703d","004eda59c0ffceb2417bee87c95539eae4bdf0cd","847a43d0d0748478efc233b16a8c17ef600cd3a7","f8afcda83fc23a7f75a1b0269fb458ee0182b621","f0f4757aa2f923a349e8357e73850a78e9b80fee","524da50949c3954ca9353da49256d2414e35ce20","06b25d569ee60fc4f973a468b091e1b0c0dc8cde","363859c57d086301b2ea8385e4adf9cfbeb1ea50","f4dff66ba8f2338d118f379f2eff1410feb57ce6","6e2c8ec9ff4e3761e18cbc252acc8a95a137215b","23a5e9c8feb5b28d063d719880faaa56fb32b923","09b1520aea25ff0b5852d8a777e48eacf5300fac","4c233ebba1bfa87248d1f4f9d4d010c880f1d5b6","67064341d0d6b12f3cacbb664d50d6f01abe17d7","17056314e26434c4e71cf8f30da8926bb858651f","def34f422d6930bd23d5c58de78be98804e44e97","2900ebddc2dfb1e4bb7d7eac7384d7f4512b2b9a","b8e7a9c68d568e62c9ca99375949747b0271ea3c","a21f19614db362d7c462541022dd2b590742f9d2","78ee4f6b1eb5405d81cfb45e777c9f909f34008b","618fa1c14e3c6008eb047002311d21cae412eebc","2be29021bc9b0fc40f5bfd0ee32fb22861c8f74b","5b3a623a001d77839964f41a2c20000d2699ba5f","1d271d3c0f845ebfc54c5046a3f1b54647e8443e","f30a6f55e4dca3d749de0d02a67aae5a646d1a33","768141fc4da96c71e04103c6ccdd52169724ecbd","782d8591afd432a9b2bfe21553a4158a39cb9d1f","57f635f67fa7a1f742bb1c1f1da3e400c954440f","337a000aa5891901ee45d19c346c903521eaba0a","8dc2184214ee39b31e2c0d623842b66c0141984b","0ebb8ef3ef660ea8484202e74e2e3df7b3c59cc6","0eb81ce51dcaafe69c3d2d533d1c0cf20ac59d6d","1bec73cbc0ffb8eb32d6da63895f5319b7409386","e183b8626cc7ce149237c28821a517a0a31cd241","019ebe0205a759f8dab80b617f9f8ccd179c5c62","1deeb53a514d9a54ad690626c5199bb0d117f9a2","5c1697ae6a204c1660885107c7513ffe976b62cd","1426b32f40126a0a906121984918ff5fbcb0b4b3","c688010fdf80996d6f838d908d117f1c7eed8542","1614eee9fa973d2b9554f37e9ead09ff6dc7542c","13d3eb5213678ffbbb4773e57754ad94c4ee61b2","cd8460b716ded1bf937bb78cb29befdfad64faa5","7c2beb7b8770b40caf55dc10437023e60a8fed35","2f7fa291bdc6a2f8c7994cf1896868f057a6b0ca","8d2fb424ccd5ae011dd444ac4fa8282bad9e76ab","101b0f26c6720eb64f82334a7a958ebcc4257424","dae60807ef1e6fd61a2362c8187b733b08121e1e","a695fdd90865835234ac5e062c1d1a6ae1f34632","a26ea27bd62a9257eab5b7448642e971ddc8b1a3","3087eeb39c88b1fc9bdc72812930451fc98cedec","ae14fad252dfe0328caf7084c4ac2abf33eddee1","518cd72a5f12f050492b246ad300a46de7604af2","3c31999730ef19007df71909f1ae5223825e0ec9","19e6866714631cf6104d2ba6e72ff8e7a074df51","4ac67eae41d99eb06c234f2f4997d8a8fb8650b0","1322fd55045d22849bbc879193af44791e28e510","998e6eb3d90327c38fdc7f680c75137e4976c679"],"s2Url":"https://semanticscholar.org/paper/3b5e08fa4554a27220b5abd41ca9ddf891960b12","s2PdfUrl":"","id":"3b5e08fa4554a27220b5abd41ca9ddf891960b12","authors":[{"name":"Liang Yuan","ids":["32967785"]},{"name":"Yunquan Zhang","ids":["2646526"]},{"name":"Peng Guo","ids":["3836055"]},{"name":"Shan Huang","ids":["1743257"]}],"journalName":"","paperAbstract":"Stencil computations represent a very common class of nested loops in scientific and engineering applications. The exhaustively studied tiling is one of the most powerful transformation techniques to explore the data locality and parallelism. Unlike previous work, which mostly blocks the iteration space of a stencil directly, this paper proposes a novel two-level tessellation scheme. A set of blocks are designed to tessellate the spatial space in various ways. The blocks can be processed in parallel without redundant computation. This corresponds to extending them along the time dimension and can form a tessellation of the iteration space. Experimental results show that our code performs up to 12% better than the existing highly concurrent schemes for the 3d27p stencil.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3126908.3126920"],"title":"Tessellating stencils","doi":"10.1145/3126908.3126920","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126920","venue":"SC"},
{"entities":["Asynchronous circuit","Causality"],"journalVolume":"","journalPages":"241-250","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/861f27c06ecfb7c97fbf52930768e90727801f8e","s2PdfUrl":"http://pdfs.semanticscholar.org/861f/27c06ecfb7c97fbf52930768e90727801f8e.pdf","id":"861f27c06ecfb7c97fbf52930768e90727801f8e","authors":[{"name":"Asa Dan","ids":["12343940"]},{"name":"Rajit Manohar","ids":["1808537"]},{"name":"Yoram Moses","ids":["1688502"]}],"journalName":"","paperAbstract":"Even in the absence of clocks, time bounds on the duration of actions enable the use of time for<lb>distributed coordination. This paper initiates an investigation of coordination in such a setting. A new<lb>communication structure called a zigzag pattern is introduced, and shown to guarantee bounds on the<lb>relative timing of events in this clockless model. Indeed, zigzag patterns are shown to be necessary and<lb>sufficient for establishing that events occur in a manner that satisfies prescribed bounds. We capture<lb>when a process can know that an appropriate zigzag pattern exists, and use this to provide necessary and<lb>sufficient conditions for timed coordination of events using a full-information protocol in the clockless<lb>model.","inCitations":[],"pdfUrls":["http://arxiv.org/abs/1705.08627","http://doi.acm.org/10.1145/3087801.3087839","https://arxiv.org/pdf/1705.08627v1.pdf"],"title":"On Using Time Without Clocks via Zigzag Causality","doi":"10.1145/3087801.3087839","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087839","venue":"PODC"},
{"entities":["Algorithm","Baseline (configuration management)","Instagram","Simulation","Social network","Unsupervised learning"],"journalVolume":"","journalPages":"1-10","pmid":"","year":2017,"outCitations":["755b5fe168b1f3ed51c01841d1542a980461856c","37c90fcd3016171e9f3ac86f7f88b390fe86ee99","2c737653408c606062355b71f63919004a975ef6","49b2a1b9606c0ccb95a36895760fc91b8b830266","4f5ee452c65a273251a1641ab37ac5e69e0dc28b","5481d3c7105a8cd42e3400286d3bc964ba89ae5b","02df9340e08e1e5085f1257bb6ddda4cd225e1d3","84bffe8afd1c16ec2dc8eab3a6b9203f2473d6bc","04dfa9aab950d7708c396723151fb3838b8188f5","146b157524728525a868af9038f8461bce23f30f","823262c42414bfaba9a0cea736e1c77c7cea7837","6ba401b333ed4ed97c78863929533acdecd1133c","357e59e9d782b0d9db8889285535a522e2ec097d","01ff2b834772dfc2b8b7ba00620b65abb9444a75","5397d68972cb8b5bfe775bc25af922f31843d50e","9977958fabf2c3ee73bba92aa416616b35e553aa","531fb16eb14329b5e5df9c8270c713fdf8aa8631","007e5d3db415ac833141b5c01b18c9bc9339c52c","70e0660ff33b75b751f8635bb39f5b3299335fb7","7b56c1cf3623b086909e126ae653b4a8f7ebbd11"],"s2Url":"https://semanticscholar.org/paper/cbb3f31671c201a9e8f3c09c30ee8d1ee2e641af","s2PdfUrl":"","id":"cbb3f31671c201a9e8f3c09c30ee8d1ee2e641af","authors":[{"name":"Prasanna Giridhar","ids":["2852809"]},{"name":"Shiguang Wang","ids":["2019481"]},{"name":"Tarek F. Abdelzaher","ids":["1730531"]},{"name":"Md. Tanvir Al Amin","ids":["17050197"]},{"name":"Lance M. Kaplan","ids":["1795727"]}],"journalName":"2017 IEEE International Conference on Autonomic Computing (ICAC)","paperAbstract":"This paper describes the implementation of a service to identify and geo-locate real world events that may be present as social activity signals in two different social networks. Specifically, we focus on content shared by users on Twitter and Instagram in order to design a system capable of fusing data across multiple networks. Past work has demonstrated that it is indeed possible to detect physical events using various social network platforms. However, many of these signals need corroboration in order to handle events that lack proper support within a single network. We leverage this insight to design an unsupervised approach that can correlate event signals across multiple social networks. Our algorithm can detect events and identify the location of the event occurrence. We evaluate our algorithm using both simulations and real world datasets collected using Twitter and Instagram. The results indicate that our algorithm significantly improves false positive elimination and attains high precision compared to baseline methods on real world datasets.","inCitations":["fdb14e9482d70b1b56cf9277b3b445fcc08ee079","2c2e033feb4294151d91911288197b474a2812f0","5c8262bc29ca227a34ca345c4060a3f3cbfa874a","ddc334306f269968451ca720b3d804e9b0911765"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICAC.2017.46"],"title":"Social Fusion: Integrating Twitter and Instagram for Event Monitoring","doi":"10.1109/ICAC.2017.46","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICAC.2017.46","venue":"2017 IEEE International Conference on Autonomic Computing (ICAC)"},
{"entities":["Bridging (networking)","Experience","Fail-stop","Failure mode and effects analysis","Failure rate"],"journalVolume":"","journalPages":"150-155","pmid":"","year":2017,"outCitations":["1521e801e8e08ecec3b0baabb07f9a6ce0a67a85","0fb26af56f32a4c083e7b5354309d0e6b3c03ec6","0174dc1f1e606b937a0c73cc12ee4c3ff3797415","663e064469ad91e6bda345d216504b4c868f537b","76eea8436996c7e9c8f7ad3dac34a12865edab24","1d204d774c134dd7df97a6a83e12387efd0c7a01","086820e40dc8046c30a8751394df167bec047fe1","260368e4b7ddef442bb5c197078e200b3c0ab7b1","20f5f8733134d87041b95b742d613051a1fb3fdb","00f7b192212078fc8afcbe504cc8caf57d8f73b5","070cdebc40691ef8cc3fd88a95be34bf088a123d","3b9725ad0e3a078e9add5a37ea1ac323f7322d75","0f6a32792d0882db35fe9391445d4322232b619e","11b8ef5da9c8df214859bb41b60001a0abd2b5b2","11a4744f7f0883c4232a9f5aaca8b9d29bfaa762","1f8699f5d99a0fa362bbc9e5071ac3cbbaf8e4da","65da29a03c8905cbc0614612d1632864336c4786","058f6752d85a517aae298586fdf117acdd7560ea","4f246dd7f2ba3764245d8a16c3048adf0cc68b1d"],"s2Url":"https://semanticscholar.org/paper/50dc3bb8c5b8f7bed0c6d6231e042f56ad6af1d4","s2PdfUrl":"","id":"50dc3bb8c5b8f7bed0c6d6231e042f56ad6af1d4","authors":[{"name":"Peng Huang","ids":["1700573"]},{"name":"Chuanxiong Guo","ids":["39152478"]},{"name":"Lidong Zhou","ids":["2902416"]},{"name":"Jacob R. Lorch","ids":["1855395"]},{"name":"Yingnong Dang","ids":["34402895"]},{"name":"Murali Chintalapati","ids":["22795910"]},{"name":"Randolph Yao","ids":["22736499"]}],"journalName":"","paperAbstract":"Cloud scale provides the vast resources necessary to replace failed components, but this is useful only if those failures can be detected. For this reason, the major availability breakdowns and performance anomalies we see in cloud environments tend to be caused by subtle underlying faults, i.e., gray failure rather than fail-stop failure. In this paper, we discuss our experiences with gray failure in production cloud-scale systems to show its broad scope and consequences. We also argue that a key feature of gray failure is differential observability: that the system's failure detectors may not notice problems even when applications are afflicted by them. This realization leads us to believe that, to best deal with them, we should focus on bridging the gap between different components' perceptions of what constitutes failure.","inCitations":["d0f86618b53c723ecd5e814457050eaa57a5bd8b","d33b1d2e38b47a75d11deab953508a9d00a6854e","347e1352fb903b40dce606a1e581e9d601bc289c","5ae5348b9558729b98a70a7abed4145adeb45bbe","221ceab1a74c8a9fa4e36a1bec2754e745e36a63","f607dfa120b68bb9293a9b08125e1d2229e00332"],"pdfUrls":["http://ryanphuang.com/paper/grayfailure-hotos17.pdf","http://ryanphuang.com/talk/hotos17_talk.pdf","https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/paper-1.pdf","http://doi.acm.org/10.1145/3102980.3103005"],"title":"Gray Failure: The Achilles' Heel of Cloud-Scale Systems","doi":"10.1145/3102980.3103005","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3102980.3103005","venue":"HotOS"},
{"entities":["Data center","Ethernet hub","Experiment","Network congestion","Server (computing)","Simulation","Swarm","Swarm intelligence","Throughput"],"journalVolume":"","journalPages":"217-226","pmid":"","year":2017,"outCitations":["0c83169bf4ebb29979bfe47708cb6b79b6e28755","b23a55fd057103ba299a97dbdc210ef8ffa8f923","39300a6bb64f813bd233343b840cb169d8d0527f","1eddf92320697dbaae59cb84fafd5af73e0fc865","5f3f9223c5c9f896be099bc177929febad508407","83a1a478c68e21ee83dd0225091bf9d3444a8120","206b20f225fc655dfac733b6f0bd8077ed86215e","a990a973f578db34a604beb494b05e650a270a85","6de80f14aa1aa717e3eafd73c269c50b2a7de390","335d859423b6d2ba7d2283f30a14619687a20391","43bcabcec7c2595c620cd6fd4c96f517ede80d4e","ff636e89ac4a2452216ca85f8820d0a834821454","1dbbfd2fdf7121f6ffd85841031d28283c5231d7","7b5d40c43239945c5488c7e2b38a6aa82e46d053","9678cf3b6a338581a01e0e92e0d9ec61dd0bc681","d40c1e04c0f4a731da009a0ce22fbc23db497389","138856ad6b8b4cca92965aacb20961aaa4e34a92","1376bd56c64639af4645625fd9755c83b2bf7cda","327a02b19a60319cc35be860ad0259a5c1aef920","663e064469ad91e6bda345d216504b4c868f537b","340ed44fd4efcc2cd193bbce716ffa37df07ac3c","2fca78e74863daa9ea77e065a263b1aece8797cd","6560af8ca02fd6187bddb9dadd38ae863993a1c2","aaf52a116479a0d4c8e9ab612fe9c4ff5516f3be","0f6f717d198ab1b99a63814facaf2fceace6b0fe","3bf64462fc3558ab7e9329d084a1af4cf0c87ebf","783f81c4988147c94b85427ba7e9e372a23bf777","2031a6decaf94ce41ac09fc355022429eeeb0e49","5594c2ddde27f4262a53668ca9b09ad7a9453102","9ee6209432316baf6776838917e06bca4d874747","28f13ebe8e17fdb4c2500c515759a3ee0c2783ce","72f0a90d8e22da6106c0925ad6e62d4d6242ea55","9c196f82ed47a605b849083d089d7606691c6cba","30ce9b53eaa730b4161226c2c8eaf95adb46add7"],"s2Url":"https://semanticscholar.org/paper/c3741b06bfbca83978507febea3d87b49bbb25a4","s2PdfUrl":"","id":"c3741b06bfbca83978507febea3d87b49bbb25a4","authors":[{"name":"Haoyu Wang","ids":["34269118"]},{"name":"Haiying Shen","ids":["37217705"]},{"name":"Guoxin Liu","ids":["2656336"]}],"journalName":"","paperAbstract":"In Web applications served by datacenter nowadays, the incast congestion at the front-end server seriously degrades the data request latency performance due to the vast data transmissions from a large number data servers for a data request in a short time. Previous incast congestion control methods usually consider the direct data transmissions from data servers to the front-end server, which makes it difficult to control the sending speed or adjust workloads due to the transient transmission of only a few data objects from each data server. In this paper, we propose a Swarm-based Incast Congestion Control (<i>SICC</i>) system. <i>SICC</i> forms all target data servers of one request in the same rack into a swarm. In each swarm, a data server (called hub) is selected to forward all data objects to the front-end server, so that the number of data servers concurrently connected to the front-end server is reduced, which avoids the incast congestion. Also, the continuous data transmission from hubs to the front-end server facilitates the development of other strategies to further control the incast congestion. To fully utilize the bandwidth, <i>SICC</i> uses a two-level data transmission speed control method to adjust the data transmission speeds of hubs. A query redirection method further reduces the request latency by balancing the transmission remaining times between hubs. Our experiments in simulation and on a real cluster demonstrate that <i>SICC</i> outperforms other incast control methods in improving throughput and reducing the data request latency.","inCitations":["20b8bc79e08aa2f066c2568bf5c93600270968a1"],"pdfUrls":["http://doi.acm.org/10.1145/3087556.3087559"],"title":"Swarm-based Incast Congestion Control in Datacenters Serving Web Applications","doi":"10.1145/3087556.3087559","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087556.3087559","venue":"SPAA"},
{"entities":["Algorithm","Amiga Reflections","Clock rate","Computer graphics","Control flow","Display resolution","Graphics processing unit","Path tracing","Rendering (computer graphics)","SIMD","Single instruction, multiple threads","Visual effects","Z-buffering"],"journalVolume":"","journalPages":"560-573","pmid":"","year":2017,"outCitations":["4308295a2eaef30be423520918ad224dc2f3ffe2","26ef909381d93060f626231fe7560a5636a947cd","0f48fd50a9f0cb30d1f0495010a45a0e732e8a12","90cf1ea079253c4451d4c74a37f0575e8501cdf4","bb0dc7f89a8e64aa537e2e2d26e8c44e30bead86","14d98ecba21e404f80daf024a03effe259cf9b88","08d041581636f8eee888091b5539696d729f2bff","31b6005f360f989a68398a7b6bc5cd1f6c692fcc","13a1b9ce5946ba75af176f8bede4d68fd72b6c7e","6f61bb35530ac58d8d5f5f5598b09cccba013558","8bd6f67ef03b3c138c52f3e9b1716aebe937d244","05177b6ee393267db5332729d7f97ddd090e9c35","28cc7453c5f3f9ecb9415e631b0829ec9af8a4c3","4e93fc3a397144055d707e87c1c82289d1ef77f3","1d0e6ae33237650f71583c2a5e2cc27c6523fb22","3ad6c5012cba78f29cb8d0ed556c32b93966076e","9a334c377686d8abe7711abcef58775ee02c0487","0c75806bfe62a119e1aa580327c2f8db01b898aa","9993c073c3ab75ef893d009e3109d23727d4c1ae","2e33c9a0e0ba542693610f36cabee4d8291f8e09","2d6f002477015469075954c6748a1a85af352c94","6318714027d58d7b402314c3c42b466d1307c33e","6c4e1d757e6bb655950dab25894ecf5e25239b85","1b50cd4fb7c894a818dc87952ce5fc04d273d939","6f23e1be35046b8202d356043c49304c0974396d","512a1ebdcaca56f3ea0c21aa2abe9a5ab7dace06","1c05733fa16907f235e6400625c2ae88f1942b42","09ba565ec5dd3816968edaaee8351cf653e26d81","7e816b82fb92df08d7bc0d9805f8988754e0d8c1","5fe56eabf8e341a71b87498daccee5039fbdee97","6f4717d1078a961504e957204db5a9730cc405b4","0d8570b96e947ff532c5db0587d22a63526beef2"],"s2Url":"https://semanticscholar.org/paper/6a7ab215f023bcad781b0d7098f54d22e5ee89a1","s2PdfUrl":"","id":"6a7ab215f023bcad781b0d7098f54d22e5ee89a1","authors":[{"name":"Ya-Shuai Lü","ids":["2889938"]},{"name":"Libo Huang","ids":["35103628"]},{"name":"Li Shen","ids":["40391089"]},{"name":"Zhiying Wang","ids":["1690770"]}],"journalName":"","paperAbstract":"Computer graphics is generally divided into two branches: real-time rendering and physically-based rendering. Conventional graphics processing units (GPUs) were designed to accelerate the former which is based on the standard Z-buffer algorithm. However, many applications in entertainment, science, and industry require high quality visual effects such as soft-shadows, reflections, and diffuse lighting interactions which are difficult to achieve with the Z-buffer algorithm, but are straightforward to implement using physically-based rendering methods. Physically-based rendering can already be implemented on present programmable GPUs. However, for physically-based rendering on GPUs, a large portion of the processing power is wasted due to low utilization of SIMD units. This is because the core algorithm of physically-based rendering, <i>ray tracing</i>, suffers from Single Instruction, Multiple Thread (SIMT) control flow divergences. In this paper, we propose the Dynamic Ray Shuffling (DRS) architecture for GPUs to address this problem. Our key insight is that the primary control flow divergences are caused by inconsistent ray traversal states of a warp, and can be eliminated by dynamically shuffling rays. Experimental results show that, for an estimated 0.11% area cost, DRS significantly improves the SIMD efficiency for the tested benchmarks from 41.06% to 81.04% on average. With this, the performance of a physically-based rendering method such as path tracing can be improved by 1.67X--1.92X, and 1.79X on average.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3123939.3124532"],"title":"Unleashing the power of GPU for physically-based rendering via dynamic ray shuffling","doi":"10.1145/3123939.3124532","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3123939.3124532","venue":"MICRO"},
{"entities":["Computation","Computational science","End-to-end principle","Hidden Markov model","Markov model","Simulation","Spatial variability","Supercomputer","Three-state logic","Titan","Titan (supercomputer)"],"journalVolume":"","journalPages":"1-9","pmid":"","year":2017,"outCitations":["2d1118f2c18e7629f29c8143c3f639649c59907b","85ba17686a149618fc971c6d60007bbfaf376461","865e20c6f2a2b09c21a73792c746270acbb64f46","8d594caed78dd607fe4ae8979cb73ee395d173c6","0a564c5117375287c60d3a27a96003f30396f62f","18b3af592d37fab4f48633a599a2ee9ce78c8ee9","9edab79d681bae0071aa784328b0ce134d909c10","3475f3916ef2a424c0945e329fae80d38e05c0a4","3c03e217aeaf6734b5471d5f8930436e009d60af","691d9c3f621c1d29c2b0b32fbd66cf9ecfae0d63","20cc5fdba0915a3958c31d7b18763e82a5418856","6a4105c2e444bf4a164c498126bc35f45e497286","309ea2926d0e87919b928635685e0828a7425e9e","1afc2cc0b9ac3140693302704ee44ce1054b6325","02e56828951df7fbc42853071af175aad103517d","f8acd93963ed622f4c8adb005daa097ac56de9f5","f28b85c02fac0e442a1bb3f53357a873a7866a6b","d004de96c6c1712e77a802534c339628e626945d","885f7657cd858f3c48707946083f2a9aa7ee7aee","9a4fa742850b7874b1ee7ab944bf92c0a29a1cbc","bc7181d1c6bbd503c4561931b7bda074a1184393","b2d80dde51c121c996ad7fbe2de7a7bce87dec54","5121837e40f54742fbd26503c7ca76e68ced467a","4be2b9ac4bf468bb1f0bd62ac170806fef3e93bf","1352ac51d6ab2fc36905413fb34b45df5c95b8e7"],"s2Url":"https://semanticscholar.org/paper/b7bb44560f9328ff01347221528c3633b3ec2373","s2PdfUrl":"","id":"b7bb44560f9328ff01347221528c3633b3ec2373","authors":[{"name":"Lipeng Wan","ids":["39341300"]},{"name":"Matthew Wolf","ids":["4003076"]},{"name":"Feiyi Wang","ids":["1706743"]},{"name":"Jong Youl Choi","ids":["32485139"]},{"name":"George Ostrouchov","ids":["1781276"]},{"name":"Scott Klasky","ids":["1736095"]}],"journalName":"2017 IEEE 19th International Conference on High Performance Computing and Communications; IEEE 15th International Conference on Smart City; IEEE 3rd International Conference on Data Science and Systems (HPCC/SmartCity/DSS)","paperAbstract":"With the increase of scale and complexity seen in a variety of leadership-class scientific computation and simulation applications, it has become more important to understand their I/O performance characteristics. The user-observed performance is a combination of properties of how the application is using the HPC facility, as well as how others' use of the facility causes variability in the static machine capabilities. Our work leverages statistical analysis of I/O performance data gathered with fine time resolution over a full week from Titan supercomputer. Based on observed properties of the distribution of I/O latencies, we build a three-state hidden Markov model (HMM) to characterize the end-to-end I/O performance on Titan. We parameterize our model using part of the field-gathered I/O performance data and validate it against the rest. The validation results demonstrate that our model can capture the dynamics of end-to-end I/O performance on Titan accurately.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/HPCC-SmartCity-DSS.2017.1"],"title":"Analysis and Modeling of the End-to-End I/O Performance on OLCF's Titan Supercomputer","doi":"10.1109/HPCC-SmartCity-DSS.2017.1","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCC-SmartCity-DSS.2017.1","venue":"2017 IEEE 19th International Conference on High Performance Computing and Communications; IEEE 15th International Conference on Smart City; IEEE 3rd International Conference on Data Science and Systems (HPCC/SmartCity/DSS)"},
{"entities":["Document","Game theory","Hoc (programming language)","Information retrieval","Minimax","Ranking (information retrieval)","Regret (decision theory)","Relevance","World Wide Web"],"journalVolume":"","journalPages":"465-474","pmid":"","year":2017,"outCitations":["2837e92e73390b9602d42e2848b6cf1f58c5833c","11c08f3e0b56dab55b5031257e4727504bf688e3","3ab8a8f9474e20ccac522a6da7b4edb451f12f29","ca073f144a077e411e2dad36c72f68ef8f2a03d5","38612e346fdf3158c32c16058f7e8820a8f0325e","da87cc3aff92351b057ef26c79853feb9754ffe9","1f0ba28a4123f71ffa045625d29088f8979945da","7b5575c14916376f616ea18f86935b92228e6874","d2e91d486ae52e4deb7712726141ecd4ada559cd","ecbc640756898f20a297df137f1e8def0469f715","678bafacd7c467d565c1d63d711e09b0fa390b02","684be9e9bd41d148158c64ba811c08f66b58092a","03a8cb23b78ae1e8662b226d96e4a0ac2bf5d3fd","18e93fa7d408e9596992f3d63155cb92827839a4","3dafdfc4d90abd7c6de642deb3afeb754602aef9","3334a80676fefc486575bd2ddf1b281a640742f1","9e51babaf392f2e5fc56861166a7f3331614e1fe","3c50f1652c97fb3f032b864750c2982704727e93","229b9e80568169ac90357428ed3cfadd3513c823","18e39e75401ed1f39d8619c4c08afba0a122a267","653eddac5447381e9a7e221498973296e8eb732c","609baf0d38324287aea3eb1b01acbb294cf8fa5e","2c68c7faa89b104b78e2850dbade5a81f0743874","547dc350950d191130cb84d6dc9368540dd41c7b","eab5199f4e60d5dac0e7a9aefdef9a753c77c4f1","655b4421df24798e3aee30223974a6c95f1b9273"],"s2Url":"https://semanticscholar.org/paper/5cdc4b7bc36af36166f75454167e7ac1f95f6cf8","s2PdfUrl":"","id":"5cdc4b7bc36af36166f75454167e7ac1f95f6cf8","authors":[{"name":"Nimrod Raifer","ids":["22253682"]},{"name":"Fiana Raiber","ids":["2625830"]},{"name":"Moshe Tennenholtz","ids":["1708847"]},{"name":"Oren Kurland","ids":["1779654"]}],"journalName":"","paperAbstract":"In competitive search settings as the Web, there is an ongoing <i>ranking competition</i> between document authors (publishers) for certain queries. The goal is to have documents highly ranked, and the means is document manipulation applied in response to rankings. Existing retrieval models, and their theoretical underpinnings (e.g., the probability ranking principle), do not account for post-ranking corpus dynamics driven by this strategic behavior of publishers. However, the dynamics has major effect on retrieval effectiveness since it affects content availability in the corpus. Furthermore, while manipulation strategies observed over the Web were reported in past literature, they were not analyzed as ongoing, and changing, post-ranking response strategies, nor were they connected to the foundations of classical ad hoc retrieval models (e.g., content-based document-query surface level similarities and document relevance priors). We present a novel theoretical and empirical analysis of the strategic behavior of publishers using these foundations. Empirical analysis of controlled ranking competitions that we organized reveals a key strategy of publishers: making their documents (gradually) become similar to documents ranked the highest in previous rankings. Our theoretical analysis of the ranking competition as a <i>repeated game</i>, and its <i>minmax regret equilibrium</i>, yields a result that supports the merits of this publishing strategy. We further show that it can be predicted with high accuracy, and without explicit knowledge of the ranking function, whether documents will be promoted to the highest rank in our competitions. The prediction utilizes very few features which quantify changes of documents, specifically with respect to those previously ranked the highest.","inCitations":["e7ca665defaeaefb9836c80e882f1958fc81c287"],"pdfUrls":["https://ie.technion.ac.il/~kurland/p465-raifer.pdf","http://doi.acm.org/10.1145/3077136.3080785"],"title":"Information Retrieval Meets Game Theory: The Ranking Competition Between Documents? Authors","doi":"10.1145/3077136.3080785","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3077136.3080785","venue":"SIGIR"},
{"entities":["Benchmark (computing)","Cloud storage","Computer data storage","Data scrubbing","Distributed object","Dynamic Language Runtime","Interference (communication)","Load balancing (computing)","Multitenancy","Object storage","Testbed","Throughput"],"journalVolume":"","journalPages":"42-49","pmid":"","year":2017,"outCitations":["2b360e1d6cf91e52c2f496b63289ce4f441b6ac5","84665515d4dd5946743684e2f7236babb0901d10","590bd345ef4b8f274af3363a52b7d8f518cdc08a","7c02eff1b79a78639747d250532651d4c92089d0","5c5f8717f31b7e4334b450df15442223f988ff41","8b1d8d46836a6d5eb4355315b64d85c128cbff27","134021cfb9f082f4e8b58f31bcbb41eb990ab874","09f0751d7452cd0480d572171593d07996325fcb","3c5cc0f17dc2f956dbc278f24433f57affe49dce","e5134de3c15b8a8a7c40371ca5c9a8a306ec375b","3970d838c5b0e1dc3f03ab3930ed01c81c692cfe","3e257f01e3ee71545d824a1615c35659525b856a","19d8f8af2d774bda8b95bbeacf62c85811c37b3c","443b8c56d7300f61b825d1dbafe06afdda23c3e1","830ee8d87a3f2ef969d34c1dc7224d1b3dca6c1b","9fb19a43d7ef6b1ac51a5d9dd45be379673a17ef","3bf64462fc3558ab7e9329d084a1af4cf0c87ebf","01e9ddf1062f9a7d7847bb9bcd2371ce6e0d3e29","9072c624116418f47040e3042b803210c001356b","2da760f90c3d2bf6598becdde9063093f488548c"],"s2Url":"https://semanticscholar.org/paper/51d28dd3066aad5cb465b4277d66f4ec432bfb1d","s2PdfUrl":"","id":"51d28dd3066aad5cb465b4277d66f4ec432bfb1d","authors":[{"name":"Ridwan Rashid Noel","ids":["32008801"]},{"name":"Palden Lama","ids":["34718613"]}],"journalName":"2017 IEEE 10th International Conference on Cloud Computing (CLOUD)","paperAbstract":"Cloud storage services are associated with high latency variance, and degraded throughput which is problematic when users are fetching and storing content for interactive applications. This can be attributed to performance hotspots created by slow nodes in a storage cluster, and performance interference caused by multi-tenancy, and background tasks such as data scrubbing, backfilling, recovery, etc. In this paper, we present DLR, a system that improves the performance of cloud storage services in the presence of hardware heterogeneity, and performance interference through a dynamic load redistribution technique. We designed DLR to dynamically adjust the load serving ratio of storage servers based on the system-level performance measurements from the storage cluster. We implemented DLR using Ceph, a popular distributed object storage system, and evaluated its performance on NSFCloud's Chameleon testbed using Ceph's Rados benchmark. Experimental results show that DLR improves the average throughput and latency of Ceph storage by up to 65%, and 41% respectively compared to the default case. Compared to Ceph's in-built load balancing technique, DLR improves the throughput by up to 98%, and latency by 96%.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/CLOUD.2017.15"],"title":"Taming Performance Hotspots in Cloud Storage with Dynamic Load Redistribution","doi":"10.1109/CLOUD.2017.15","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLOUD.2017.15","venue":"2017 IEEE 10th International Conference on Cloud Computing (CLOUD)"},
{"entities":["Heuristic","Linear programming","Online optimization","Optimization problem","Program optimization","Resource contention","Semiconductor consolidation","Tabu search","Thunderbolt (interface)","Virtual machine"],"journalVolume":"","journalPages":"170-180","pmid":"","year":2017,"outCitations":["3bb902100289a7af154d18372d08aca7f1ce45e0","025b61d89518562f0d42b58de20ffbf6398c4c18","2214854b62c6f0816bfe042bdf28d91df57440d9","c7ea13ddd27c5a5a0280ea222df8c584d9e3c434","c6f5facdf3ba848e663fb5d53299c8dcd61f8891","814155d944d8e42902b1a9855bed3d02668d1076","14a2c1c8657a5ea7b9efe7f5f09353aedaa37fdd","6d37e31161d5f7ac35a6598e91270344983236eb","31edc8557cfc66925e6f1bdfaf2ad82380827e1e","b80d4589cfb3a54dd42cec78f71e48455f0dc03e","708945b02f687f4487a246f4127faa8d6d7fee9f","e78f7f604b30e6c0e82975f1ffa83dd5e9d16e4f","7741cd1a7a7548a9f355e3e194fb5b68391ed76a","6bc873b69b320195911a61073e689c564d91ba7b","f71ec13a4471b57380bddeff035acac749a35ff8","7a627c9b10826d0978c7584317e4911982ccea95","08f2a999098930ed8d473ee01e5338a706a7920e","2f4cfcab9c2f5082fc13110cc26e3fa1bac439dd","2b7febcfdec074620c26d373f877d04e7fb24443"],"s2Url":"https://semanticscholar.org/paper/711745113c95bb9ac69d9895da968d3d6f49d2b3","s2PdfUrl":"","id":"711745113c95bb9ac69d9895da968d3d6f49d2b3","authors":[{"name":"Robayet Nasim","ids":["3204268"]},{"name":"Andreas J. Kassier","ids":["17767400"]}],"journalName":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)","paperAbstract":"In virtualized datacenters (vDCs), dynamic consolidation of virtual machines (VMs) is used as one of the most common techniques to achieve both energy-and resource-utilization efficiency. Live migrations of VMs are used for dynamic consolidation but due to dynamic resource demand variation of VMs may lead to frequent and non-optimal migrations. Assuming deterministic workload of the VMs may ensure the most energy/resource-efficient VM allocations but eventually may lead to significant resource contention or under-utilization if the workload varies significantly over time. On the other hand, adopting a conservative approach by allocating VMs depending on their peak demand may lead to low utilization, if the peak occurs infrequently or for a short period of time. Therefore, in this work we design a robust VM migration scheme that strikes a balance between protection for resource contention and additional energy costs due to powering on more servers while considering uncertainties on VMs resource demands. We use the theory of Gamma robustness and derive a robust Mixed Integer Linear programming (MILP) formulation. Due to the complexity, the problem is hard to solve for online optimization and we propose a novel heuristic based on Tabu Search. Using several scenarios, we show that that the proposed heuristic can achieve near optimal solution qualities in a short time and scales well with the instance sizes. Moreover, we quantitatively analyze the trade-off between energy cost versus protection level and robustness.","inCitations":["ef44c582066f5f6b601aab4be7db541859de3ba1"],"pdfUrls":["http://dl.acm.org/citation.cfm?id=3101134"],"title":"A Robust Tabu Search Heuristic for VM Consolidation under Demand Uncertainty in Virtualized Datacenters","doi":"","sources":["DBLP"],"doiUrl":"","venue":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)"},
{"entities":["Amdahl's law","Apache Hadoop","Assembly language","Benchmark (computing)","Big data","Central processing unit","Computation","Cyberinfrastructure","Data center","Dynamic random-access memory","Hyperscale","Operating system","Science 2.0","Solid-state drive"],"journalVolume":"","journalPages":"147-154","pmid":"","year":2017,"outCitations":["2e8350e39d5d19b5b876f4365cc4bbef8ac5a5b1","09cbad69073a35028379ffc3da50e129ab29a523","b6a75410d9aed0032486664f4afa7a8eaa4c4c70","4a829383409abdb734b29d09f041130b561c4b88","1dc1cfe00228e1e94e1f90ff33d928403809954e","fa7abc4d91247af9be619408438eae8bed94fb64","378b865f0bb0c5b5476e1ac7920c49916547cb9a","5bac410de277c4f2f62672b5b7ac32128ba4d1e5","499d08c312fadb70ebfb91258f02bab47a10d0f2","e0a2067e5f50fa697cee6a07f5f8ee130068fc04","2d068a34e3f619e72d945fdd196414ba2dfa86ca","c9bfcb190e47fb49a343a827ff68592b11020e27","029a5f91d6d2abdb2c80e318c061280fbf7f9794","036d544defb7f8e6297bd4c57a3b430d04a269e8","0d2a822442a839229b04a437a58df7f032fc62a0","83ef247c2281664391f5df5b161e43b37a5ec018","82c934d30d2b3b43f598aa5c8897ad0fb7436ac5","174562c148b8662aaa8363678b3a38796bfcb393","2a71a0b61f78cee9a3ed67ce5b0eb401bd616ede"],"s2Url":"https://semanticscholar.org/paper/cc2de9a75582e346aa3a650607c02ff81d9ac615","s2PdfUrl":"","id":"cc2de9a75582e346aa3a650607c02ff81d9ac615","authors":[{"name":"Arghya Kusum Das","ids":["14069534"]},{"name":"Jae-Ki Hong","ids":["2251551"]},{"name":"Sayan Goswami","ids":["3452118"]},{"name":"Richard Platania","ids":["2302382"]},{"name":"Kisung Lee","ids":["1899648"]},{"name":"Wooseok Chang","ids":["2357986"]},{"name":"Seung-Jong Park","ids":["2794114"]},{"name":"Ling Liu","ids":["1685610"]}],"journalName":"2017 IEEE 10th International Conference on Cloud Computing (CLOUD)","paperAbstract":"High-performance analysis of big data demands more computing resources, forcing similar growth in computation cost. So, the challenge to the HPC system designers is providing not only high performance but also high performance at lower cost. For high performance yet cost effective cyberinfrastructure, we propose a new system model augmenting Amdahl's second law for balanced system to optimize price-performance-ratio. We express the optimal balance among CPU-speed, I/O-bandwidth and DRAM-size (i.e., Amdahl's I/O-and memory-number) in terms of application characteristics and hardware cost. Considering Xeon processor and recent hardware prices, we showed that a system needs almost 0.17GBPS I/O-bandwidth and 3GB DRAM per GHz CPU-speed to minimize the price-performance-ratio for data-and compute-intensive applications. To substantiate our claim, we evaluate three different cluster architectures: 1) SupermikeII, a traditional HPC cluster, 2) SwatIII, a regular datacenter, and 3) CeresII, a MicroBrick-based novel hyperscale system. CeresII with 6-Xeon-D1541 cores (2GHz/core), 1-NVMe SSD (2GBPS I/O-bandwidth) and 64GB DRAM per node, closely resembles the optimum produced by our model. Consequently, in terms of price-performance-ratio CeresII outperformed both SupermikeII (by 65-85%) and SwatIII (by 40-50%) for data-and compute-intensive Hadoop benchmarks (TeraSort and WordCount) and our own benchmark genome assembler based on Hadoop and Giraph.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/CLOUD.2017.27","http://www.ieeeconfpublishing.org/cpir/UploadedFiles/ieee-cloud-2017_AugmeningAmdahl_PdfExpressValidated.pdf"],"title":"Augmenting Amdahl's Second Law: A Theoretical Model to Build Cost-Effective Balanced HPC Infrastructure for Data-Driven Science","doi":"10.1109/CLOUD.2017.27","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLOUD.2017.27","venue":"2017 IEEE 10th International Conference on Cloud Computing (CLOUD)"},
{"entities":["Apevia","Call graph","DACAPO","Java","Machine code","Reification (computer science)","Static program analysis","Toolchain"],"journalVolume":"1","journalPages":"68:1-68:27","pmid":"","year":2017,"outCitations":["4e24aee54000a7a0d9149478f032d807c71b42b1","041fb17a8de187528529990e43f14280d420002f","94d0e8b118efecb9f5b2056d84bf22253a2fb63c","012d35a0c1958ce1520ce88ba55c7a16629a429a","7b2f26c1c2eaac02edb549b59ff89d9f2b59c07c","d1916fecdda925fc856be0a73ea3e7972d4a38b2","3a7dc1c69d637e632fef71459fc42a37702b9be0","557555195d8cc631281988661984ed8c4e91b395","0b53fab8dea434e1046836159e184d9565ffd401","eafb06ac7202985750ce0a03351c7f4ec41b4521","8469007f1d62cac7d7188dbe6b67b24d40d46ca4","1316b4af762f812052210fd51a18af2681c8dfe0","6c232627a4992fe9fcafc13e54d39e7de7da5fe5","027eb436c35c7e293e7ebc565163cb54c05fe2e9","6bd1a113a0256a4d4fbd7c82f7e4e88f70d720d0","ffc3357d1beb12e399c33415f67d8349b4c0aa5a","1753d3e97fdbe7799b9625cb873b77eef506a608","2b5eb50ae8b3258ed3f8985f2c084f99bda74b14","a578530c785b14f54918720ee4acb672ffe3986e","6c1fa64a6b5d3565fc4ab9ca97bf530069ce2669","0d57c1222fd2bbf9842fff83ade3efa8b978c690","80af0dfde58a4f1e4f7ff35fa2c882a4ab3bbad2","fc1de916fa550c35e57ae8ccbc3874f509db0ca7","94c387a12572d189ca7d04ea50cdb26e9bd19634","2554485ffdb8473262ce0cfde401cfdc5b85f3fe","982cc75e388e3de10faef121ba118f921f94106c"],"s2Url":"https://semanticscholar.org/paper/2638b231d41f04df54b5383b7e18f832522459d3","s2PdfUrl":"","id":"2638b231d41f04df54b5383b7e18f832522459d3","authors":[{"name":"Neville Grech","ids":["1863675"]},{"name":"George Fourtounis","ids":["2565863"]},{"name":"Adrian Francalanza","ids":["1771411"]},{"name":"Yannis Smaragdakis","ids":["2726878"]}],"journalName":"PACMPL","paperAbstract":"Static analyses aspire to explore all possible executions in order to achieve soundness. Yet, in practice, they fail to capture common dynamic behavior. Enhancing static analyses with dynamic information is a common pattern, with tools such as Tamiflex. Past approaches, however, miss significant portions of dynamic behavior, due to native code, unsupported features (e.g., invokedynamic or lambdas in Java), and more. We present techniques that substantially counteract the unsoundness of a static analysis, with virtually no intrusion to the analysis logic. Our approach is reified in the HeapDL toolchain and consists in taking whole-heap snapshots during program execution, that are further enriched to capture significant aspects of dynamic behavior, regardless of the causes of such behavior. The snapshots are then used as extra inputs to the static analysis. The approach exhibits both portability and significantly increased coverage. Heap information under one set of dynamic inputs allows a static analysis to cover many more behaviors under other inputs. A HeapDL-enhanced static analysis of the DaCapo benchmarks computes 99.5% (median) of the call-graph edges of unseen dynamic executions (vs. 76.9% for the Tamiflex tool).","inCitations":["166583d9e65f9ec90326bbaf1bc1f65f11dd259c"],"pdfUrls":["http://yanniss.github.io/heapdl-oopsla17.pdf","http://doi.acm.org/10.1145/3133892"],"title":"Heaps don't lie: countering unsoundness with heap snapshots","doi":"10.1145/3133892","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133892","venue":"PACMPL"},
{"entities":["Cognitive dimensions of notations","Cryptographic hash function","Cryptographic primitive","Cryptography","Denial-of-service attack","Key exchange","Standard-definition television"],"journalVolume":"2017","journalPages":"818","pmid":"","year":2017,"outCitations":["f2bfed32c28b25076ceaa4a8897f050932ea9c88","2eab52ed3761f8946a3adc368c9de3560743ede9","6bc308af54fe8c71993d08c9d796947eb2cfc6f2","1a79a3efec3d4a177bae7326dd75e33cf362120d","3b84eb981b8940147a2fdad8a95ffa92b1ed8674","41cce5971ffad66f1c6dd7353e0b5a5763f80b0e","3a5352992cf04969557477bebecdaeaf23d5b730","851cd7f2924bf302e93c7aebfed0469954704cd2","e143f19ae0423e82564afb41ecf51bf8dc17cc1f","683c8f5c60916751bb23f159c86c1f2d4170e43f","5426706f5c9ec33d4df9fabce473d4aaaa175e67","9682341a91f0ea73f3dd9b3548c1e113d7a7f61d","27c4eefbdc3ecee1238807ee454a3bcfbdc3b694","d030862b5ab53b3fad21e1f48733b78d4a6e35b2","1668d381aafb2c23ebe84c3e91517f6af369d5ae","021fe0d3dd74fdd2db57c2af510d99ddf7a59d10","3cb2009ebfa2c83ab0e26bd8c0e8e7855e535a08","48cfd40ed728f6c33d177e670c51b436225500f6","ab39ac59408ad25186d0c1854ba7cf0e0ca69c36","0a45dc987c8265115bedb2fccf574f38e04d4ca6","74e0e22cdefb11a49dac487c3151dcc19deca0cb","14b6054c19faa224e40b4987eaac7518f8f76955","0439891cdb1eb280b83c910e27b3a3be9192e902","1471e355a9ed0857687bda13e7694d5353f9715e","b42ae750455f7ced510cdfc82d6b2694a065ac3a","233e3eb23bb3e882d221474e992afe944f1787d5","380d4e7d272f1682d699cb3058094a56b9e76b66","2d8a132fd622b6b8e46507911f7ab24cbd37e667","2abb585d8263d6048d04fc00ed2782c79722b50c","bde332de7397463a2c641c9983eead2267a2143c","54113d65b26940b290c1fe3f6324e012b3ae77d6","ade75bd84df51da989efef5a5cd20f9c0fa18b74","4de5bb864c8f7dc3896ec2d0a9991a65b7bec831","5b269f67ca847ab27392063f6959917a1f22560c","d0078077f100e27516af114e33a9d375fcfeee9a","43c046c3f3b78bec2b528d45b3ded4bb0046d426","de9dc621472717950511cee953f6a94736f3c177","517d4d45013e3b040cec89ba1cffbd4a7eb0122d","c3ebbc2e3ac42b5bdf97f67a22ba4b656593a0a4","4b2dab634a6af740eb41e792cea3d04c1a3542b1","a28ec078e8414d6bb509cc90db7a5c5f47a97c46","2e149d969293bef42eb113af644c898c8531dc06","fe022d3fe9366a495ebd73cce3a3e9a214c157a3","4e055184f0d2362bd649880146e942ef41fb47f9"],"s2Url":"https://semanticscholar.org/paper/03db8959fce80db50c3ed7f7c3b30ff750cdc870","s2PdfUrl":"","id":"03db8959fce80db50c3ed7f7c3b30ff750cdc870","authors":[{"name":"Yong Li","ids":["1689181"]},{"name":"Sven Schäge","ids":["2674237"]}],"journalName":"IACR Cryptology ePrint Archive","paperAbstract":"An essential cornerstone of the definition of security for key exchange protocols is the notion of partnering. The de-facto standard definition of partnering is that of (partial) matching conversations (MC), which essentially states that two processes are partnered if every message sent by the first is actually received by the second and vice versa. We show that proving security under MC-based definitions is error-prone. To this end, we introduce <i>no-match attacks</i>, a new class of attacks that renders many existing security proofs invalid. We show that no-match attacks are often hard to avoid in MC-based security definitions without a) modifications of the original protocol or b) resorting to the use of cryptographic primitives with special properties. Finally, we show several ways to thwart no-match attacks. Most notably and as one of our major contributions, we provide a conceptually new definition of partnering that circumvents the problems of a MC-based partnering notion while preserving all its advantages. Our new notion of partnering not only makes security definitions for key exchange model practice much more closely. In contrast to many other security notions of key exchange it also adheres to the high standards of good cryptographic definitions: it is general, supports cryptographic intuition, allows for efficient falsification, and provides a fundamental composition property that MC-based notions lack.","inCitations":[],"pdfUrls":["http://eprint.iacr.org/2017/818","http://doi.acm.org/10.1145/3133956.3134006","https://eprint.iacr.org/2017/818.pdf"],"title":"No-Match Attacks and Robust Partnering Definitions - Defining Trivial Attacks for Security Protocols is Not Trivial","doi":"10.1145/3133956.3134006","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3134006","venue":"IACR Cryptology ePrint Archive"},
{"entities":["Algorithm","BLAS","Benchmark (computing)","Bridging (networking)","Competitive programming","Computer memory","Kernel (operating system)","Manycore processor","Matrix multiplication","Memory bandwidth","Memory bound function","Methods of computing square roots","Program optimization","RLC circuit","SW26010","Sunway","Sunway TaihuLight","Supercomputer"],"journalVolume":"","journalPages":"432-441","pmid":"","year":2017,"outCitations":["b76269bf962989ce271bef7ea863ff4adf9c9de6","0b47e159ed9a3e5db1adc135620e7526d93abd87","1ccf5fc4dca56ddb75b33b99ecbde7b1432274c4","2d21ca41ebdfb2b4e7a145e36dc8321386627e94","645d9e7e5e3c5496f11e0e303dc4cc1395109773","2900ebddc2dfb1e4bb7d7eac7384d7f4512b2b9a","7fa2507aec08b080558f8a2e0971e294095756f7","eb4f23afcc86609d9fc5fe90000d9db44cb3e575","1a305ffa74845ec1c94f3eca0df846e2d26def5b","b23604d797999b288c02a930e48e3bfa2dc3bd50","004eda59c0ffceb2417bee87c95539eae4bdf0cd","27bdd0a73b3d5f2c83ac7dfae447c20653dffa2d","092217c2267f6e0673590aa151d811e579ff7760","ea6ce42d3d5a9771d6f0c84f7d5aa6e28e7d0bc6","4ae975bd05c504915aaaf7f5fd3ea49337dafb0c","0edc1a2052c55c7687a08a8f65830c43fc8aed88"],"s2Url":"https://semanticscholar.org/paper/62d105d5f3c63727b056dd9726636eddd74d27da","s2PdfUrl":"","id":"62d105d5f3c63727b056dd9726636eddd74d27da","authors":[{"name":"James Lin","ids":["1701697"]},{"name":"Zhigeng Xu","ids":["19299121"]},{"name":"Akira Nukada","ids":["2763806"]},{"name":"Naoya Maruyama","ids":["3264280"]},{"name":"Satoshi Matsuoka","ids":["1696166"]}],"journalName":"2017 46th International Conference on Parallel Processing (ICPP)","paperAbstract":"The home-grown SW26010 many-core processor enabled the production of China&#x2019;s first independently developed number-one ranked supercomputer &#x2013; the Sunway TaihuLight. The design of the limited off-chip memory bandwidth, however, renders the SW26010 a highly memory-bound processor. To compensate for this limitation, the processor was designed with a unique hardware feature, &#x0022;Register Level Communication&#x0022; (RLC), to share register data among its 8 &#xd7; 8 computing processing elements (CPEs) via a 2D onchip network. Such a radical architecture has sparked global researchers&#x2019; concerns regarding the programming challenges this may cause. To address these concerns, we adopted two compute-bound scientific kernels as benchmarks to identify the potential programming challenges. The first kernel is doubleprecision general matrix-multiplication (DGEMM). An RLCfriendly algorithm was designed for this kernel to reuse the data that already reside in the registers of 64 CPEs. This novel optimization enables the kernel to achieve up to 88.7% efficiency in one core group of the SW26010. This paper reveals, for the first time, the details of how the highly efficient DGEMM is implemented on the home-grown processor. The second kernel that we used is N-body. Due to the inefficient hardware support for transcendental operations on the SW26010, we replaced the reciprocal square root (rsqrt) instruction of N-body with a software routine to tackle the problem. Based on the programming challenges identified through these two optimized kernels, we proposed a three-level programming guideline for the SW26010. The paper concludes with our crucial finding that the critical step towards bridging the ninja performance gap on the SW26010 is to design an RLC-friendly algorithm to increase arithmetic intensity.","inCitations":["608fb6c95c30e5b27ca729e3f9a4a055747abc4a","e45dea6588d1de0a23618e019031e67eedeeee26"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICPP.2017.52"],"title":"Optimizations of Two Compute-Bound Scientific Kernels on the SW26010 Many-Core Processor","doi":"10.1109/ICPP.2017.52","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICPP.2017.52","venue":"2017 46th International Conference on Parallel Processing (ICPP)"},
{"entities":["Algorithm","Experiment","Generative model","PowerPC Reference Platform","Programming paradigm","Relevance","Text mining","Type system"],"journalVolume":"","journalPages":"425-434","pmid":"","year":2017,"outCitations":["221b59a2a6bc19302bac89abaf42c531f4dc4cf8","054ba27fe5cc6085d20ea2707de886db6865dbed","40150a1f67a5ebfa78a9ac99f998b39fa34bc9ba","1c96cdb6bc0029b8ca4cd578aca5e939b359e578","86979d8b19914284d376e1981319b762702797b4","07bd2985ebe29eaa182569e1fd3e3e0f9df4c14a","d822f61bc8b6a6625e939a2445ba74180f53c829","13c40b32b9f35c8d24a5c00ec16a88382aaf07fe","71413d837edfb2e6d7f4685476158bcc70cf9d9d","2cbe0ba73d02aabbeefedf841203219796a551b7","1970a644bc8a9fa7340f04785f8b19e9d33778e1","63d440eb606c7aa4ee3c7fcd94d65af3f5c92c96","7f2968ecdf3bb966fbbb605a4f24733c22937fab","1871ea4cf23441d0297c99d9115f664a6ba0efda","5abf1c0ff7dc9157aedd9dfa021f8d3dcc647d9b","20dc1890ca65e01856f31edf10126c2ad67e9d04","02e0bc77460469aefec5bd794ee6c4efc15e6adb","a4e3b552fda3d6dab61ef6ddb75944bfd38248ab","65f8e3d819786754fecc6085ee5ded94c7c0b142","009dbf3187862352aac542bf7d61e27bce6b27f5","1c8c9a7713395e9a176c42e49bc80574a013f89f","0d1e2c2ae657895c7532ed26e3f09f140ad84afb"],"s2Url":"https://semanticscholar.org/paper/0467df50312601c78569a82da5a39344351da983","s2PdfUrl":"","id":"0467df50312601c78569a82da5a39344351da983","authors":[{"name":"Yu Shi","ids":["31606525"]},{"name":"Po-Wei Chan","ids":["19277495"]},{"name":"Honglei Zhuang","ids":["39371343"]},{"name":"Huan Gui","ids":["2286096"]},{"name":"Jiawei Han","ids":["1722175"]}],"journalName":"","paperAbstract":"As a powerful representation paradigm for networked and multi-typed data, the heterogeneous information network (HIN) is ubiquitous. Meanwhile, defining proper relevance measures has always been a fundamental problem and of great pragmatic importance for network mining tasks. Inspired by our probabilistic interpretation of existing path-based relevance measures, we propose to study HIN relevance from a probabilistic perspective. We also identify, from real-world data, and propose to model <i>cross-meta-path synergy</i>, which is a characteristic important for defining path-based HIN relevance and has not been modeled by existing methods. A generative model is established to derive a novel path-based relevance measure, which is data-driven and tailored for each HIN. We develop an inference algorithm to find the maximum a posteriori (MAP) estimate of the model parameters, which entails non-trivial tricks. Experiments on two real-world datasets demonstrate the effectiveness of the proposed model and relevance measure.","inCitations":["873bb1d992e55afca552e27d9c58afd329220c7f"],"pdfUrls":["http://yushi2.web.engr.illinois.edu/kdd17.pdf","https://arxiv.org/pdf/1706.01177v1.pdf","http://shichuan.org/hin/topic/Similarity%20Measure/2017.%20KDD2017%20PReP%20Path-Based%20Relevance%20from%20a%20Probabilistic%20Perspective%20in%20Heterogeneous%20Information%20Networks.pdf","http://yushi2.web.engr.illinois.edu/kdd17_slides.pdf","http://arxiv.org/abs/1706.01177","http://hanj.cs.illinois.edu/pdf/kdd17_yshi.pdf","http://doi.acm.org/10.1145/3097983.3097990"],"title":"PReP: Path-Based Relevance from a Probabilistic Perspective in Heterogeneous Information Networks","doi":"10.1145/3097983.3097990","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3097983.3097990","venue":"KDD"},
{"entities":["Bottom-up parsing","Design pattern","Error message","Parsing","Parsing expression grammar","Redshift","Shift-reduce parser","Software design pattern"],"journalVolume":"","journalPages":"38-42","pmid":"","year":2017,"outCitations":["303b122551f37383a43acc1229f6e57dcde20f40","4e37893e503466fe3673ae117f6d7c364c21779a","2bed707e5a3f42294988cdcfe7ff15b839b6bcd8","4a022cefcf1c3980c18ded9e542229565f010eed","6669f223fba59edaeed7fabe02b667809a5744d9","9269893f6ce2a5571c058019e95143ef85cbe1a1"],"s2Url":"https://semanticscholar.org/paper/f3f5c38525e58c094880db73643add9342c320f2","s2PdfUrl":"","id":"f3f5c38525e58c094880db73643add9342c320f2","authors":[{"name":"Nicolas Laurent","ids":["2399462"]}],"journalName":"","paperAbstract":"Red Shift is a new design pattern for implementing parsers. The pattern draws ideas from traditional shift-reduce parsing as well as procedural PEG parsers. Red Shift parsers behaves like shift-reduce parsers, but eliminate ambiguity by always prioritizing reductions over shifts. To compensate the resulting lack of expressivity, reducers are not simple reduction rules but full-blown procedures written in a general-purpose host language. I found many advantages to this style of parser. In particular, we can generate high-quality error messages more easily; and compose different style of parsers. I also speculate about how Red Shift parsers may improve partial compilation in the context of an IDE.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3136014.3136036"],"title":"Red Shift: procedural shift-reduce parsing (vision paper)","doi":"10.1145/3136014.3136036","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136036","venue":"SLE"},
{"entities":["Automaton","Boolean satisfiability problem","Checking (action)","Experiment"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["fddf8f35612a73e0311030a9abcbcc2b16ec3193","389f432f73ccc95b5738e80781e085bb00dfd8c4","d08ce80004c867bc19f8f2858b20cd886a88bed5","3d933f007baa84865f609a154d2a378b3d62442f","363ff906a42d2ac95456d7d8fb2527989a42f1ec","fbb56b289afd5edb72505188af55282ca13e3ca0","894046a9074675d44dca75ed6de1a049ff6f9a96","179fe945cbd9d39cb46446d15de915f90b1d1579","8eb819823e254c232f2635e69c9ee54a7e2ff387","0634ba86fab525d37981280400963541a2e433b8","341d33498388711a5303c5f51433b3d5739a21d2","a01ab7c482e823c741cfab10b2104c650bf68a91","306f123c6af2577a61f67e9155cf3897ea149d1c","2100d14e855e4c66e845fb4dbddf00849b1be758","231bed067708e80dae6d836f8359fb6a2766283d","e05e140132042f494e6b64f52c0654bc55d0bbae","0e4a694548b731930cefe91330ece0737c415d32","595642f2eb3ae457911e710ef5c1816e0d51fd4b","82338763ae1687aa30c01bf35e7985e353ea4e59","e4e7416e117118dbd260a06ddd8212074a94ca28","088a382a5af6a44ccb69c2f49517bf8d99ab6759","6719a1260d97949eb2418d76af471be692a7e3f6","9370ff362f617a0a4e23b85368bf4cdb44f436df","c537444e60011f290c48dc768cafe3d7d5d3cd1f","2c173140a36f44fa2767156900cc52e71f75748e","02ea2faa6190bc14f4244386996054ef11b0d89c","12f000052d3e168a41b2e1968b4488a982cf9fd8","1246299e80c8a403313adf0f5c28e4127ed15001","8ba10d5e5be9ca136f3247685bc241942aee255a","1dba737ed6207fbd69afd8a5bf9938a8790c4b92","f3c59aff8a7648fd29a31728f39e3aa9ee3f2528","1019341b60ccd9e2144bb1bf8cf7ab2275b12d07","90c28e38506d9cb1c3e3186d7e3971805dfcc675","6a659685bff877d39cb4d5a20fcdbbf42151b84f","06f2bdf034e02b3735f044589dbe60b5665cca49","5518d5853b694c865a55be5628e7205007806563","6bb40354a670b1509ee312ec045326791e197ba8","db8fe43a20608c3da49d2edce96377b7d571436e","decb7c40e12fb4e20f04b2b514704575e4481ff8","144382ef2ee1d00ce3d36c61601afecca5620c7d","d000d98371c266e64c136155b54f7749bdcffaf0","3960dda299e0f8615a7db675b8e6905b375ecf8a"],"s2Url":"https://semanticscholar.org/paper/9baab93dbfe4c773e4584ba00241b790aafcad47","s2PdfUrl":"http://pdfs.semanticscholar.org/9baa/b93dbfe4c773e4584ba00241b790aafcad47.pdf","id":"9baab93dbfe4c773e4584ba00241b790aafcad47","authors":[{"name":"Parosh Aziz Abdulla","ids":["1686895"]},{"name":"Mohamed Faouzi Atig","ids":["3271072"]},{"name":"Yu-Fang Chen","ids":["1685787"]},{"name":"Bui Phi Diep","ids":["7277539"]},{"name":"Ahmed Rezine","ids":["1707824"]},{"name":"Philipp Rümmer","ids":["1739683"]}],"journalName":"","paperAbstract":"We describe a uniform and efficient framework for checking the satisfiability of a large class of string constraints. The framework is based on the observation that both satisfiability and unsatisfiability of common constraints can be demonstrated through witnesses with simple patterns. These patterns are captured using flat automata each of which consists of a sequence of simple loops. We build a Counter-Example Guided Abstraction Refinement (CEGAR) framework which contains both an underand an over-approximation module. The flow of information between the modules allows to increase the precision in an automatic manner. We have implemented the framework as a tool and performed extensive experimentation that demonstrates both the generality and efficiency of our method.","inCitations":[],"pdfUrls":["http://user.it.uu.se/~parosh/publications/papers/pldi2017.pdf"],"title":"A Framework for Efficient Analysis of String Constraints","doi":"","sources":[],"doiUrl":"","venue":""},
{"entities":["Data breach","Identifier","Inference engine","Intrusion detection system","Network packet","Network performance","Software-defined networking","Span and div","Storage area network","Testbed"],"journalVolume":"","journalPages":"134-146","pmid":"","year":2017,"outCitations":["0c484c5d9e0a13c2bf195c102e2908928c94d9a3","2b19ed550e24d44c43dee558a062d33d62a52130","140ef45a955ed132122b07fe59d5c40026ab39eb","191cef5d1d84b81c8eb77119c7029fa74d23d9bc","1b2dbf8b3095d9dfda0c03db156f19ed6dbe1764","525ac8da0afe2ba149b0e26c07bf9da1fa62650d","49bb05461318b24279b60666f3cb9a5f8cd68e56","7efe0dc4cde074bd87089491a6f95dde84397cca","da01f7fcc5c7eeba75bc09a41fdd946e65210090","45b70bd4e1321359cb2fba8e56be7e2151976362","9d88a4c2a971545c3546be1b16cf030ed5781947","9241ea3d8cb85633d314ecb74b31567b8e73f6af","06c9511a3a29f1afa3971b1885ad56b5a890dbdc","318608cbfc2a786f116e1c671df50603e8bdf6b9","cd800900fbd9bc89a35ff597a7ddfe74aceefa55","2f983533f6dd084b0851652b5991fd6464706ff4","8f158e59875886b6aa1ca7b629c286158c055ce5","6adc921e32dcb8d6b01f02f47e2b5e8f243c2ebb","363d109c3f00026f9ef904dd8cc3c935ee463b65","3591e02811f3efe3ad4a8272725993958ab6f9f6","2167e9ef397ed5af69285a9e9018e9b373969d8d","065ffd76b77d59b2bcbf9f71df4ff27e0adc613b","8112c4305b88d85199267e9e03d3a0aca4432059","271841937e574fbb4fed829ed59b0d3ed7f322ce","0cfe1b85e5f1d56e41a95c3b2fa274e9fe8b45d0","e7c257223f5899f11d23f283d45a702b25e4cfa1","824bfd0c23602d0ea3618f4fbf77af1d023938ec","02d843e3a008e76cf6a4c23bd01023d264b05686","07769f0c29e21aac81857616435b846a669b29bf","0f318aa5af40450af9ba2f50872bdf26741e510a","d131c0813e4ee72e3449236ccf4faa4a014c67dc","42b1400e01b976b8e9bfa7b772ec41338dc32ed3","6e901357a09169cde6b865e0785c045d7298d918","1164ec0b8d2bd8e95b9fc07e9669ff9d4d379c64"],"s2Url":"https://semanticscholar.org/paper/c6204b1d27738930494ec31cd8073554dac59a70","s2PdfUrl":"","id":"c6204b1d27738930494ec31cd8073554dac59a70","authors":[{"name":"Azeem Aqil","ids":["12526150"]},{"name":"Karim Khalil","ids":["9532792"]},{"name":"Ahmed Osama Fathy Atya","ids":["1805144"]},{"name":"Evangelos E. Papalexakis","ids":["3000659"]},{"name":"Srikanth V. Krishnamurthy","ids":["38774813"]},{"name":"Trent Jaeger","ids":["1699210"]},{"name":"K. K. Ramakrishnan","ids":["1706474"]},{"name":"Paul Yu","ids":["4179522"]},{"name":"Ananthram Swami","ids":["1703726"]}],"journalName":"","paperAbstract":"We have recently seen an increasing number of attacks that are distributed, and span an entire wide area network (WAN). Today, typically, intrusion detection systems (IDSs) are deployed at enterprise scale and cannot handle attacks that cover a WAN. Moreover, such IDSs are implemented at a single entity that expects to look at all packets to determine an intrusion. Transferring copies of raw packets to centralized engines for analysis in a WAN can significantly impact both network performance and detection accuracy. In this paper, we propose Jaal, a framework for achieving accurate network intrusion detection at scale. The key idea in Jaal is to monitor traffic and construct in-network packet summaries. The summaries are then processed centrally to detect attacks with high accuracy. The main challenges that we address are (a) creating summaries that are concise, but sufficient to draw highly accurate inferences and (b) transforming traditional IDS rules to handle summaries instead of raw packets. We implement Jaal on a large scale SDN testbed. We show that on average Jaal yields a detection accuracy of about 98%, which is the highest reported for ISP scale network intrusion detection. At the same time, the overhead associated with transferring summaries to the central inference engine is only about 35% of what is consumed if raw packets are transferred.","inCitations":[],"pdfUrls":["http://www.cs.ucr.edu/~krish/jaal.pdf","http://doi.acm.org/10.1145/3143361.3143399"],"title":"Jaal: Towards Network Intrusion Detection at ISP Scale","doi":"10.1145/3143361.3143399","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3143361.3143399","venue":"CoNEXT"},
{"entities":["Amplifier","Buffer overflow","Burst mode (computing)","Data buffer","Garbage collection (computer science)","Non-volatile memory","Open-source software","Solid-state drive","Streaming media","Supercomputer","Throughput","User interface","User space"],"journalVolume":"","journalPages":"245-255","pmid":"","year":2017,"outCitations":["2728758f576a8ed1aca65005c12363533436a1e1","9edab79d681bae0071aa784328b0ce134d909c10","3037024ee9782764cfbe8e5c9c625e2edaaf83fd","abfd25e8e8878f28f26ca9b7303e06688bbb2722","ba625fb8f294a5003a0880096695a92bc9bb843a","91912a461d30035639ddda2b6de97a388823fb4b","054b0e0c107b550f99c5c23db99b64254b95bbfa","b3bd374752659aa65c8b5a59b7cd25a94153f593","20cc5fdba0915a3958c31d7b18763e82a5418856","b460a8c552ba24afa9b05cf551f5f55db1985e56","59ba9f62728b6231f982ea3b59f9ba7422182f28","6cfe53d6b16e0c8303462265eeb3913707ac5d5d","2657302160775f8766964d013efe242836693f3e","26f092b034364f2af58df7918e965590a2d85b88","72722e7602138e3896e5576d3f3ef730e7b7c4b4"],"s2Url":"https://semanticscholar.org/paper/b414a89387b688fd0217a87e7b089ce47f91270d","s2PdfUrl":"","id":"b414a89387b688fd0217a87e7b089ce47f91270d","authors":[{"name":"Jaehyun Han","ids":["7181851"]},{"name":"Donghun Koo","ids":["10691462"]},{"name":"Glenn K. Lockwood","ids":["8404768"]},{"name":"Jaehwan Lee","ids":["1737967"]},{"name":"Hyeonsang Eom","ids":["1738654"]},{"name":"Soonwook Hwang","ids":["34987672"]}],"journalName":"2017 IEEE International Conference on Cluster Computing (CLUSTER)","paperAbstract":"Burst buffers tolerate I/O spikes in High-Performance Computing environments by using a non-volatile flash technology. Burst buffers are commonly located between parallel file systems and compute nodes, handling bursty I/Os in the middle. In this architecture, burst buffers are shared resources. The performance of an SSD is significantly reduced when it is used excessively because of garbage collection, and we have observed that SSDs in a burst buffer become slow when many users simultaneously use the burst buffer. To mitigate the performance problem, we propose a new user-level I/O isolation framework in a High-Performance Computing environment using a multi-streamed SSD. The multi-streamed SSD allocates the same flash block for I/Os in the same stream. We assign a different stream to each user; thus, the user can use the stream exclusively. To evaluate the performance, we have used open-source supercomputing workloads and I/O traces from real workloads in the Cori supercomputer at the National Energy Research Scientific Computing Center. Via user-level I/O isolation, we have obtained up to a 125% performance improvement in terms of I/O throughput. In addition, our approach reduces the write amplification in the SSDs, leading to improved SSD endurance. This user-level I/O isolation framework could be applied to deployed burst buffers without having to make any user interface changes.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/CLUSTER.2017.60"],"title":"Accelerating a Burst Buffer Via User-Level I/O Isolation","doi":"10.1109/CLUSTER.2017.60","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLUSTER.2017.60","venue":"2017 IEEE International Conference on Cluster Computing (CLUSTER)"},
{"entities":["Adversary (cryptography)","Client (computing)","Correlation attack","Denial-of-service attack","Relay","Resolver One","TRAVERSE","Tor Messenger","Traceroute"],"journalVolume":"abs/1609.08187","journalPages":"","pmid":"","year":2017,"outCitations":["4c775488cbb7557b1e20d43d3fb7c6c286eeb7d2","357af3dd66a8ee994f17c890422fda1b618586d3","067c6f27a67976a7e67f567e5568996d6ca14962","133e0e83dc6877c6d417431e875cd57876153893","0ae31e412826cf1dfb45c85b14df33f1863b5011","096a2026fa46abd43143e8ae3dc0ce6414310cf9","356e0eece5bbd700ea3c388af8ea3e088baf7c6e","0662c6e20750068e03711b950ee4b730f61ef342","31f530f8d0ecb37d2d376313bc4d0dd371bc34de","2452c0b6563b95c743e70b91782af73f4aba6826","108747579aef6bf029623639a86070feaf5cad41","395867fa1708ad9ef3572ab9be0b34b203707be3","8750c0b8094957003fd7f681f9ef8af47b86a99d","2d2ff1db0079fc0a47a37d41be43c0c9a435e4bb","02d0a3def2294d3d9c1ac73465b3c88bf9c61b2e","0f1a01fde1ac0507b48c369c7f4f837bb3c628f6","566333376dd1af014555b4cf82cda42c22501013","f218f284294d893fe9f15bdad5cb98c10887fc97","2b5e90bc36ded540baf24cdc8a5bb8e66032bc08","3830d1be16e45466147598acaf4ce65628046758","2e4b61ca5ff7af8743e4365edeb40cd87df15c5a","1708eba3482a2bc755f405ef9446914f82a321ad","1cd929e6cd9c62697de1a78102600d9accbb3a0e","3977096a0c292e3af2f408927fd095db5a9df9e4","7b102e4c57feaa1cb802b58f0f9ff2c934a82db7","69a3527f4e2d301536cbe28e02d3789bcdc66c11","0be8170df4c1ea1cf8312ae5ed326665224d5d9c","2633619177fcb13211008c6f8b952933afc01cde","18b1c62d6c7fa0e619f0c13172d8852b3d5a71fe","14d19771bc69f1d41f63052e56e134f9ed569c1e","058ada9d78c689e03ea898008e2bcebf69910d4f","0469044c24ac4897fcffc3c7db6a2d9c7fd08848","4458751fda28db4b489b5626e2e9cc965f3c379a"],"s2Url":"https://semanticscholar.org/paper/0bd77e0753180016a35491a181c2b59ec2a143e8","s2PdfUrl":"http://pdfs.semanticscholar.org/95e6/037b826c6e55c9231e20c8114c02b80c3897.pdf","id":"0bd77e0753180016a35491a181c2b59ec2a143e8","authors":[{"name":"Benjamin Greschbach","ids":["3271200"]},{"name":"Tobias Pulls","ids":["1791678"]},{"name":"Laura M. Roberts","ids":["3469156"]},{"name":"Phillip Winter","ids":["39700643"]},{"name":"Nick Feamster","ids":["1800154"]}],"journalName":"CoRR","paperAbstract":"Previous attacks that link the sender and receiver of traffic in the Tor network (“correlation attacks”) have generally relied on analyzing traffic from TCP connections. The TCP connections of a typical client application, however, are often accompanied by DNS requests and responses. This additional traffic presents more opportunities for correlation attacks. This paper quantifies how DNS traffic can make Tor users more vulnerable to correlation attacks. We investigate how incorporating DNS traffic can make existing correlation attacks more powerful and how DNS lookups can leak information to third parties about anonymous communication. We (i) develop a method to identify the DNS resolvers of Tor exit relays; (ii) develop a new set of correlation attacks (DefecTor attacks) that incorporate DNS traffic to improve precision; (iii) analyze the Internet-scale effects of these new attacks on Tor users; and (iv) develop improved methods to evaluate correlation attacks. First, we find that there exist adversaries who can mount DefecTor attacks: for example, Google’s DNS resolver observes almost 40% of all DNS requests exiting the Tor network. We also find that DNS requests often traverse ASes that the corresponding TCP connections do not transit, enabling additional ASes to gain information about Tor users’ traffic. We then show that an adversary who can mount a DefecTor attack can often determine the website that a Tor user is visiting with perfect precision, particularly for less popular websites where the set of DNS names associated with that website may be unique to the site. We also use the Tor Path Simulator (TorPS) in combination with traceroute data from vantage points co-located with Tor exit relays to estimate the power of AS-level adversaries who might mount DefecTor attacks in practice.","inCitations":["e2309bfc222190aa066342f654b5bc7457503924"],"pdfUrls":["http://www.cs.princeton.edu/~pwinter/pdf/greschbach2016a.pdf","https://www.freehaven.net/anonbib/cache/dnstor-ndss2017.pdf","https://www.cs.princeton.edu/~pwinter/pdf/greschbach2016a.pdf","http://www.internetsociety.org/sites/default/files/ndss2017_06B-2_Greschbach_paper.pdf","http://arxiv.org/pdf/1609.08187v1.pdf","http://arxiv.org/abs/1609.08187","https://www.cs.princeton.edu/~pwinter/pdf/greschbach2016a-slides.pdf","https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/e-effect-dns-tors-anonymity/","https://arxiv.org/pdf/1609.08187v1.pdf","https://arxiv.org/pdf/1609.08187v2.pdf","http://www.cs.princeton.edu/~pwinter/pdf/greschbach2016a-slides.pdf"],"title":"The Effect of DNS on Tor's Anonymity","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NDSS"},
{"entities":["SEER-SEM"],"journalVolume":"","journalPages":"106-118","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/154c5aa62805ae6556df409570b88f397a0cee6a","s2PdfUrl":"","id":"154c5aa62805ae6556df409570b88f397a0cee6a","authors":[{"name":"Patrick Reisert","ids":["34610942"]},{"name":"Alexandru Calotoiu","ids":["1835480"]},{"name":"Sergei Shudler","ids":["2060408"]},{"name":"Felix Wolf","ids":["1684034"]}],"journalName":"","paperAbstract":"","inCitations":[],"pdfUrls":["https://doi.org/10.1007/978-3-319-64203-1_8"],"title":"Following the Blind Seer - Creating Better Performance Models Using Less Information","doi":"10.1007/978-3-319-64203-1_8","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-64203-1_8","venue":"Euro-Par"},
{"entities":["Computer data storage","Dynamic random-access memory","Memory architecture","Multi-core processor","Network switch","Parallel computing","Partition (database)","Read-write memory","Shared memory","Thread (computing)"],"journalVolume":"","journalPages":"156-166","pmid":"","year":2017,"outCitations":["002e5d1003a5d8192f43419350cee2c94562478f","4215fbbff39a0213888718549f215b124bd2e611","54a15f2c25bec4274d5bb423dbc5002426a506a3","1de7a8de961624bfd482744c6be24fb15ae14776","8f126319c2c52347f3d32e5daf25bbccf759c761","1401df37cc3fc78f26570d601fd123f17646b2d2","026615150a7db9012ea247d3576957ca214258c6","5293158ac8e5e2b89b96b86a064aeb0086b7dac1","c797c15492e635ce850158dbe01f402c0f8e78cd","5b93477e6d7d0c6701052791905300cfd887b5c2","c7ae87b4e5952560362e24274a3e9f4e78a666f6","9f6fb3b7ded93757952ba129fccc211dea02aab0","4390f4a06a036b8f04cbb4fe7611fa5af9492797","8b4682a90b39d0b95d92098be48f05687cb23086","3ed84f2fbdc4dc6450919ec5b017e66440a5833c","0e6b0665e0fc3c0c152885869f6c0d339aba06a1","b34823a63f1cd1d870c7af7179c8d08b603ec791","41b24c890ae0ef99ff031c9c8549375af6025fb6","f3325ace129dec914966f9894d9f412e5e04bdc2","747ad718761b7d848a12e4f3a82aa0f46117a815","26e72340c47b7348e1b1de285f89dd96cc925b27","434fa04db769935ae61bbcf4d9faa602b9a8c730","08af8e9674bd5460e477b3372c0a3ebc97fe518e","1dec8f5106d11047aaaf126121110cbf890f17c3","094b881edab3f5833c4ff2f38d4ed207af141bcd","464af3debb8434807ab04eb749d63594e78ee786","0b885bb186445ee0c50277d990eca18c53fef09b","9cce6a43d542afbea7a6cff1b4d05a5c5700ddc8","1ab74d44982409beeca21efb2dbcb97a5c7de4b2","9c7e0c435a94c17c16853937f60edd8c9b3a3a4a","1dd353938063795c06ef21d8b0b3ef3b45a2fdc1","115713b2175047e746c8e7cd22ee1b8255866d0f","52cf88a3f3510c91d3952acabc447bdb2eb2e224","0e44228b12df76587803f3f7a8e49fe3a0aee45f","242cbdc5966fd14ba4a00815ac301fb278d8f544","2608db8056e1598cf0b0bce8c2e305c3735a7bbe","1641068a497e6c810e2bc5446c68c4728bbd5ae0","675e82b6d0d2257c6aab0965238b0c97928b9f78","0e28f43f2e7d093b52010378d50c780f94b7abed","705a129de84bcf24b4039150c2fc2be1c24cc24a","1bed30d161683d279780aee34619f94a860fa973"],"s2Url":"https://semanticscholar.org/paper/ffbaf45cb4123a76542e008875f14ed32c9b502e","s2PdfUrl":"","id":"ffbaf45cb4123a76542e008875f14ed32c9b502e","authors":[{"name":"Eojin Lee","ids":["7266659"]},{"name":"Jongwook Chung","ids":["10013992"]},{"name":"Daejin Jung","ids":["2550204"]},{"name":"Sukhan Lee","ids":["4239456"]},{"name":"Sheng Li","ids":["40305784"]},{"name":"Jung Ho Ahn","ids":["2575874"]}],"journalName":"2017 IEEE International Symposium on Workload Characterization (IISWC)","paperAbstract":"Modern multi-core systems employ shared memory architecture, entailing problems related to the main memory such as row-buffer conflicts, time-varying hot-spots across memory channels, and superfluous switches between reads and writes originating from different cores. There have been proposals to solve these problems by partitioning main memory across banks and/or channels such that a DRAM bank is dedicated to a single core, being free from inter-thread row-buffer conflicts. However, those studies either focused on only multi-programmed workloads on which cores operate independently, not cooperatively, or specific hardware configurations with a limited number of degrees of freedom in the number of main memory banks, ranks, and channels. We analyze the influence of memory partitioning on systems with various degrees of banks, ranks, and channels using multi-threaded and multi-programmed workloads, making the following key observations. Bank partitioning is beneficial when memory-intensive applications in a multi-programmed workload have similar characteristics in bank-level parallelism, bandwidth, and capacity demands. Any diversity in these demands with a limited memory capacity greatly diminishes the bank partitioning benefits. As memory access/usage patterns across cores are more easily manageable on multi-threaded workloads, bank partitioning is more often effective with memory intensive multithreaded applications. Channel partitioning becomes effective when the reduction of the negative impacts of time-varying hotspots across memory channels outweighs the load imbalance due to partitioning. We also demonstrate the benefits of rank partitioning with regard to minimizing read-write switches on multi-threaded applications where cores can coordinate memory accesses.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/IISWC.2017.8167773"],"title":"Work as a team or individual: Characterizing the system-level impacts of main memory partitioning","doi":"10.1109/IISWC.2017.8167773","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IISWC.2017.8167773","venue":"2017 IEEE International Symposium on Workload Characterization (IISWC)"},
{"entities":["Heuristic","Mathematical optimization","Population dynamics","Reinforcement learning","Skolem normal form","Stochastic process"],"journalVolume":"","journalPages":"441-450","pmid":"","year":2017,"outCitations":["0a9c6db5676cf04fa760d498522a6c71a85a4dba","027af00776ecb82cad685d93b36073aebed35b73","b50e429252a5c3135977000c67f977ba222a8c59","0381647f826e9865edb6c2c1754f8ec54ff21163","1d6abcc133a2dde1d9cd1f3e0ea973ac94f4235c","679ce18f6655d3f94d038901eb4fd2dd4d5a6f37","5853453f7549402e0fc56a9ee0694baa3928d1f8","75fb27ae0495c4a318d27e71fa7fb838e1e5cf58","27deee900eadd2803c407336f9cf553427e4ea32","269bc6f89cf334c7667e7ff15536776e149991b0","8c89c019c88f7d529b5a7df1185375ddbd6cc486","09c99bf83096eb4704283111a45fdb1bdd54d829","1e73f6f927997b7f86606a77ff9795d77948a53d","5f0e251752b5ee6a904a8b10c2a9f67b66244dc0","ac2e640a89f321cffe77f518ab86f039277bc5b2","45b26196169f568abd7e47f723dc8bc21a1e9a2c","2d94b78403b89002e6b6846c7317f169448e92b8","2bab6c5220111d9f0b70540dabdd0316062e9411","61e2e06431c6245f3bd4f8668517044f6f459a75","af151c0e0c7eb5762ef57395ff980e024a4acdd1","23a4971ea1a47a827df398cbabc26e0e05132203","52792bbbe9383b33af6916005547a93228e3524c","2fc412851fce5b3d05a59fe8bc44b2fbccb80914","4a437f424d469ee1af9b415509e6287d02eae7ae","47f40f2345fbb2e17e0efdadf984967cb71e9df7","16fce2945793d0842a21000f15b60d3c74e2f8da","384ba4e423a7b51f85a8f97de367ccbf9fea1ea2","57e61a469e280360b86524765b96447e34a071f1","6583f945520e48a6f3c25a2b7a564a79aac1befe","7541d17dfab78485d7b894afc31c63e464a423bf","dbd80760f1da9a0e3afd20420763c82c59846924","893bb2d6a150ef04c06b143ab1854af5b863a730","245dce914e257f12391b0170025374323693acc7","bea764470272185190e4bd841b0772c6a17f7223","3b0d96ae2dedbe88ae13eaba040a080a1c769ecf","0dfd538d6eb4b670bf03547cb62c62c4ae3314a4","0325bf680d2c871ac40fd31157d0c0befa1420eb","28df3f3d406879ecfa2034d9f1bd69bc3e52dcd2","930b1b411516d6dd6399962875cd5d89c33f9da2","1e3bf21de47038c66678eedb51961c34ffeaa0ce"],"s2Url":"https://semanticscholar.org/paper/4c5e7a3c12ddc4cbdade447667a00e461905528a","s2PdfUrl":"http://pdfs.semanticscholar.org/4c5e/7a3c12ddc4cbdade447667a00e461905528a.pdf","id":"4c5e7a3c12ddc4cbdade447667a00e461905528a","authors":[{"name":"L. Elisa Celis","ids":["3246450"]},{"name":"Peter Krafft","ids":["2025970"]},{"name":"Nisheeth K. Vishnoi","ids":["1810064"]}],"journalName":"","paperAbstract":"We study a distributed learning process observed in human groups and other social animals. This learning process appears in settings in which each individual in a group is trying to decide over time, in a distributed manner, which option to select among a shared set of options. Specifically, we consider a stochastic dynamics in a group in which every individual selects an option in the following two-step process: (1) select a random individual and observe the option that individual chose in the previous time step, and (2) adopt that option if its stochastic quality was good at that time step. Various instantiations of such distributed learning appear in nature, and have also been studied in the social science literature. From the perspective of an individual, an attractive feature of this learning process is that it is a simple heuristic that requires extremely limited computational capacities. But what does it mean for the group – could such a simple, distributed and essentially memoryless process lead the group as a whole to perform optimally? We show that the answer to this question is yes – this distributed learning is highly effective at identifying the best option and is close to optimal for the group overall. Our analysis also gives quantitative bounds that show fast convergence of these stochastic dynamics. We prove our result by first defining a (stochastic) infinite population version of these distributed learning dynamics and then combining its strong convergence properties along with its relation to the finite population dynamics. Prior to our work the only theoretical work related to such learning dynamics has been either in deterministic special cases or in the asymptotic setting. Finally, we observe that our infinite population dynamics is a stochastic variant of the classic multiplicative weights update (MWU) method. Consequently, we arrive at the following interesting converse: the learning dynamics on a finite population considered here can be viewed as a novel distributed and low-memory implementation of the classic MWU method. ∗This research was supported in part by an SNF Project Grant (205121 163385).","inCitations":["2883ebf89f62972dcfad22ff8a2bf94082f65063"],"pdfUrls":["https://arxiv.org/pdf/1705.03414v1.pdf","http://doi.acm.org/10.1145/3087801.3087820","http://arxiv.org/abs/1705.03414","https://export.arxiv.org/pdf/1705.03414"],"title":"A Distributed Learning Dynamics in Social Groups","doi":"10.1145/3087801.3087820","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087801.3087820","venue":"PODC"},
{"entities":["Authentication","Average-case complexity","Best, worst and average case","Central processing unit","Coppersmith's attack","Cryptography","Digital identity","Entropy (information theory)","FIPS 140","FIPS 140-2","Fingerprint","Key generation","Laptop","Modulus robot","Parallel algorithm","Pretty Good Privacy","Public key fingerprint","Random number generation","Trusted Computing","Trusted Platform Module"],"journalVolume":"","journalPages":"1631-1648","pmid":"","year":2017,"outCitations":["1f527fed31971e07093695c128c10b4f3c20d109","664c10bdb3f0239b81ea34005eb3436e86d87565","1e9eb8716d46839b62dc0171ba8b7d020de8f97d","b6695347a10114b2697081446c7c83c2a421e33b","b4f88871e64da5e7832b42e47b02621b7d7392db","462afd7cc36165b3dd3d4605f74cbdb31edd7262","8e82b861f1ad68d7bb55a5e0938cf5c93d3355b5","d21f261bf5a9d7333337031a3fa206eaf0c6082c","2dbcc7077a01981679007eceac6c6659a1c18200","c04139f61c9a820dd9e59dd90f685a95810005bc","80c886fd6bcdd4605b22a42da8b21bc864ca357c","e3e49df9da4ee17c8ee37e7104177331bb14af99","3c338bb3dcc10b7c840b4dbf3ad32e8256313ee3","0e36d086e2f1d8b65423ef42c15a161347d1f5d9","8f0a271fd78ab1ee1ff1e84b62d26869ee469df1","0fb069a3b79552f0976476dde14931ab864242e4","4f93999383e7fdcfb0de8423789c98389aef8aef","61f18efffce84bf387ee5e431049b5e587a6ebbf","1f27e4b81d694baa47aa104b66ed63387b4e3fea","f066706e868e21e78c49ace256368a7672e80ec5","576bb017fceb5ed3ad2e96c0e9fc78ac2fcb47e0","70fce7bd4a0c23d742687c84ba4d1ec203742d2e","47579074866f0199ce3a7993f6e5609a2c4c2000","899a4fdc048102471875e24f7fecb3fb8998d754","82c874949964d858457666de3f2d38a9781645c8","ccfafaf2ccf0e3607829d449b8cf3c444e85405d","1b9fa65c6dc9c18171437a61cdd92f5b63a47738","519567268db1f5b9875bc70c9f43bf2e25d1f499","c246547bef08f6364e31ceef4907d0047157f52c","043a2dc8bddc2af1b03b320c1b9aef1f7ca01568","3142eb86ee0fddedb344b94302a33197b92976d0","7316e4252800c86157c4e4cd16a8110341c97348","95a032938444fe3e1ff6989ca9a026bf02a12ec7","85fd685efb93cfc880b9b72977feed3a026176be","7c89fecabdb0ff4b5aae56149ea39520b781637e","582302da008255ff515f05c3242f750878725745","1f4d827da9b19e83b4fe750d04be54ded9c3a21c","d0c6841e9cf40ea3714b35eb3b709bc46ce050b0"],"s2Url":"https://semanticscholar.org/paper/0b978f224b8520c8e3d9b2eb55431262fcb16c05","s2PdfUrl":"","id":"0b978f224b8520c8e3d9b2eb55431262fcb16c05","authors":[{"name":"Matús Nemec","ids":["27746441"]},{"name":"Marek Sýs","ids":["2456438"]},{"name":"Petr Svenda","ids":["1804733"]},{"name":"Dusan Klinec","ids":["2720291"]},{"name":"Vashek Matyas","ids":["1805863"]}],"journalName":"","paperAbstract":"We report on our discovery of an algorithmic flaw in the construction of primes for RSA key generation in a widely-used library of a major manufacturer of cryptographic hardware. The primes generated by the library suffer from a significant loss of entropy. We propose a practical factorization method for various key lengths including 1024 and 2048 bits. Our method requires no additional information except for the value of the public modulus and does not depend on a weak or a faulty random number generator. We devised an extension of Coppersmith's factorization attack utilizing an alternative form of the primes in question. The library in question is found in NIST FIPS 140-2 and CC~EAL~5+ certified devices used for a wide range of real-world applications, including identity cards, passports, Trusted Platform Modules, PGP and tokens for authentication or software signing. As the relevant library code was introduced in 2012 at the latest (and probably earlier), the impacted devices are now widespread. Tens of thousands of such keys were directly identified, many with significant impacts, especially for electronic identity documents, software signing, Trusted Computing and PGP. We estimate the number of affected devices to be in the order of at least tens of millions.\n The worst cases for the factorization of 1024 and 2048-bit keys are less than 3 CPU-months and 100 CPU-years on single core of common recent CPUs, respectively, while the expected time is half of that of the worst case. The attack can be parallelized on multiple CPUs. Worse still, all susceptible keys contain a strong fingerprint that is verifiable in microseconds on an ordinary laptop -- meaning that all vulnerable keys can be quickly identified, even in very large datasets.","inCitations":["e2295305261c65fc85a9aec00a662259a183eb49"],"pdfUrls":["http://doi.acm.org/10.1145/3133956.3133969","https://crocs.fi.muni.cz/_media/public/papers/nemec_roca_ccs17_preprint.pdf","https://acmccs.github.io/papers/p1631-nemecA.pdf"],"title":"The Return of Coppersmith's Attack: Practical Factorization of Widely Used RSA Moduli","doi":"10.1145/3133956.3133969","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3133969","venue":"CCS"},
{"entities":["Algorithm","Cluster analysis","Ground truth","Kernel (operating system)","Korea Computer Center","Linear separability","Simulation"],"journalVolume":"","journalPages":"157-166","pmid":"","year":2017,"outCitations":["2d37c82d7b8c338a18f356410ab60ecc9deaef7d","7abd4a611ce093f6089d36406e2a0fa774048a5f","6cc33fba4ffdf8e54522a0623403ab4843e75a6a","555c061d713293fe404f9ef6e0f7e921e552bf35","82544d04b642931ae6233b9f37c8e8c44fc95c35","848d1844b8b4923544ff2146cbac1655684f61fb","5d76202ebe37936b4c3796d9cbbe7be5b60f93d0","47f5f740e225281c02c8a2ae809be201458a854f","1a8f0886649ebda38dd09a81a06a18ceef3c3833","10df69205ff0e95bc0720d285165ce5d7d693805","291393c0ef39323726c121b2260658e93e7a5b2b","e0d2861a9022667a93a8a0573d44f238f7c3a027","1f319dcfd70b5d8afdd2ebf5551ae3fbdee01ff8","286a3bd498eb680b2bee37c7bc447486d1263ca9","3b1d68c036947f17def72a11e9f7c9f2200ae791","5db4e06712ad4dfa8a6a9f23e8268c76cc046282","01c7b980daabb6b8e4ea1ff4527f968ec937c044","f6f75ba91b1bb1a5049b34a7e3e2527bf45b2fb0","0fddb1a0317b51183f7f045432861ec5170f63db","397306cada03c29ab9c3d5a7991a343cae92f2e3","073daaf4f6fa972d3bdee3c4e4510d21dc934dfb","12811b1225262d4c04e79f2e2fb1c51a83762574","45b319c92c5ab92875205b41eae72a8e7cc56453","87907b823bfbfb4e3f52aae32c66bb4691ef1eff"],"s2Url":"https://semanticscholar.org/paper/8be55825f346e7114b1df14b09cd9e767d7a663c","s2PdfUrl":"","id":"8be55825f346e7114b1df14b09cd9e767d7a663c","authors":[{"name":"Xiao He","ids":["2183875"]},{"name":"Thomas Gumbsch","ids":["32474239"]},{"name":"Damian Roqueiro","ids":["2733826"]},{"name":"Karsten M. Borgwardt","ids":["1704422"]}],"journalName":"2017 IEEE International Conference on Data Mining (ICDM)","paperAbstract":"Clustering results are often affected by covariates that are independent of the clusters one would like to discover. Traditionally, Alternative Clustering algorithms can be used to solve such a problem. However, these suffer from at least one of the following problems: i) continuous covariates or non-linearly separable clusters cannot be handled; ii) assumptions are made about the distribution of the data; iii) one or more hyper-parameters need to be set. Here we propose a novel algorithm, named Kernel Conditional Clustering (KCC), whose objective is derived from a kernel based conditional dependence measure. KCC is parameter-light and makes no assumptions about the cluster structure, the covariates, or the distribution of the data. On both simulated and real-world datasets, the proposed KCC algorithm detects the ground truth cluster structures more accurately than state-of-the-art alternative clustering methods.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICDM.2017.25"],"title":"Kernel Conditional Clustering","doi":"10.1109/ICDM.2017.25","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICDM.2017.25","venue":"2017 IEEE International Conference on Data Mining (ICDM)"},
{"entities":["Algorithm","Computer data storage","Dynamic random-access memory","Non-volatile memory","Scalability","Volatile memory"],"journalVolume":"","journalPages":"58:1-58:14","pmid":"","year":2017,"outCitations":["33e64874996ac6d163e4e5a97e28b617de7cc0f5","2092d64f8d99ab8cc5b353bbc3dddf4186bcb461","03e93625d185c0ac144c97fdf269b5ae5f38351e","4d4c9c4a8ea86c4c25a2f308962ba0231b33af02","5f7c6e456216a2741702ddc2e18cd7f740d5a962","2b8f8cf8b74491616dc8734d10b91c9182926c54","3d2dfe972be7a60937df97bd309b423726375cb4","e885f898d8417fc7c2bfb030a57d397ff023c41a","a459d11e7fff61004dd392806f27317c16ce6696","05ae5121cfc7c101d72f70ee0e7a5f938f8140f1","d7203f317b37d565ab54b6a48ef13ded3777eb78","2fc8a439f0f73462f875870c403c90ea1fb99e41","10d8afea57c8f159c4eb2664a40c8fb859acefef","ddfe7c78115c3a610c0ad64691791ce463162282","40718dab3e261c2456c3576d15dd0105f1e2e4e2","1bf91711b94e507c62d91c79e72efcee5d21f627","2a660e81e6501ec3489d962fe87448ecf277237f","99e5ada094ca94d4d6dba82306cd15c1a0b3209a","f5d58ccdd242c9a1fae93ab8a575cb3220cb89a0","068d0b393db03678ea1d346ee01871e91e88c560"],"s2Url":"https://semanticscholar.org/paper/65c708cbfcad01f2410ac68ff0b1315163fd8a37","s2PdfUrl":"","id":"65c708cbfcad01f2410ac68ff0b1315163fd8a37","authors":[{"name":"Kai Wu","ids":["36960048"]},{"name":"Yingchao Huang","ids":["11833602"]},{"name":"Dong Li","ids":["1678390"]}],"journalName":"","paperAbstract":"Non-volatile memory (NVM) provides a scalable and power-efficient solution to replace DRAM as main memory. However, because of relatively high latency and low bandwidth of NVM, NVM is often paired with DRAM to build a heterogeneous memory system (HMS). As a result, data objects of the application must be carefully placed to NVM and DRAM for best performance. In this paper, we introduce a lightweight runtime solution that automatically and transparently manage data placement on HMS without the requirement of hardware modifications and disruptive change to applications. Leveraging online profiling and performance models, the runtime characterizes memory access patterns associated with data objects, and minimizes unnecessary data movement. Our runtime solution effectively bridges the performance gap between NVM and DRAM. We demonstrate that using NVM to replace the majority of DRAM can be a feasible solution for future HPC systems with the assistance of a software-based data management.","inCitations":[],"pdfUrls":["https://arxiv.org/pdf/1705.00249v1.pdf","http://arxiv.org/abs/1705.00249","http://doi.acm.org/10.1145/3126908.3126923","https://arxiv.org/pdf/1705.00249v2.pdf"],"title":"Unimem: runtime data managementon non-volatile memory-based heterogeneous main memory","doi":"10.1145/3126908.3126923","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126923","venue":"SC"},
{"entities":["Algorithm","Directive (programming)","FLOPS","Graphics processing unit","I/O bound","Message Passing Interface","One-way function","OpenACC","Sandy Bridge","Speedup","Supercomputer","Titan (supercomputer)"],"journalVolume":"","journalPages":"224-233","pmid":"","year":2017,"outCitations":["aef1c6ce4518775e948c7a906bdf6aaa85dcb6b2","47f05344d0d5fd252ebf645dddb8a1c5118cffc6","2566acc500a8f013610d306bea7a8f548930dfed","2f3c8e4bb0a738aecfad51bdff7dc75a4fea28fd","6386e607ca48fbbf37f059482497bb552c1a121a","3656e1298cdadf5bdb17b06d541f79c9bc40ef06","d2ae293327f4fd6fb33553fdc30238f77def1ff1","548c89d5c18e8845598a7c117484abe86dfb795d","9edab79d681bae0071aa784328b0ce134d909c10","2bb29fce377e1ec9024ea7c45fd40fa178922602","069ec88e2d30784746ab2224bc096e494c745382"],"s2Url":"https://semanticscholar.org/paper/b46e108dcecf012909fe3366e35e31a4d3bbc2b7","s2PdfUrl":"","id":"b46e108dcecf012909fe3366e35e31a4d3bbc2b7","authors":[{"name":"Kshitij Mehta","ids":["37112455"]},{"name":"Maxime R. Hugues","ids":["40389252"]},{"name":"Oscar R. Hernandez","ids":["32288862"]},{"name":"David E. Bernholdt","ids":["1785240"]},{"name":"Henri Calandra","ids":["3329218"]}],"journalName":"2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS)","paperAbstract":"One-Way Wave Equation Migration (OWEM) is a depth migration algorithm used for seismic imaging. A parallel version of this algorithm is widely implemented using MPI. Heterogenous architectures that use GPUs have become popular in the Top 500 because of their performance/power ratio. In this paper, we discuss the methodology and code transformations used to port OWEM to GPUs using OpenACC, along with the code changes needed for scaling the application up to 18,400 GPUs (more than 98%) of the Titan leadership class supercomputer at Oak Ridget National Laboratory. For the individual OpenACC kernels, we achieved an average of 3X speedup on a test dataset using one GPU as compared with an 8-core Intel Sandy Bridge CPU. The application was then run at large scale on the Titan supercomputer achieving a peak of 1.2 petaflops using an average of 5.5 megawatts. After porting the application to GPUs, we discuss how we dealt with other challenges of running at scale such as the application becoming more I/O bound and prone to silent errors. We believe this work will serve as valuable proof that directive-based programming models are a viable option for scaling HPC applications to heterogenous architectures.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/IPDPS.2017.82"],"title":"One-Way Wave Equation Migration at Scale on GPUs Using Directive Based Programming","doi":"10.1109/IPDPS.2017.82","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IPDPS.2017.82","venue":"2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS)"},
{"entities":["Decision support system","Hoc (programming language)","Requirement","Scalability"],"journalVolume":"","journalPages":"179-187","pmid":"","year":2017,"outCitations":["35f00eb1d7662ebb298d9128b3f9eb8263e8578f","062d84d3b29c07bb936a17ccf7cc6ac17bccbebe","a63b5fd83511a0081521d27af31687f94d7ee04a","a11c69a6331cd1c1e13dc43335c22bdf6f6aab24","208aee805004d575035284b1c232209e9fa26b0e","a8385230a613ee42aa927b41b121bb2cf2ba9305","8a33c47c2a3f0e46dbb30f5203b6a1c6d8fefd8f"],"s2Url":"https://semanticscholar.org/paper/b21d5b0e2610a06054f16b2baade8a765ade1623","s2PdfUrl":"","id":"b21d5b0e2610a06054f16b2baade8a765ade1623","authors":[{"name":"Ate Penders","ids":["1837620"]},{"name":"Ana Lucia Varbanescu","ids":["1784556"]},{"name":"Gregor Pavlin","ids":["2051828"]},{"name":"Henk J. Sips","ids":["1754743"]}],"journalName":"","paperAbstract":"Many situations in the security domain require decision-making based on complex data, i.e., many variables which need to be taken into account before adequate decisions can be made. For example, in a surveillance scenario, the size and complexity of the area of interest, the mix of objects, and the unexpected behavior of suspects are just a few examples of complex variables to be analyzed in the process. Existing decision support systems provide some analysis, but are typically limited in the complexity they can handle. Therefore, users end up with simplified models which often suffer in the accuracy of their decisions and, ultimately, may lead to incorrect decisions. In this work, we present a framework that can scale to cope with the complexity and time requirements of real-world scenarios, while remaining flexible to handle the ad-hoc adaptation to the situation. We discuss the challenges and solutions for such a scalable and flexible system, and validate it using a target tracking scenario in urban environments of different sizes.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3030207.3044532"],"title":"A Performance-centric Approach for Complex Decision Support","doi":"10.1145/3030207.3044532","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3030207.3044532","venue":"ICPE"},
{"entities":["Best-effort delivery","Central processing unit","Interference (communication)","Limiter","Optimization problem","Parallel computing","Particle swarm optimization","Program optimization","Provisioning","Quality of service","Requirement","Resource contention","Stream processing","Swarm intelligence"],"journalVolume":"","journalPages":"137-146","pmid":"","year":2017,"outCitations":["ce91b0ca3b88bd0464f5e7ca7564ee84ed7b371c","fcd61f5508b15f7369258ae0d0db01eacf399f7b","fbafa098c81a5c5b7f5dd5ef0d985f96009c91a0","2831b316e1f669f456aad81d1a51f0fd0bd44fde","478fbef8568a021c3d91c13128efa19ad719dd88","2f7f5d0e989c74d6279e2620e10e8d0b0c021cb7","15a51835f498825a82cfd8604e81d5cf41462e4d","2f919f99bf5b6d5667968c318b62d7335814ceff","04afd5f18d3080c57d4b304dfbd1818da9a02e8e","1fad99d25da3a4894915941752c6fb50dcd2d8ae","7ec834a37986fd8206a16a4f0143ad68cb0e58bb","3e19046c665867bbe557685da60738a40738010a","9655b25a85ea2fd1b50cd9eb3c4e298aa15bb012","ad62c65d2c5d626f32ae9c5214d3d4b88348950b","d72515ff5c534a919bc55a1770d69b1c8298b3f7","6109c80c0314e458c426e63e2971221fd3108c91","544afa259d6dfe0214f029a9fa515dd0482dbba2","bf82f0b0cf448b18fec979d25368c6cd9c04ce0c","8ff24b26e23ced3f93893d58687c74282f18d73a","b1582e2a952924fecb86a8baa7f5e90902c3bbfb","4f17119eaa541f64f6ae9be2a0b6e30de70fe421","6560d5255cfa785b89b5b7e851b78db5fefeb2fd","4a520c1818fc7ca560331234f6bee68d4d8bd302","0ef1dd03db41de69165075562a051021a186c230","0fc6c9dcd7a850e7a0d3796d32e6771353154fd9","034e026c17a03107ff1bd92f90413e7911108df6","1833dee660500dd104ca84d99600b70c2479ba3c","689daac32ba52ad5d72178fd4d5e093fb9501132","070f03f5e8b016628903c56a0011e810d0914d73","dc2df2048d8da76627d7c821b72d6a306037fd25","8e4b845da0ad9d106a0a7c46a9335b972ef2b187","7a978f2902460e732c50c36a171deb11733df1fc"],"s2Url":"https://semanticscholar.org/paper/74944a6253c74d0f160996db5233960257c0815b","s2PdfUrl":"","id":"74944a6253c74d0f160996db5233960257c0815b","authors":[{"name":"MohammadReza HoseinyFarahabady","ids":["12212141"]},{"name":"Albert Y. Zomaya","ids":["9392149"]},{"name":"Zahir Tari","ids":["1699399"]}],"journalName":"2017 IEEE International Conference on Cluster Computing (CLUSTER)","paperAbstract":"This paper addresses the shared resource contention problem associated with the auto-parallelization of running queries in distributed stream processing engines. In such platforms, analyzing a large amount of data often requires to execute user-defined queries over continues raw-inputs in a parallel fashion at each single host. However, previous studies showed that the collocated applications can fiercely compete for shared resources, resulting in a severe performance degradation among applications. This paper presents an advanced resource allocation strategy for handling scenarios in which the target applications have different quality of service (QoS) requirements while shared-resource interference is considered as a key performance-limiting parameter.To properly allocate the best possible resource to each query, the proposed controller predicts the performance degradation of the running pane-level as well as the window-level queries when co-running with other queries. This is addressed as an optimization problem where a set of cost functions is defined to achieve the following goals: a) reduce the sum of QoS violation incidents over all machines; b) keep the CPU utilization level within an accepted range; and c) avoid fierce shared resource interference among collocated applications. Particle swarm optimization is used to find an acceptable solution at each round of the controlling period. The performance of the proposed solution is benchmarked with Round-Robin and best-effort strategies, and the experimental results clearly demonstrate that the proposed controller has the following advantages over its opponents: it increases the overall resource utilization by 15% on average while can reduce the average tuple latencies by 14%. It also achieves an average 123% improvement in preventing QoS violation incidents","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/CLUSTER.2017.21"],"title":"QoS- and Contention- Aware Resource Provisioning in a Stream Processing Engine","doi":"10.1109/CLUSTER.2017.21","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLUSTER.2017.21","venue":"2017 IEEE International Conference on Cluster Computing (CLUSTER)"},
{"entities":["Algorithm","Binary image","Central processing unit","Dilation (morphology)","Distance transform","Erosion (morphology)","Euclidean algorithm","Euclidean distance","GeForce","Graphics processing unit","Image processing","List of Intel Core i7 microprocessors","Map","Parallel algorithm","Pixel","Throughput","Voronoi diagram"],"journalVolume":"","journalPages":"362-371","pmid":"","year":2017,"outCitations":["8796f70bd964595cdf60b59d9104d660525f890e","f2aedfb0a7e607970d397e68f131fa95d381b18c","1939555452e0de80a611290cba3e42901d5aee2a","88a3850209ccd4dd07fdbfebe1d6b56175c5c622","4defd483b358edeedac1448fcf3d800fa98e7338","8ee61ea2b67d8e333711a387e1a364b388cdcf44","58780e9b868e68c22967d4e9d0eb37877042b5df","f6ff5b8279f1ae6044b18bc280b39dfeadf651c2","cab8c10edafa65ffa5279ceeb75dfca524623696","936d209476d403803ef1765bb72147cab1e1b61e","1253a7ff79448870ab446cc665026eda05e906f7","6f7e07896da0485340aac6f92cc4473f102929a8","1e99cdb73ed27af76dde0e491fc4bdae3b52317d","94bca10f739f0f212b18a775634a69d416dc137e","c87017332538bcf6628a8f9a6666dff78fb1e205","29ed822ae8d5c317d3959e8fd3b3b4c7a9b455ac","1194a5ae88aa01f8fd33d8d6b9a210b0528dc8eb","0044e60edafe1ce1e6cf6eec799b653f0c2d6196"],"s2Url":"https://semanticscholar.org/paper/d2890248531f010563b6fe9f43b141ceaf5f91da","s2PdfUrl":"","id":"d2890248531f010563b6fe9f43b141ceaf5f91da","authors":[{"name":"Takumi Honda","ids":["2848385"]},{"name":"Shinnosuke Yamamoto","ids":["24670697"]},{"name":"Hiroaki Honda","ids":["2937023"]},{"name":"Koji Nakano","ids":["32844550"]},{"name":"Yasuaki Ito","ids":["2231750"]}],"journalName":"2017 46th International Conference on Parallel Processing (ICPP)","paperAbstract":"The complete Voronoi map of a binary image with black and white pixels is a matrix of the same size such that each element is the closest black pixel of the corresponding pixel. The complete Voronoi map visualizes the influence region of each black pixel. However, each region may not be connected due to exclave pixels. The connected Voronoi map is a modification of the complete Voronoi map so that all regions are connected. The Euclidean distance map of a binary image is a matrix, in which each element is the distance to the closest black pixel. It has many applications of image processing such as dilation, erosion, blurring effects, skeletonization and matching. The main contribution of this paper is to present simple and fast parallel algorithms for computing the complete/connected Voronoi maps and the Euclidean distance map and implement them in the GPU. Our parallel algorithm first computes the mixed Voronoi map, which is a mixture of the complete and connected Voronoi maps, and then converts it into the complete/connected Voronoi by exposing/hiding all exclave pixels. After that, the complete Voronoi map is converted into the Euclidean distance map by computing the distance to the closest black pixel for every pixel in an obvious way. The experimental results on GeForce GTX~1080 GPU show that the computing time for these conversions is relatively small. The throughput of our GPU implementation for computing the Euclidean distance maps of 2K &#xd7; 2K binary images is up to 2.08 times larger than the previously published best GPU implementation, and up to 172 times larger than CPU implementation using Intel Core i7-4790.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICPP.2017.45"],"title":"Simple and Fast Parallel Algorithms for the Voronoi Map and the Euclidean Distance Map, with GPU Implementations","doi":"10.1109/ICPP.2017.45","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICPP.2017.45","venue":"2017 46th International Conference on Parallel Processing (ICPP)"},
{"entities":["Data center","Heterogeneous System Architecture","Hypervisor","Memory management","Operating system","Server (computing)","Virtual Machine Manager","Virtual private server"],"journalVolume":"","journalPages":"521-534","pmid":"","year":2017,"outCitations":["b0cd27efc4c73578e7fbabebfca173e00ac73574","4002b5a203c6ed8ba82ef916f6ec94f1bb1d38aa","4d15f18a3be26bbd0e73a67550d36a95ca96c651","69652a30c1badf6a4c21006f3ec8da3de976cbaf","4c689148ee5e9d6d116f6babbfab21bf2116802e","85d555f7ce19740b4fc656ff797623c6e1513018","1b62e2f7ac7a8d3c13773dfa23d05f8ab82b1f23","49b73fc335cb97c0b52b283ce236a4d4eb2b99c9","5f7c6e456216a2741702ddc2e18cd7f740d5a962","d9043a6c844905687ac72054d83d7680a82ece9d","40c5050e470fa0890e85487e4679197e07a91c09","69b8c7f168fdb610471c473b9c2f20daaffe052c","158ebe313a72857c5534a313f3ec0e413593b732","f3325ace129dec914966f9894d9f412e5e04bdc2","484e521bcac4953b4d0ab982a7ab28e514c146e4","242b5b545bb17879a73161134bc84d5ba3e3cf35","2ae3ac3f7463f838c38e6ca250ca294e813529f2","a95436fb5417f16497d90cd2aeb11a0e2873f55f","3ac6671a0c61544b9dab543b116eccdaccc6469e","24e8be45a2b2a30a01b7e9f1502e7bd6a7870e7a","e4aed18e1b965f90a86b57a787c52af44a8c20a4","7fc1dddbc4b958d416e8f666737fc6a163eae2b4","544c1ddf24b90c3dfba7b1934049911b869c99b4","40718dab3e261c2456c3576d15dd0105f1e2e4e2","2fee80acb6f7b4172622e0f40d350339ca4e3dc9","823116269044ab4c713373c66c7da3fcb495b459","983399a958ca0e6b26886e441ab5c4ddba836fc5","36de396ee9d1c9991e44c01be35e5206d79c3328","a6cc2def07a1880a81003449e0f0f901da597b18","08b6730b10503a0cf1ba95307e5e2a45b0111cf1","19554445f1f3ea7b54be06a74a0d0840ade02be5","2988e34168fa91398fa397baf823af2063893e9c","24dc8d1de7e78ab100d2d83cbdf1390ddb9234c9","31c299532c42106b71e909c2fc0fc7472c39ce90","6f93e0325e577f49f4bed46a2adcfee4a649dc83","1154b2fd6fb913b02eb6f64f5287a6b75a506e64","32dc6016338a2098147e5edbb72c7c5670f78133","24724ad8962a9e04eb496fddaefe9708f6960601","2fc8a439f0f73462f875870c403c90ea1fb99e41","c113513903d01df2c8aa59662f7149c3199ce59b","3bc9781415a954b2b2c0565ee8c6ef5abe560bfa","fc6f007082a7d15d6745687358f7e21e2ec9c57e","5cc3780286a223c5b27df8e21b20f0c8f538f571","0204f40221260d00c5ee63646560a40dcd7d97d1","89b11dc5ec54d088be960e305aa442ff565fbfd9","8b10b13fb495101d1e4eb768907cff05e3bd9315","cba130014e6cc590a09aaeca0590623b496f126b","98ab001452b8392bb0d0b2677cfb91281bad7708","33e64874996ac6d163e4e5a97e28b617de7cc0f5"],"s2Url":"https://semanticscholar.org/paper/e53f0135ec71672c78a58a8916f5b0bbcd6ec4e1","s2PdfUrl":"","id":"e53f0135ec71672c78a58a8916f5b0bbcd6ec4e1","authors":[{"name":"Sudarsun Kannan","ids":["33383407"]},{"name":"Ada Gavrilovska","ids":["1691551"]},{"name":"Vishal Gupta","ids":["1710803"]},{"name":"Karsten Schwan","ids":["1718471"]}],"journalName":"","paperAbstract":"Heterogeneous memory management combined with server virtualization in datacenters is expected to increase the software and OS management complexity. State-of-the-art solutions rely exclusively on the hypervisor (VMM) for expensive page hotness tracking and migrations, limiting the benefits from heterogeneity. To address this, we design HeteroOS, a novel application-transparent OS-level solution for managing memory heterogeneity in virtualized system. The HeteroOS design first makes the guest-OSes heterogeneity-aware and then extracts rich OS-level information about applications' memory usage to place data in the 'right' memory avoiding page migrations. When such pro-active placements are not possible, HeteroOS combines the power of the guest-OSes' information about applications with the VMM's hardware control to track for hotness and migrate only performance-critical pages. Finally, HeteroOS also designs an efficient heterogeneous memory sharing across multiple guest-VMs. Evaluation of HeteroOS with memory, storage, and network-intensive datacenter applications shows up to 2x performance improvement compared to the state-of-the-art VMM-exclusive approach.","inCitations":["88824f4400bf03caed2f99879e68f3543b214c92","e40c66c3888cb24b925057e722b0281b5695a2ee","9ab024dcc0f32c623e20c0344385e8d7d3c18150"],"pdfUrls":["http://doi.acm.org/10.1145/3079856.3080245"],"title":"HeteroOS: OS Design for Heterogeneous Memory Management in Datacenter","doi":"10.1145/3079856.3080245","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3079856.3080245","venue":"ISCA"},
{"entities":["Change detection and notification","Cubic function","FITS","Flip-flop (electronics)","Protocol stack","SPDY","Throughput","Web service"],"journalVolume":"","journalPages":"","pmid":"","year":2017,"outCitations":["0a62c0b8647804bb4247f6563f24488101952e9a","3d8fa14143e26d534a09a26b3e4dd3c6a83455c7","088a6aa4196456fc3d6415ddf7d5474bd4102f7a","b534337da8e86539f3e14eedabad7d473fdf3bde","0a6103c182ede82da9e726b1b50d8a2383bf418a","3bbffc0103e0dab4dd22c9234a831e17926fa1c6","45f8bf3c6bdf24aac09c45d114441f3b6fe23cbd","36ed5e0ca6d2023137094d04d56a34fe56915fa3","6aba884d517ab35a63e74da36d20207965eb7e0d","16d0a8ee484f4a34e1cdcda8a0c2453e2e962ada","143481d55d9f9d25e53f06a6afaf15feb7430c62","0ad4e891484031164b0f96f36874856d0ba5d532","065e1b5f59ccd2526117be9ec98c2df9e4172bea","5f1d959f1ea180d0612d5f0c8599d8b5e8c5d36d","533268c5e53e03760c0b0c39ce5ff6d3cb0da5e5","3711d6beb5c0c427d3306a3f979ae04968df2cc4","287e60321a08f8601161b8e79a6d9a3e5093d621","151a71cd659abdf5431ce1437968b72844055c7f","484db31fbaa7e71e33a82d3d5afe54c7c875feaf","08bb5149cc215c0714492b407145bbc93006f44c","2bce0f3e815c471702fb9db657914b6169098c2b","940989cf71be558d09c47aab670a0485c77cd216","7a59672b52480f653ab430284b91094e9093bd69","114f268992fcd5dccad6f55091445de06880bdb2"],"s2Url":"https://semanticscholar.org/paper/aba9a321a91fec94a60e5b21ed71099a91e68acc","s2PdfUrl":"http://pdfs.semanticscholar.org/cc98/82a64d6ff9af83c1eb558c251d447122b0fb.pdf","id":"aba9a321a91fec94a60e5b21ed71099a91e68acc","authors":[{"name":"Usama Naseer","ids":["34934599"]},{"name":"Theophilus Benson","ids":["2387791"]}],"journalName":"","paperAbstract":"The web serving protocol stack is constantly changing and evolving to tackle technological shifts in networking infrastructure and website complexity. For example, Cubic to tackle high throughput, SPDY to tackle loss and QUIC to tackle security issues and lower connection setup time. Accordingly, there are a plethora of protocols and configuration parameters that enable the web serving protocol stack to address a variety of realistic conditions. Yet, despite the diversity in end-user networks and devices, today, most content providers have adopted a “one-size-fits-all” approach to configuring user facing web stacks (CDN servers). In this paper, we illustrate the drawbacks through empirical evidence that this “one-size-fits-all” approach results in sub-optimal performance and argue for a novel framework that extends existing CDN architectures to provide programmatic control over the configuration options of the CDN serving stack.","inCitations":[],"pdfUrls":["https://www.usenix.org/conference/hotcloud17/program/presentation/naseer","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-naseer_052317.pdf","https://www.usenix.org/system/files/conference/hotcloud17/hotcloud17-paper-naseer.pdf"],"title":"Configtron: Tackling network diversity with heterogeneous configurations","doi":"","sources":["DBLP"],"doiUrl":"","venue":"HotCloud"},
{"entities":["Automatic vectorization","Large-scale Atomic/Molecular Massively Parallel Simulator","Molecular dynamics","Program optimization","Simulation","Supercomputer","Xeon Phi"],"journalVolume":"","journalPages":"61-78","pmid":"","year":2017,"outCitations":["013506e35e0d12a104b88008855d1f5276226b20","57d131b3917555f252283906bacc46318699e6a0","925f5c2797e05eb0e5f37649190194109b5971e6","3f1e4a6c488ca3dde71f32f150b2bb131a7ae1ee","6b5319282d300cd2534e01b53054b90151ab7d03","a4dac5f7a35fb4f480ea94880097fa4cf25ca963","9c92838a8da9dd2bb8729f274a312fdc52d9f099","b452135a11ff0afd2a11332cde390bf13215aad5","b58b1327d4c427de652346b8c00600315b984463","a4a49e65f59fcbb400ddb6778428ca9a81f34c79","3fbca995c07fa6b3742cdb129e68273c9ab3ed67","9c09dfaa4b72e59e4e2fa51181df4009e5f7344f","415c7835aa18984d92086edbb9d9937fcdd0a6eb","70302e07a5d51a7e330c11e61424f6a3beffa0ab","293ca9dec5a2eefc9ad0c4c157bcbdf04b836c3a"],"s2Url":"https://semanticscholar.org/paper/a9224aaff526781a0461eb8b7fd8594ebee02132","s2PdfUrl":"http://pdfs.semanticscholar.org/a922/4aaff526781a0461eb8b7fd8594ebee02132.pdf","id":"a9224aaff526781a0461eb8b7fd8594ebee02132","authors":[{"name":"William McDoniel","ids":["9555567"]},{"name":"Markus Höhnerbach","ids":["3161552"]},{"name":"Rodrigo Canales","ids":["2522777"]},{"name":"Ahmed E. Ismail","ids":["32193821"]},{"name":"Paolo Bientinesi","ids":["1766804"]}],"journalName":"","paperAbstract":"Molecular Dynamics is an important tool for computational biologists, chemists, and materials scientists, consuming a sizable amount of supercomputing resources. Many of the investigated systems contain charged particles, which can only be simulated accurately using a longrange solver, such as PPPM. We extend the popular LAMMPS molecular dynamics code with an implementation of PPPM particularly suitable for the second generation Intel Xeon Phi. Our main target is the optimization of computational kernels by means of vectorization, and we observe speedups in these kernels of up to 12x. These improvements carry over to LAMMPS users, with overall speedups ranging between 2-3x, without requiring users to retune input parameters. Furthermore, our optimizations make it easier for users to determine optimal input parameters for attaining top performance.","inCitations":[],"pdfUrls":["https://doi.org/10.1007/978-3-319-58667-0_4","http://arxiv.org/abs/1702.04250","https://arxiv.org/pdf/1702.04250v1.pdf"],"title":"LAMMPS' PPPM Long-Range Solver for the Second Generation Xeon Phi","doi":"10.1007/978-3-319-58667-0_4","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-58667-0_4","venue":"ISC"},
{"entities":["Algorithm","Computation","Cray XK7","Delaunay triangulation","Image analysis","Parallel algorithm","Routing","Scalability","Supercomputer","Titan (supercomputer)"],"journalVolume":"","journalPages":"191-200","pmid":"","year":2017,"outCitations":["cdd2e4f1edc9409bdfe18bea2077d1d6a747aa21","1991ec48e1ff4b273b96d3bf1f039c3b17b0a5c2","c04ff62fd8366fa57fb9a039a52e590470066f43","064da94eda53212c23db85261c9df55b01b9a9f1","a6ba7bf4a5ac756ebafb54dad644adbc7e30b76e","7ef754dae667c5a4c3ab8e51ffb66c7821e6cf4f","1817b7392a8ca41a4c16311ee0efd7676fb05747","bb99d9702431f286c5b324c4243edba8eabe5b36","b4611aadfb3d08a85a220e2b061a2c22c03b6bbb","949f0d4ea6d730f29aa11d42c061f3ddbd68888d","49e998c509fc536628c7fc9d28ba55693b8e82a0","445c01f4ecdf8559d150bb1aa656e800306e04a3","5faf588c2cee6aa549a5d7c88b67366ae2a49691","3329c9855e4743742062781d427a526df0a4a6b6","7bcc53f1baf3358517a602d856192faea9442c91","1d6e55cfb0a61ddd6cc326aeeac513f553e565c9","65b7c62555d2c3f5763651bff19ec6bf040ef5db","5aaf882f18185072b45c2bae0f8c1becea4d184d","f88d65fedc709e006289d905915952db26f0c8c6","f517454bea81d117ad9c9cecc68b21204aae881b","67dd1137c7c1704cba8514431b24fd5e831ba4e7","25a33619091b68865a8859c075c20d2a2da5fb3a","299bbe1f4f9b38e0308c81fe20b357a8908405e6"],"s2Url":"https://semanticscholar.org/paper/a1635f941451d7d378c00b8188eeb06c15a9af5b","s2PdfUrl":"","id":"a1635f941451d7d378c00b8188eeb06c15a9af5b","authors":[{"name":"Hari Sundar","ids":["2666202"]},{"name":"Parmeshwar Khurd","ids":["1777719"]}],"journalName":"2017 46th International Conference on Parallel Processing (ICPP)","paperAbstract":"We present parallel algorithms for computing cycle orders and cycle perimeters in relative neighborhood graphs. This parallel algorithm has wide-ranging applications from microscopic to macroscopic domains, e.g., in histopathological image analysis and wireless network routing. Our algorithm consists of the following steps (sub-algorithms): (1) Uniform partitioning of the graph vertices across processes, (2) Parallel Delaunay triangulation and (3) Parallel computation of the relative neighborhood graph and the cycle orders and perimeters. We evaluated our algorithm on a large dataset with 6.5 Million points and demonstrate excellent fixed-size scalability. We also demonstrate excellent isogranular scalability up to 131K processes. Our largest run was on a dataset with 13 billion points on 131K processes on ORNL's Cray XK7 Titan supercomputer.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICPP.2017.28"],"title":"Parallel Algorithms for the Computation of Cycles in Relative Neighborhood Graphs","doi":"10.1109/ICPP.2017.28","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICPP.2017.28","venue":"2017 46th International Conference on Parallel Processing (ICPP)"},
{"entities":["Attribute–value pair","CPU cache","Cache (computing)","Hit (Internet)","IBM System i","In-memory database","InnoDB","Kernel (operating system)","Key-value database","Linux","MySQL","Online transaction processing","User space"],"journalVolume":"","journalPages":"649-658","pmid":"","year":2017,"outCitations":["2ee01ab9aca4163d391bd29c2123d9be44b0e986","27bcb72519d77192da2b30eca4e1442c8f3637b1","08fa5e5935f8108340f1583845292cfa9401ccc1","540de0c91d7d834a41832eca28f0c5a7fd3885e4","2da760f90c3d2bf6598becdde9063093f488548c","43f1a17266420ec48edbacd0101dc607bf644ce2","0bcea4e03620eb323d990119a9d35c45a278023f","144b1ba05cb64b493858b665cc38374f3ef7e332","f02ae995020a9bf4d9ca251d0f35a9e9eb09cc8d"],"s2Url":"https://semanticscholar.org/paper/adbe2e7f4c58d978cba63554def44f8f6e7d3b17","s2PdfUrl":"","id":"adbe2e7f4c58d978cba63554def44f8f6e7d3b17","authors":[{"name":"Jiwoong Park","ids":["1890055"]},{"name":"Cheolgi Min","ids":["11018159"]},{"name":"Heon Young Yeom","ids":["1696005"]}],"journalName":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)","paperAbstract":"A large number of cloud datastores have been developed to handle the cloud OLTP workload. Double caching problem where the same data resides both at the user buffer and the kernel buffer has been identified as one of the problems and has been largely solved by using direct I/O mode to bypass the kernel buffer. However, maintaining the caching layer only in user-level has the disadvantage that the user process may monopolize memory resources and that it is difficult to fully utilize the system memory due to the risks of the forced termination of the process or the unpredictable performance degradation in case of memory pressure. In this paper, we propose a new I/O mode, DBIO, to efficiently exploit OS kernel buffer as a victim cache for user-level file content cache, enjoying the strengths of kernel-level cache rather than just skipping it. DBIO provides the new file read/write function calls, which enable user programs to dynamically choose the right I/O behavior based on their context when issuing I/Os instead of when opening the file. On the cloud key-value store workloads and the traditional OLTP workloads with the modified version of MySQL/InnoDB, DBIO improves the in-memory cache hit ratio and the transaction performance compared to both buffered and direct I/O mode, fully utilizing the user buffer and the kernel buffer without double caching.","inCitations":[],"pdfUrls":["http://dl.acm.org/citation.cfm?id=3101202"],"title":"A New File System I/O Mode for Efficient User-Level Caching","doi":"","sources":["DBLP"],"doiUrl":"","venue":"2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)"},
{"entities":["Adobe Creative Cloud","Allocation","Cloud computing","Electronic billing","Equilibrium","Interaction","Internet access","Jumpstart Our Business Startups Act","Nash equilibrium","Numerical analysis","Occupations","Queuing delay","Reaching","Responsiveness","Workload"],"journalVolume":"","journalPages":"244-254","pmid":"","year":2017,"outCitations":["44ebc762b91b43b85a04f813b94e2bccaaad1ed0","65d49f6bebb1e3b38181ba9f5970329e2d235b58","f1ead3de7d7d0fbe487ee3a778d7cc057cb967ce","1b172de031a4a6261dce37e78b11744b06466652","0310519af75e062e5c7f300014c539ee6dcc78b4","78e009cc05a6a832106d5ca6802ce56bef6b247f","847ee34f0d55abb4f1afd4dc6c8416f9b7907dd2","1862c29bc091a17e43952046811b5d129dda87c7","9f6409bb45430257631e57e709b6fef8c2f9b29d","40df5493fdbec13cc59c0ee360c57ef37bc360cb","3a5769cb8406fb0aeb5c0f12bdf9f236e4767536","80bc71f97c349479f8e8236e4cd0dade7ee12eb8","453fded1ab86ed9d9d90ff3ff83a4faa493d3db2","8d7e85f26ddcde285af02c5c2a22ec4305f1b924","0de8959c811bbb706013614c1a46cb70600f95a5","2130d843cd8751db5fc3b33fe948c987a6fd8a44","7209911a20740247559ce27a387a4b52699057db","973ca1ec06c56c4587ad13db8a1b39d560ca083d","1f809df0c69e4962caf2fd85a1fc59b60f640a03","2986d42d9fe1f4a313f9445d592dd964eb84ef47","08632fe2b934ed15d3499e7321282c81adc2c390","ad26dc4a3dedc00783504f1b8cb56928b6b198dd","4cead48e2eac91560105871b78268e3164eb382b","5cf67ba15bf2c28ce72508ed7eb4ff98ca1caffc","b57c26a3bba6c7cace8eb63cd5f8935039a08b77","202a6dbe5247079ddd94f8a0048ce1a3e97cf346","0312b3ae8749ad41c7dba1d2ce2364b1e8557357","9ec4750c2e2c8ba1f24c3d4b05f9dd86fceb7ba5","514d66673f5fc8a65db023806f49628d81077ec7","d3145ed8acf2c9a9ff9274d60e094d51f693d0f2","b8b9303bbc02ee6217d5f1c4119c8a467bdfa51d","490c88f05089bd708d8fa7a5aa01b50471ed7ee9","520d87e06ac5ed55ff5ca2d37430083de90606d2","2902f38af9f9b478b3a6b99020b812f8b60cb7b1","0dae1dc977b9943ed1216cf86853df3be2510b80","05be0db01d70bcce9530b462ab2368f9e15127d9","2cf62c096c6e3531571a78f58252e4cb9fcd6568"],"s2Url":"https://semanticscholar.org/paper/e7657e157fdd74d20de4ed03a5a7f9b8227acdba","s2PdfUrl":"","id":"e7657e157fdd74d20de4ed03a5a7f9b8227acdba","authors":[{"name":"George Kesidis","ids":["1809899"]},{"name":"Uday V. Shanbhag","ids":["1729535"]},{"name":"Neda Nasiriani","ids":["2772186"]},{"name":"Bhuvan Urgaonkar","ids":["1684443"]}],"journalName":"2017 IEEE 25th International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (MASCOTS)","paperAbstract":"A significant fraction of the operational expenditures incurred by cloud service providers relates to their networking (Internet access) and electricity consumption. Both depend on the peak-demand over the billing interval. In the future, cloud services providers may in turn recoup these costs from their long-term customers through peak-based pricing. We explore two different methods for the cloud provider to recoup this charge: (i) equal allocation and (ii) proportional to usage allocation. Furthermore, we consider multiple strategic tenants whose active demand response to cloud price settings jointly depends on job responsiveness (modeled as queueing delay of admitted jobs) and lost/shed workload (due to excessive delay). Under certain conditions, we prove existence and uniqueness of Nash equilibria for regimes (i) and (ii). Due to nonconvexity in the utility (or cost) functions, existence statements require leveraging potentiality arguments while uniqueness statements rely on imposing further convexityrequirements. The resulting Nash equilibrium is parametrized by the price per unit demand, which may be strategically set by the cloud to maximize its revenue subject to tenants reaching a Nash equilibrium. We model the resulting interactions as a Stackelberg game between the cloud and a set of tenants. A relatively general existence statement is provided for the Stackelberg equilibrium under regime (i). For a special case of regime (ii), the unique Stackelberg equilibrium is characterized. Finally, we provide a numerical study for such a framework using real-world peak-based prices from an electric utility and demands given by Google workload traces.&#x0022;","inCitations":[],"pdfUrls":[],"title":"Competition and Peak-Demand Pricing in Clouds Under Tenants&amp;#x2019; Demand Response","doi":"","sources":[],"doiUrl":"","venue":"2017 IEEE 25th International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (MASCOTS)"},
{"entities":["Apache Spark","Data-intensive computing","Intermediate representation","Libraries","Library","Library (computing)","Machine learning","NumPy","Parallel computing","Program optimization","SQL","Structured Query Language","TensorFlow","Workload","pandas"],"journalVolume":"","journalPages":"","pmid":"","year":2016,"outCitations":["676e50a4d2141ae66a0d2aafcf79c8c989fcce33","09c5293b647fca40fde28ac6c38737f07e873e41","2194c3460ab71f3826db00b045b2ae590c753319","8925a2067468c7ae6b2b3556487a362725cb55be","669a754df3cffa8f52bbfad60c44f8ae8aa83183","45a91b4d9bcb2178c05e95685aca2f2aac94cdb0","73f072ead051f3f3c764b31e88f3a3aeb0373f7b","244f7c483b1035144f04f7c58f20c3f806d3f1b3","080ed793c12d97436ae29851b5e34c54c07e3816","165d9bd7e9c4a030b09cf21e35ea0bf96090d8cb","4954fa180728932959997a4768411ff9136aac81","0c325c32039656541760b2d8f02be4636e026785","b513711621e81d0abd042e0877ca751581a993f5","4cf0f575677146eeb002487e56abc2cf7cafe591","831cc6d9b7a333b38d34d923b52aed438e90ee1e","36f49b05d764bf5c10428b082c2d96c13c4203b9","7b1157db688dd5c8b9df1f42caa76d4790fdf2c8","74241ccbd1045cf937ad8aeb44ed4e22bcdb9ea1","2b0cc03aa4625a09958c20dc721f4e0a52c13fd0","a2f2662b1d3510af048a713b2690ff6d720ebdda","213a719cdecdd2e3a449c736db0d4449476ab323","bbb9c3119edd9daa414fd8f2df5072587bfa3462","5b3ac250f3f50073f6234cafa6fc1a233cc624bb","62ea7fbdc3349f4fe8f12f098f1ce4a746faa5db","ef62e60b81317a24dbeb8ded6dc4a8ed89b776a8","bb4cf037d8a5adbb3f08a3405d926d022b8c27c5","b2bf34c0c0007145a389e014b7ddaa3daa76f332","7ead08393fa2000ea03bb1cc1e3e6e0ac991aac6"],"s2Url":"https://semanticscholar.org/paper/4416236e5ee4239e86e3cf3db6a2d1a2ff2ae720","s2PdfUrl":"http://pdfs.semanticscholar.org/4416/236e5ee4239e86e3cf3db6a2d1a2ff2ae720.pdf","id":"4416236e5ee4239e86e3cf3db6a2d1a2ff2ae720","authors":[{"name":"Shoumik Palkar","ids":["2642390"]},{"name":"James J. Thomas","ids":["34998803"]},{"name":"Anil Shanbhag","ids":["4012116"]},{"name":"Deepak Narayanan","ids":["22252150"]},{"name":"Holger Pirk","ids":["2436756"]},{"name":"Malte Schwarzkopf","ids":["1962485"]},{"name":"Saman Amarasinghe","ids":["35192281"]},{"name":"Matei Zaharia","ids":["1901948"]}],"journalName":"","paperAbstract":"Modern analytics applications combine multiple functions from different libraries and frameworks to build increasingly complex workflows. Even though each function may achieve high performance in isolation, the performance of the combined workflow is often an order of magnitude below hardware limits due to extensive data movement across the functions. To address this problem, we propose Weld, a runtime for data-intensive applications that optimizes across disjoint libraries and functions. Weld uses a common intermediate representation to capture the structure of diverse dataparallel workloads, including SQL, machine learning and graph analytics. It then performs key data movement optimizations and generates efficient parallel code for the whole workflow. Weld can be integrated incrementally into existing frameworks like TensorFlow, Apache Spark, NumPy and Pandas without changing their user-facing APIs. We show that Weld can speed up these frameworks, as well as applications that combine them, by up to 30×.","inCitations":["dfa37e1ad351ae889502fb704cc93f4a77c1c642","391a6a423e06b0767e9fc9df4f43c5533c0ab662","01c71603c2e9c42eb3141dd32d0ee564fb5274b4","fa099d45212e0b0e6486b6bd378e6f4fd06c222d","2b914583df10b31c4b5d80a4bcf731a265e6ab7f","416a3348da1114e26171a50694b66f8c35024571","61d42fafe09329b00bba177f444567be51444dc2","c48dc6a8549898ee389432e7072a6c989727aed2","3b0143befcc8a02cb4745f47260402d2ff47843c","7c4c34ab0cb5b9a02b548593533ec108f754daa4","95228c931949b3d6cb709ba36a53f419fa7b8253","1156373cdb17608780bd2c00fff26bcbeeb2189c","a66fc8cca220b7ac885a03745836899c037346d8"],"pdfUrls":["https://cs.stanford.edu/~matei/papers/2017/cidr_weld.pdf","http://groups.csail.mit.edu/commit/papers/2017/cidr_weld.pdf","https://people.csail.mit.edu/malte/pub/papers/2017-cidr-weld.pdf"],"title":"Weld: A Common Runtime for High Performance Data Analytics","doi":"","sources":[],"doiUrl":"","venue":""},
{"entities":["Android","Best practice","Experience","Image stitching","Integrated development environment","Next-generation network","Plug-in (computing)","Secure coding","Software documentation","User interface"],"journalVolume":"","journalPages":"1065-1077","pmid":"","year":2017,"outCitations":["16cdcedec9a5fc51d89591034908b8580b911b7c","4fd643182643a1cfe6aec3ce11dd5292814a4e6f","ea93642d3394b0ba1d5144835ce747a74457fe4f","4a8da50795fd4196f3aa28d1c095f84c0a40fe3d","48fc8f1aa0b6d1e4266b8017820ff8770fb67b6f","c93057aec13d8b1557ef1f6f68331cd3aef280c8","4c795976cb13e2c9970efb28639d066c36f42c94","a851b38c914b5c005e2be8b43c2d17c98e09f7c1","b243c5c5fe90cb485d06ba6e89c2b977d51bcc39","03a613951421cf67237d5278d6bf3702a26da9aa","3436344f8c0b5faf596bdf8654dc8998070d2b8b","2ba16a91a0fa1cdd06dec7b0df8f7808e7d9833e","114580bca9932bfc4e0018886646751adfac724f","451f72230e607cb59d60f996299c578623a19294","9d0d597efd386c9c05698291cf39f5a09c030a0f","a9977198d07f5fede50a81236d7806868f4c9a27","34a720114bdc38720c9660b0ce2a372e7bfbe59f","a1b4ad9a9d2d8f787676205ed8663623cc1cd793","1a0ca2cf71616fa492ebe611f1d83261d2ecf052","23fa7b866a1b1fee7bb71c8b5a9235cca7120bbc","f60628636b64c187db1f106823f5af5730b973cd","b6f5251a67c5cf8539c0213c387a583cdcefd493","0fa3eabd538d777556f3e87399959d05cefa1f69","7f9bbe985ccf6c16b6ef60ccb9ef04e4219b54cb","a394ec59eb036aec8a088bfb09f88c7682ebf798","1743802b43a7dca265ca8e792c87875f2e4906e8","81653b68eb28329b05e2337381a3d78d6d5b53df","32bd7b680830b3e168795ccfe650ceeb0edf7878","71f8163801980fbaa494cb8c149bd7388034c2ba","6209474964e02ba34ed539cf3cee8044048a1bda","6d59f58f7408362036196048c9ba11f399dd9bc2"],"s2Url":"https://semanticscholar.org/paper/558eab42b1c2c85846b5f8cef857019a98748528","s2PdfUrl":"","id":"558eab42b1c2c85846b5f8cef857019a98748528","authors":[{"name":"Duc-Cuong Nguyen","ids":["40655437"]},{"name":"Dominik Wermke","ids":["10660223"]},{"name":"Yasemin Acar","ids":["3224778"]},{"name":"Michael Backes","ids":["1749517"]},{"name":"Charles Weir","ids":["39048620"]},{"name":"Sascha Fahl","ids":["2200198"]}],"journalName":"","paperAbstract":"Despite security advice in the official documentation and an extensive body of security research about vulnerabilities and exploits, many developers still fail to write secure Android applications. Frequently, Android developers fail to adhere to security best practices, leaving applications vulnerable to a multitude of attacks. We point out the advantage of a low-time-cost tool both to teach better secure coding and to improve app security. Using the FixDroid IDE plug-in, we show that professional and hobby app developers can work with and learn from an in-environment tool without it impacting their normal work; and by performing studies with both students and professional developers, we identify key UI requirements and demonstrate that code delivered with such a tool by developers previously inexperienced in security contains significantly less security problems. Perfecting and adding such tools to the Android development environment is an essential step in getting both security and privacy for the next generation of apps.","inCitations":["b1400438b4822d59a64fba31d0dc590306418ac3"],"pdfUrls":["http://doi.acm.org/10.1145/3133956.3133977","https://acmccs.github.io/papers/p1065-nguyenA.pdf"],"title":"A Stitch in Time: Supporting Android Developers in WritingSecure Code","doi":"10.1145/3133956.3133977","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3133977","venue":"CCS"},
{"entities":["Cloud computing","Cloud computing security","FedRAMP","ISO/IEC 27001:2013","Information assurance","Interactive evolutionary computation","Relevance","Requirement"],"journalVolume":"","journalPages":"50-57","pmid":"","year":2017,"outCitations":["17fc4b59817417cc968d2466b9f0cd44e6dcd6ce","76b2c2661e699259a5b23d86373f9dd12e3250ea","aa971eebdec4881ef490db2520e89e995e8696ab","8753b5537342bd612af714703d9cb4a86bc71128","972458f60cb44adb3f5ad1534b10cc59895f735a","95e6d469f2ac3c12e9e368f06872916e2f6c1305","b67dc496b84010aa4f2a0f909fb3cb4d36ba78a0","e80f2032df4a1257ad350d73259a05f89c7123c0","5ea0bad30d6df3cb29b57ce305a5f57b09484a78","25b24d6cc547c80e3a1ad037082694a5f6a2b8a9","9b194ae029c6711eb133716722a42ecffdb572d3","52c2c050af5b32d4929b4b193967a3675d03aea0","768b6372cb91b89eb9ceaa53c4e6365bc6f72816","9f1fd4b1c912ff7226bcfa0ebde09a3951837a3f","8372016fe38121358163c20f88e28fc0267e30b1","d185265c926739a30c1c45976c44b4f0cdf11c37","7f7137820048e0a1611e180d483754240da588c4","438054be692ca71e824131d081c10e22c48794dc","b488764b42b99ea5a47284c3245101e177c3bdbe"],"s2Url":"https://semanticscholar.org/paper/13c6f202ce5ef51cf79f7f90ffb24897f9daf1bc","s2PdfUrl":"","id":"13c6f202ce5ef51cf79f7f90ffb24897f9daf1bc","authors":[{"name":"Carlo Di Giulio","ids":["22511249"]},{"name":"Read Sprabery","ids":["2493219"]},{"name":"Charles A. Kamhoua","ids":["1769233"]},{"name":"Kevin A. Kwiat","ids":["1723424"]},{"name":"Roy H. Campbell","ids":["1687256"]},{"name":"Masooda N. Bashir","ids":["32621916"]}],"journalName":"2017 IEEE 10th International Conference on Cloud Computing (CLOUD)","paperAbstract":"The increasing relevance of information assurance in cloud computing has forced governments and stakeholders to turn their attention to Information Technology (IT) security certifications and standards. The introduction of new frameworks such as FedRAMP in the US and C5 in Germany is aimed to raise the level of protection against threats and vulnerabilities unique to cloud computing. However, our in-depth and systematic analyses reveals that these new standards do not bring a radical change in the realm of certifications. Results also shows that the newly developed standards share much of their basis with older, more consolidated standards such as the ISO/IEC 27001 and hence the need for determining the added value. In this study, we provide an overview of ISO/IEC 27001, C5, and FedRAMP while examining their completeness and adequacy in addressing current threats to cloud assurance. We question the level of protection they offer by comparing these three certifications alongside each other. We identify weaknesses in the three frameworks and highlight necessary improvements to meet the security requirements indispensable in relation to the current threat landscape.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/CLOUD.2017.16","http://assured-cloud-computing.illinois.edu/files/2018/01/Cloud-Standards-in-Comparison-Are-New-Security-Frameworks-Improving-Cloud-Security.pdf"],"title":"Cloud Standards in Comparison: Are New Security Frameworks Improving Cloud Security?","doi":"10.1109/CLOUD.2017.16","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/CLOUD.2017.16","venue":"2017 IEEE 10th International Conference on Cloud Computing (CLOUD)"},
{"entities":["Approximation algorithm","Best-effort delivery","Computation","NP-hardness","Personalization","Sampling (signal processing)","Social network","Speedup"],"journalVolume":"","journalPages":"619-634","pmid":"","year":2017,"outCitations":["084419435227a5bbf54d47ba54e11739756510fd","abb152802d5b4686a394e221abe951187ea06158","81aa239cb8f106a379f7571ac7b1498fb58ec712","4cd73382dc17561cd276f276c61d5ebf39bf69ad","4cc352fa9dc7fc87389ce95e6779a2603f4ee87f","43a068652277ca9213202d984a69965e7fec5dd9","8c1fa3949409eb65017a4625a7351039f72ebf04","50ef0cbcc318ec98c7d6132b9c539e9cf41db010","1de0168bb79272d3faafdcda5c9bb4b2a00a15d8","6f8a2339aabb699d8810baed2564744ca837f009","360a12e2f5c56e53cc97007678ee97dd85ecef14","33679dcb1fa8873c7be583c45cd9982cd73b5db3","706c83309fa09454a136d4e607364b27be66172c","6be7b1817e67a773d7f17601d7bf6024b81435a8","239c6ebf6172f8f34e9d103ca1c10056d532be09","28bf0df09f97e7ef9108e71b45fe1b9a7aa201e2","404d38143b1078fcb4329f6addbd781d2a99f9b0","2ee8c773ef22776b0113c78325ca76b701cbb78e","0a888fadf7f8ac8eb0f194f7979e421ce072bcc4","182dae04254e79a8cd6acee81114a686c8ca1cec","094cbfa06f8374b49b84524a466a63d34c9ef34f","21968ae000669eb4cf03718a0d97e23a6bf75926","b790f9ae49cdee5354eacfc7897ab9752acd5e2a","2e9b18872712817e5d98bc54ea6ee8a7bd66fbeb","41c8ff7475225c9dfe9cedc25c038e9216345cc6","1ad8410d0ded269af4a0116d8b38842a7549f0ae","1f559f2eb174d05a912b2ec39a48eadfd0160b74","07bd2985ebe29eaa182569e1fd3e3e0f9df4c14a","6eccbba04f448fa5bc93ed94bc63bb03d36e114c","34ee11059d693642fa7a5376e96e147539a997b1","fa4e93dbcdd1e4f20db9aeb34699a414420b7fd9","0b95749c8751d46c3a15735e914ccc1e0f8590af","a0bcdf26fcd382dd54ac38be07e6b33179bd52f4","23d85a0008429845870780c6db3640c05165acaf","1339b888fb739b8a1194fa94fbe848e01d93456a","506b932cff9383319305cb29ec5855aebda059ba","7909dc85b5d3016100bd6cba675f70de3a5e9413","530d53d8a1828e73ff0d731cd2d2cf8a8f8ecae4","02678fe75012986ee59be79b628dd0e0cea0a9f1","89927a37854b2d479cf7ae51016faed9222a14ed"],"s2Url":"https://semanticscholar.org/paper/224e0bdb201a6953a5fc6ffec587d5963dcb0c29","s2PdfUrl":"","id":"224e0bdb201a6953a5fc6ffec587d5963dcb0c29","authors":[{"name":"Yuchen Li","ids":["2159885"]},{"name":"Ju Fan","ids":["3232294"]},{"name":"Dongxiang Zhang","ids":["2712862"]},{"name":"Kian-Lee Tan","ids":["1688848"]}],"journalName":"","paperAbstract":"Social influence has attracted significant attention owing to the prevalence of social networks (SNs). In this paper, we study a new social influence problem, called <i>personalized social tags exploration</i> (PITEX), to help any user in the SN explore how she influences the network. Given a target user, it finds a size-k tag set that maximizes this user's social influence. We prove the problem is NP-hard to be approximated within any constant ratio. To solve it, we introduce a sampling-based framework, which has an approximation ratio of 1-&#949; over 1+&#949; with high probabilistic guarantee. To speedup the computation, we devise more efficient sampling techniques and propose best-effort exploration to quickly prune tag sets with small influence. To further enable instant exploration, we devise a novel index structure and develop effective pruning and materialization techniques. Experimental results on real large-scale datasets validate our theoretical findings and show high performances of our proposed methods.","inCitations":["53e6a2664eda8036576f77eda5134fa7d3640f31"],"pdfUrls":["http://www.comp.nus.edu.sg/~a0047194/paper/tr2017-pitr.pdf","http://doi.acm.org/10.1145/3035918.3035952"],"title":"Discovering Your Selling Points: Personalized Social Influential Tags Exploration","doi":"10.1145/3035918.3035952","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035952","venue":"SIGMOD Conference"},
{"entities":["Autonomic computing","Big data","Decision support system","Deep learning","Discharger","Edge computing","Electrocorticography","Electroencephalography","Emergence","Feature extraction","Multimodal interaction","Neurostimulation","Residue number system","Resting state fMRI","Self-discharge","Simulation","Spontaneous order"],"journalVolume":"","journalPages":"83-92","pmid":"","year":2017,"outCitations":["8d08d4286d978935d710ccb92f242297923d0395","d0a18f442d32eb2ccafd3773d458a191d230c690","0b75c7b08726857be88341120971329382dc8c50","272065b6a1548f51f8509903a3b082464e776fe5","b64c938fc399999ca738501224fc7d5ee33c4673","b07524896eca854351a03f6885e276eb3afb3883","128cefbf4b3c8945fac6947fabf1981a15d74250","a14dfa4684a6935f8f2f0264bd3112bdb2e65454","8d2f5e7b6ae46aa7d0e6f3aa89f122478ffc76cb","6938d305ee3a51b4197580d1174c355248d2c0ff","ab99bcd4e4571b1903b0e03f2efb3c5892949b83","95530415c2dd716093121950aee5a49e5eac6816","9a1daf4248a260b9df0a335829e151aba174dbbe","912c084010703706632e58a67195158e62acb22b","6452216674d141d4361028b7e8a015c152129852","ac2610e783457541ec12f146055a71e7826be37d","16778143b4f6dfc5f5727d266a3f809901e3145c","042180000d256454446fdcd3dbac8cf7c0093ead","0789fe98af2f2ac6b0ff952742309edf62154a6e","45beb6d732293c80e33d37f100564afd19262072","18c5814a064748ea2559e205f02dbbdfe7655cd4","de7848ff6949602dc8f1479929153c04168f8a08","85c1730b5a310dfbc060f8c42d29081986f90169","536bdd662448aeb14636e18ee2012398c5c74004","2cbb401c2c452f28aaea23d1dacdfac416ca4077","9f5a828ad6a2b8bac21f7343a653d2f613254ac9","726ee1abe8df46b36ad08b6d16c712510da7a8aa","db62dfe38f0deb4ed72adc60b2b326fe7d1892e4","226575b9b189989965d44538c70b710b526d818f","a7765cc0ba64c209dd9d2666a8db8a049831949f","5eeb52bfffd537c60708cac5c44ca20987ecb400","e7214c5b6a24d23bd762c036a52df32584d1c969","0f7ec1772b263e1f361b37ac61f953da57116396","f81da11f8ee74b26393b84e6bed0f8275311c3c1"],"s2Url":"https://semanticscholar.org/paper/76f427542150941395ef7b1c8a8043b7a3a5ea5f","s2PdfUrl":"","id":"76f427542150941395ef7b1c8a8043b7a3a5ea5f","authors":[{"name":"Mohammad-Parsa Hosseini","ids":["3461396"]},{"name":"Tuyen X. Tran","ids":["1917915"]},{"name":"Dario Pompili","ids":["1735828"]},{"name":"Kost V. Elisevich","ids":["2304632"]},{"name":"Hamid Soltanian-Zadeh","ids":["1682711"]}],"journalName":"2017 IEEE International Conference on Autonomic Computing (ICAC)","paperAbstract":"Epilepsy is a chronic brain disorder characterized by the occurrence of spontaneous seizures of which about 30 percent of patients remain medically intractable and may undergo surgical intervention; despite the latter, some may still fail to attain a seizure-free outcome. Functional changes may precede structural ones in the epileptic brain and may be detectable using existing noninvasive modalities. Functional connectivity analysis through electroencephalography (EEG) and resting state-functional magnetic resonance imaging (rs-fMRI), complemented by diffusion tensor imaging (DTI), has provided such meaningful input in cases of temporal lobe epilepsy (TLE). Recently, the emergence of edge computing has provided competent solutions enabling context-aware and real-time response services for users. By leveraging the potential of autonomic edge computing in epilepsy, we develop and deploy both noninvasive and invasive methods for the monitoring, evaluation and regulation of the epileptic brain, with responsive neurostimulation (RNS; Neuropace). First, an autonomic edge computing framework is proposed for processing of big data as part of a decision support system for surgical candidacy. Second, an optimized model for estimation of the epileptogenic network using independently acquired EEG and rs-fMRI is presented. Third, an unsupervised feature extraction model is developed based on a convolutional deep learning structure for distinguishing interictal epileptic discharge (IED) periods from nonIED periods using electrographic signals from electrocorticography (ECoG). Experimental and simulation results from actual patient data validate the effectiveness of the proposed methods.","inCitations":["6cae9ad284a73471a8ed9e483b1673a60d61d946","70401ee7cf17cc6848a60b37a1fd500ee26c2291","03a0e8563f1a65c7fdc68d21ddc4aaced677de41","96adad0a36a41349729565c6057826df5681f290","a1096e811dac3dfb6ea515a04e694dd901cf7ca4","411492940b0766923b4384b03ccbb5ed9a71c500"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICAC.2017.41","http://nsfcac.rutgers.edu/sites/all/files/Biblio%20Papers/08005336.pdf"],"title":"Deep Learning with Edge Computing for Localization of Epileptogenicity Using Multimodal rs-fMRI and EEG Big Data","doi":"10.1109/ICAC.2017.41","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICAC.2017.41","venue":"2017 IEEE International Conference on Autonomic Computing (ICAC)"},
{"entities":["Compiler","Computer architecture simulator","Executable","Executable UML","Integrated development environment","MagicDraw","Modeling language","Simulation","System Simulation","UML tool","Unified Modeling Language"],"journalVolume":"","journalPages":"217-220","pmid":"","year":2017,"outCitations":["cb34dc991d14d82e93e5e066c23ab91b6d54520e","8e74175db325f7de39ebc6354ecbc27362580ce9","fba39d39f3764d7ad99a78ff490d7cf1299c123d"],"s2Url":"https://semanticscholar.org/paper/f69cf829b22d1c4727f7ea629360636014c9e56d","s2PdfUrl":"","id":"f69cf829b22d1c4727f7ea629360636014c9e56d","authors":[{"name":"Ed Seidewitz","ids":["3327677"]}],"journalName":"","paperAbstract":"Alf is an <em>action language</em> designed as a textual notation for specifying detailed behaviors within an executable UML model. The Alf implementation in MagicDraw, a leading commercial tool for modeling using the Unified Modeling Language (UML) from No Magic, Inc., aims to support the practical application of Alf in real-world uses of executable UML modeling. It includes syntax-aware editing and checking of Alf code, with valid code automatically and transparently compiled into UML activity models. The resulting models are fully integrated within the wider UML modeling context, and they can then be executed as part of full system simulation scenarios. The Alf compiler also tracks the dependencies of all Alf text on other UML model elements, allowing for automatic re-checking and re-building the Alf code as necessitated by changes in referenced elements. The goal is to provide an IDE-level experience for the easy entry and maintenance of Alf code within an overall executable UML model.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3136014.3136028"],"title":"A development environment for the Alf language within the MagicDraw UML tool (tool demo)","doi":"10.1145/3136014.3136028","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3136014.3136028","venue":"SLE"},
{"entities":["Combinatorial optimization","Graph partition","Integer programming","Job shop scheduling","Legal fine","Linear IgA Bullous Dermatosis","Linear programming","Makespan","Mathematical optimization","Multi-core processor","Nevus sebaceous","Optimization problem","Partition problem","Program optimization","Run time (program lifecycle phase)","Scheduling (computing)","Single-core","Speedup","XIAP gene"],"journalVolume":"","journalPages":"1-8","pmid":"","year":2017,"outCitations":["642f72cdee8f3e9a5275e47cad844e1c54b57b83","b2abc27230a97177f7dd660035d56d9fbfca87fa","03e53dddc865bf688fe313a94ad186a4d96bffe0","37bd5728e359535460dd7bf03bc265848f8f0249","f40680efe9b42f4a83005f208a818d628ec03e8c","f325dc834d1ec70c7c557b84ab6157d1e682f54e","00ccbe8b4e5691d3ef9aa190d9b9cdf85b2266a0","7631275e3266f627df6cc29441f69ab9f5f2b1c6","64cd51eeb6f55b39ab0194ccbd7cd1b078b73a36","7477ba88a6ecb151c61e755cf608736367c6f4d3","078e00be20bfdc4eeae762f6170ccded05f452c6","54f3331b575b2d451c2d716f86496cada23d596d","1f4a8213282034b2d7547767c3ce81f85903fcaa","abcdac2fa21a005809f0ab2391a722c2a205dd11","9c154444ab777e83db6d3093af52261c1ff15154","40ca9cc71ac3f9840268dd051d8003bd14dc49a2","031d644fbe3455768776e84f126b7b6d79da0f86","63ef39942d6c1b1eddb0f4ff9dcaa28e4036eec9","ba98391f6175421d355972468dbae26389d04b9d","83712692555c62db3b2bb91ca33f25fb71826b4f","dd99a0555902990bd9064da31e9eb2ccdc6f8207","a9a744a382bcc0fb2d8c643c5ea7ba8926cb77c1","15860f9f774f19f245f016d9cf479222e4f9a6ba","3cf2bcab12160c888d6ed17124cb54628a9eea4f","422554854e439fd99d4f07c80f304d7d91a6943d","352a8957005dc5519b15ed1870751ec494d66395"],"s2Url":"https://semanticscholar.org/paper/53212cf211e0c8e4d7c155eaceefd42b29967a14","s2PdfUrl":"","id":"53212cf211e0c8e4d7c155eaceefd42b29967a14","authors":[{"name":"Shervin Hajiamini","ids":["1922545"]},{"name":"Behrooz Shirazi","ids":["1765372"]},{"name":"Chris Cain","ids":["33360863"]},{"name":"Hongbo Dong","ids":["40454458"]}],"journalName":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)","paperAbstract":"In today's multicore systems, depending on an application's computational demand, cores are either operated individually at different Voltage/Frequency (V/F) levels or grouped into multiple Voltage-Frequency Islands (VFIs) to reduce system energy consumption. This paper formulates a task scheduling and VFI partitioning problem whose optimization goal is to minimize the task set (application) execution time (makespan) for a given energy budget. First, the combinatorial optimization problem is formulated with Integer Linear Programming (ILP) to obtain per-core, per-task dynamic V/F levels in a fine-grain VFI-based system with single-core islands. Next, static task scheduling on coarse-grain VFI-based systems, where an island can contain several cores operated at the same V/F level, is formulated with Mixed Integer Linear Programming (MILP), considering the energy budget and task set's precedence constraints. The experimental results show that under different energy budget constraints, fine-grain, dynamic task allocations provide on average 1.35x speedup over static coarse grain scheduling and partitioning methods.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/IGCC.2017.8323582"],"title":"An energy-constrained makespan optimization framework in fine-to coarse-grain partitioned multicore systems","doi":"10.1109/IGCC.2017.8323582","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IGCC.2017.8323582","venue":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)"},
{"entities":["Conductance (graph)","Infinite impulse response","Interaction","Scrolling","Search engine results page","Web search engine"],"journalVolume":"","journalPages":"125-134","pmid":"","year":2017,"outCitations":["f97e8e2d4194ec2e83cc3a1d13936b31854ac178","07facb9dd8b7aebe39decdc680c62333aacd5d39","12fca40c31a0c1a6f223beb535ad40f1a192b5af","19f6905b53795a50749fafcadd20cd2129963896","21697f9e4ced5f10ade4d785a8be936ca6e888d2","d2991874e0f6f704202a81d712e782218a34b57d","a2e170eeb8372fa748735e0e242735a7da80cfce","45ab0092adfb8dae55050b7db67d679e9a46b59f","70bf86727af633e0dcad2a9b4259f2de94af8b3c","77c68553831923ae277dcc3daa4505a7d84e83e2","9a530d7eb0fbc4168f95fff5ea8acbc7adbba6b2","1cf66b58bd5b299a1e92493b6fcddcae1c7eacc4","c7dae7a965595bb41f51439beb9bf39cc6b8e832","9280e3c6daca1c9762655e2a180029eefdd51363","ed4cbb28e02b3520252fe8089374deffc15800a6","d71163858400f09037a2842827cd425afec9f574","59e8a0371a8cdaf24cdc3e3c0f5e7e6f2d6a1251","738e5e73e67875a4a1d9a0f724ef560296618a27","8402125904a087a41ef976e3ec2ffd9351bd3568","5ba7592fe3310106543cffad644addeffc2ad2b3","29d47e1015d90a3bcde7db84399e34651fb37af7","182fe8940dc9675b382a4ae48764bfeadc1a1b1b","7ee6e6a07685b6728dc9a14ca1185d3ef1c1b8fb","bab71002a0b58bb2fabd6675e3fc61ed0fbdcc7a"],"s2Url":"https://semanticscholar.org/paper/1ac14f8d2d6e34cb2a218476fd0f1586e8df8c14","s2PdfUrl":"","id":"1ac14f8d2d6e34cb2a218476fd0f1586e8df8c14","authors":[{"name":"Ashlee Edwards","ids":["34828068"]},{"name":"Diane Kelly","ids":["34961870"]}],"journalName":"","paperAbstract":"One of the primary ways researchers have characterized engagement during information search is by increases in search behaviors, such as queries and clicks. However, studies have shown that frustration is also characterized by increases in these same behaviors. This research examines the differences in the search behaviors and physiologies of people who are engaged or frustrated during search. A 2x2 within-subject laboratory experiment was conducted with 40 participants. Engagement was induced by manipulating task interest and frustration was induced by manipulating the quality of the search results. Participants' interactions and physiological responses were recorded, and after they searched, they evaluated their levels of engagement, frustration and stress. Participants reported significantly greater levels of engagement when completing tasks that interested them and significantly less engagement during searches with poor results quality. For all search behaviors measured, only two significant differences were found according to task interest: participants had more scrolls and longer query intervals when searching for interesting tasks, suggesting greater interaction with content. Significant differences were found for nine behaviors according to results quality, including queries issued, number of SERPs displayed and number of SERP clicks, suggesting these are potentially better indicators of frustration rather than engagement. When presented with poor quality results, participants had significantly higher heart rates than when presented with normal quality results. Finally, participants had lower heart rates and greater skin conductance responses when conducting interesting tasks than when conducting uninteresting tasks. This research provides insight into the differences in search behaviors and physiologies of participants when they are engaged versus frustrated and presents techniques that can be used by those wishing to induce engagement and frustration during laboratory IIR studies.","inCitations":["cfc794089407d809f02c3b954a474efbcf5f4e66","fbe5f1587de705be23aacbeb3f31cd73c0da7e02"],"pdfUrls":["http://doi.acm.org/10.1145/3077136.3080818"],"title":"Engaged or Frustrated?: Disambiguating Emotional State in Search","doi":"10.1145/3077136.3080818","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3077136.3080818","venue":"SIGIR"},
{"entities":["Central processing unit","Computation","Kernel (operating system)","Memory bound function","Performance tuning","Program optimization","Scalar processor"],"journalVolume":"","journalPages":"361-372","pmid":"","year":2017,"outCitations":["c78f374bbfaa85df22a24c9ef9e028e8bd7fe397","3cbb63051d0927b8f40853184c4788d47cd853b4","38f8d8f68072c6eed23dd2d6bdba3ff72b1fd981","0394f8e5b8cd881048981c7a5e1a866471adb580","2f54ca897f9805c9dc27afd8ae2a7a63ad798e0c","a8559e6c955a43ecbde0ce05b928346691dfb89f","092217c2267f6e0673590aa151d811e579ff7760","05393361e6d9e56ee7dbabb1e5ef6c1c212fc34d","338ec0476191e19ba96d38b34db9a752f0f138a8","ea23e16062dc7513f101ad0a7a4e8473764c33fd","230bc9e1b5671dc435c1a084621a8fee61c0200a","e23da0346eef46def598562009fd7a7c84932953","98e2a7057ca438e0838a5c036c87798d5ffee408","1e375b7bd9b02336371dbbb06bee4a94b2a93fc8","0f16f6f478b5c788dce466eb50e36c612273c36e","24e63240320f77654a9c3673f66f6bf6be3e91a1","94c1818648ceaf538c342651175d09534946f17c","b13a68dc72c0a6dafacc018317e9c96aa6ebbd75","0e24c9eeb4c02ef4c1d9f5db7eea3e3766f4e581","295f4ffa651675b22ae8e2f3f30b400330da0c69"],"s2Url":"https://semanticscholar.org/paper/78e952ca5a744e8cae3bb20e2637af88d41b41bf","s2PdfUrl":"","id":"78e952ca5a744e8cae3bb20e2637af88d41b41bf","authors":[{"name":"Masatomo Hashimoto","ids":["2229509"]},{"name":"Masaaki Terai","ids":["36304207"]},{"name":"Toshiyuki Maeda","ids":["35219029"]},{"name":"Kazuo Minami","ids":["1962559"]}],"journalName":"","paperAbstract":"The process of performance tuning is time consuming and costly even if it is carried out automatically. It is crucial to learn from the experience of experts. Our long-term goal is to construct a database of facts extracted from specific performance tuning histories of computation-intensive applications such that we can search the database for promising optimization patterns that fit a given kernel.\n In this study, as a significant step toward our goal, we explored a thousand computation-intensive applications in terms of the distribution of kernel classes, each of which is related to expected efficiency and specific tuning patterns. To statistically estimate the distribution of the kernel classes, 100 loops were randomly sampled and then manually classified by experienced performance engineers. The result indicates that 50-70% of the kernels are memory-bound and hence difficult to run efficiently on modern scalar processors. In addition, based on the classification results, we constructed experimental classifiers for identifying loop kernels and for predicting kernel classes, which achieved cross-validated classification accuracy of 81% and 65%, respectively.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3030207.3030217"],"title":"An Empirical Study of Computation-Intensive Loops for Identifying and Classifying Loop Kernels: Full Research Paper","doi":"10.1145/3030207.3030217","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3030207.3030217","venue":"ICPE"},
{"entities":["Algorithm","CUDA","Central processing unit","Double-precision floating-point format","Graphics","Graphics processing unit","Kepler (microarchitecture)","Maxwell (microarchitecture)","Monte Carlo","Numerical analysis","Nvidia Tesla","Parallel computing","Particle-in-cell","Position-independent code","PowerPC 600","Program optimization","Simulation","Speedup","Testbed","Velocity","Video card"],"journalVolume":"","journalPages":"378-387","pmid":"","year":2017,"outCitations":["8d63b44ea043fc3c2b0ec90b2ffbbf84ba446674","8bc77b016e09e67ce88bc187ff1179aaa3d73ae5","60e7f7f9367e952f53b8545ef441886a84e3ff58","4cea67678804f9f3fb9ac042b8e711eeb133a2fd","38353caa2ed03feb19e114297103bc55e1f31f0a","1891724061a44a3e5aeb00734da2eb8601c41753","65c25688b386fa5dd21887c18fcb7f65d5c0ce3b","07a344a7cb9f381c69c0843f213292678e71ed1f"],"s2Url":"https://semanticscholar.org/paper/9b13f378b047d1445720d3d91680c68e7991ce8f","s2PdfUrl":"","id":"9b13f378b047d1445720d3d91680c68e7991ce8f","authors":[{"name":"Harshil Shah","ids":["39504478"]},{"name":"Siddharth Kamaria","ids":["35480289"]},{"name":"Riddhesh Markandeya","ids":["35618845"]},{"name":"Miral Shah","ids":["31715963"]},{"name":"Bhaskar Chaudhury","ids":["30578421"]}],"journalName":"2017 IEEE 24th International Conference on High Performance Computing (HiPC)","paperAbstract":"The implementation of 2D-3v (2D in space and 3D in velocity space) PIC-MCC (Particle-In-Cell Monte Carlo Collision) method described in this paper involves the computational solution of Vlasov-Poisson equations, which provides the spatial and temporal evolution of the charged-particle velocity distribution functions in plasmas under the effect of self-consistent electromagnetic (EM) fields and collisions. Stringent numerical constraints associated with a PIC code makes it computationally prohibitive on CPUs in case of large problem sizes (total number of particles, number of grid points and simulation time-scale). We present the design and implementation of a Graphics Processing Unit (GPU) based 2D-3v PIC code using the CUDA C APIs for Kepler architecture. Several parallelization and optimization techniques have been presented in this paper with special emphasis on shuffle intrinsic specific to Nvidia Kepler architecture (or later), which significantly improves the performance compared to existing GPU implementations in the literature. On a test bed comprising of a serial implementation on Xeon E5 CPU and parallel implementations on Nvidia Tesla K40 graphics card, we have achieved a speedup of up to 60x in double precision mode. Effect of important numerical parameters on speedup has been investigated. Finally, we compare the performance of our best parallel implementation on different GPUs (Kepler as well as Maxwell) and analyze the effect of hardware architecture on the performance of the PIC code.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/HiPC.2017.00050"],"title":"A Novel Implementation of 2D3V Particle-in-Cell (PIC) Algorithm for Kepler GPU Architecture","doi":"10.1109/HiPC.2017.00050","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HiPC.2017.00050","venue":"2017 IEEE 24th International Conference on High Performance Computing (HiPC)"},
{"entities":["Cache (computing)","Cloud computing","Elasticity (cloud computing)","Memcached","Multitier architecture","Physical computing","Software as a service","Web server","benefit"],"journalVolume":"","journalPages":"1-6","pmid":"","year":2017,"outCitations":["1594118f2696b573f08510cf837f3b37db87face","0d62acaefd4c4f41fd5814c8d9267d7798de9284","39c80e494f44505c80a345c5228e6ec0e74673f6","90b2e3db0f9a2d783382e6cfe69c927c56efc82d","0f457b7f93736da38cdcffcbd76ae9cd7a0a6749","3cb34f7a770836bcfeef28f844d670b8a014ffa8","3cda09fdc91d7f85a138a4d56848a3a0708df76f","047a8db8654292560b5d023a8ef61cd335938822","4ab775b9811a8b9f0ff24fa06b535986149e51e3","28f13ebe8e17fdb4c2500c515759a3ee0c2783ce","5f948207acb92e6f4e09aa5f5a2cf7cdf2d80ba5"],"s2Url":"https://semanticscholar.org/paper/d70d581545b3571b7f1c51dcf7a1178553a03fa6","s2PdfUrl":"","id":"d70d581545b3571b7f1c51dcf7a1178553a03fa6","authors":[{"name":"Muhammad Wajahat","ids":["9223428"]},{"name":"Salman Masood","ids":["40808784"]},{"name":"Abhinav Sau","ids":["40791749"]},{"name":"Anshul Gandhi","ids":["2044504"]}],"journalName":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)","paperAbstract":"Cloud computing has largely replaced dedicated and physical computing systems by providing critical features such as elasticity and on-demand access to resources. However, despite its many benefits, the cloud does have its limitations, such as limited or no control over the hardware and limited customization options. Users who deploy applications on the cloud only have control over software tuning and optimizations since the infrastructure is managed by the provider. In this paper, we analyze cloud-deployed Web applications that are multi-tiered and employ Memcached as the object caching layer. Memcached is a high performance memory caching system and, if there are no other bottlenecks in the system, the overall application performance should be dictated by Memcached. However, we show that other components of the system such as web servers, load balancers, and some underlying system configurations, severely impact application performance. We analyze these components and provide guidelines on their implementation and parameter tuning to minimize resource waste in the cloud.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/IGCC.2017.8323580","http://www3.cs.stonybrook.edu/~anshul/igsc17.pdf"],"title":"Lessons learnt from software tuning of a Memcached-backed, multi-tier, web cloud application","doi":"10.1109/IGCC.2017.8323580","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IGCC.2017.8323580","venue":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)"},
{"entities":["Adobe Streamline","Artificial neural network","Computer vision","Convolutional neural network","Deep learning","Graphics processing unit","Maxwell (microarchitecture)","Mobile device","Power semiconductor device","Server (computing)","Tegra"],"journalVolume":"","journalPages":"114-115","pmid":"","year":2017,"outCitations":["a1543975098f8ec14f4402f761eefb473100beee","3ac1df952ffb63abb4231a4410f6f8375ccdfe79","305806d53240aa523168d5aa59d902fb0c9a1581","52d2a6110e3bc2215d0347a04c421fb094044557","c3bd0b86c74a4464173073b1f36fd12d2637c7a8","3296a866a88f6be8f9354695cc7a098596f04253","1c454ae4e1bbc600791f3a4796fdb6b1ee2ca016","0b99d677883883584d9a328f6f2d54738363997a","9f1f065bf08cd90431cc051267a708f56436cd82","722fcc35def20cfcca3ada76c8dd7a585d6de386","adfaf01773c8af859faa5a9f40fb3aa9770a8aa7","81b7dcaef4a53daab41658a4d1e97972d04b3384","5d6fca1c2dc1bb30b2bfcc131ec6e35a16374df8"],"s2Url":"https://semanticscholar.org/paper/00c8e8242f03a1cdf1b9a71632f42d58cddf3814","s2PdfUrl":"","id":"00c8e8242f03a1cdf1b9a71632f42d58cddf3814","authors":[{"name":"Crefeda Faviola Rodrigues","ids":["30307951"]},{"name":"Graham D. Riley","ids":["39609950"]},{"name":"Mikel Luján","ids":["1706226"]}],"journalName":"2017 IEEE International Symposium on Workload Characterization (IISWC)","paperAbstract":"Energy-use is a key concern when migrating current deep learning applications onto low power heterogeneous devices such as a mobile device. This is because deep neural networks are typically designed and trained on high-end GPUs or servers and require additional processing steps to deploy them on low power devices. Such steps include the use of compression techniques to scale down the network size or the provision of efficient device-specific software implementations. Migration is further aggravated by the lack of tools and the inability to measure power and performance accurately and consistently across devices. We present a novel evaluation framework for measuring energy and performance for deep neural networks using ARMs Streamline Performance Analyser integrated with standard deep learning frameworks such as Caffe and CuDNNv5. We apply the framework to study the execution behaviour of SqueezeNet on the Maxwell GPU of the NVidia Jetson TX1, on an image classification task (also known as inference) and demonstrate the ability to measure energy of specific layers of the neural network.","inCitations":[],"pdfUrls":["https://arxiv.org/pdf/1803.11151v1.pdf","http://doi.ieeecomputersociety.org/10.1109/IISWC.2017.8167764"],"title":"Fine-grained energy profiling for deep convolutional neural networks on the Jetson TX1","doi":"10.1109/IISWC.2017.8167764","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IISWC.2017.8167764","venue":"2017 IEEE International Symposium on Workload Characterization (IISWC)"},
{"entities":["Adversary (cryptography)","Ecosystem","End-to-end encryption","Identifier","Overhead (computing)","Personally identifiable information","Privacy","Proxy server","Relay","Throughput","Tor Messenger","Trusted Execution Technology","Trusted execution environment"],"journalVolume":"","journalPages":"145-161","pmid":"","year":2017,"outCitations":["04269ca9938b4d99658a3527cde3eff2b502f269","06bf84f98e7dd39be8d96eb67bafbf56d61bc715","2d968ef0c5ad0cc6718e2f8b40ce7f4c323dbbdd","5b2092b54860f134f78b2ec884c910750def71e6","1648be4fa6a517cdad08c6299e20869427242d02","17f19d9ec093ef82a10f1276fc53c10d4667836d","7cbbab21c6f6fb54a968005afa21468b825f1d1e","21f47e1d9078d12de1bd06341619923e8b9d85bb","566333376dd1af014555b4cf82cda42c22501013","11dabc4a43d72c78e0d05b8f8bc599620840ff1a","d550c945a24211ed94c89f104698f1998b3fcb64","0a35c32ebc233556d11c2038f5a4362f2c40b2a9","07f0e56d1c37c213cd5c617dbfba5a0549629a19","d9ef20252f9d90295460953e8ab78667b66919ad","6b6fae57882fd193461fca64654107068ce9fd9a","806df240622f866fd8bb4b31b292822dd2aeaf0a","b0ac2616034f56ab1469afb935b55fe7e37f8f41","345947186f190649c582204776071ac9a62e8d67","5fd8edc50805f796daacb9737e1a7b2a9f5a5c2f","5ac7a4dca5509c9dee49d96b4c3c62cc1d0bb9dd","a8369392447c083d2be1b74753f68f87811c72f5","108747579aef6bf029623639a86070feaf5cad41","14d19771bc69f1d41f63052e56e134f9ed569c1e","4c60ec65bd28c6637f82ee3f6ad28d6eaa9c4824","178ab90ac932cdd58eaeffa742e9711430bc9a23","133e0e83dc6877c6d417431e875cd57876153893","708a3c03556b5bc20b5bd8e58ef2f47f6a9fc7d2","35516916cd8840566acc05d0226f711bee1b563b","6bd5352a8b42520aad1c03e9940568b6c41978aa","0f19202d0ad4ddb2041540e6ba4dec4e677224fd","ec79422e0bfdb61d8b6d2a6ec5b2dfbcab970852","48a068fc680131e6c0f215ee41318086a5befec1","30909df12b1b01760ae4c5406e15f302a6524446","01fde8698110cf46ff48a17c65f2658dab4c323c","2633619177fcb13211008c6f8b952933afc01cde","7f489d9801e0674f4436beb34ea8b8695050d5fe","0469044c24ac4897fcffc3c7db6a2d9c7fd08848","7fc6e368df553233b61981dbb34772f5d8013821","6d15489d862e9399807f8aaac50241b440e98663"],"s2Url":"https://semanticscholar.org/paper/6cfe1e553cb48c7087bb61e80031c415978a4ede","s2PdfUrl":"http://pdfs.semanticscholar.org/99de/1c59e2e530a7ed9c27251a00ef5e833ff35b.pdf","id":"6cfe1e553cb48c7087bb61e80031c415978a4ede","authors":[{"name":"Seong Min Kim","ids":["2105818"]},{"name":"Juhyeng Han","ids":["9765412"]},{"name":"Jaehyeong Ha","ids":["9775571"]},{"name":"Taesoo Kim","ids":["3254849"]},{"name":"Dongsu Han","ids":["1729324"]}],"journalName":"","paperAbstract":"With Tor being a popular anonymity network, many attacks have been proposed to break its anonymity or leak information of a private communication on Tor. However, guaranteeing complete privacy in the face of an adversary on Tor is especially difficult because Tor relays are under complete control of world-wide volunteers. Currently, one can gain private information, such as circuit identifiers and hidden service identifiers, by running Tor relays and can even modify their behaviors with malicious intent. This paper presents a practical approach to effectively enhancing the security and privacy of Tor by utilizing Intel SGX, a commodity trusted execution environment. We present a design and implementation of Tor, called SGX-Tor, that prevents code modification and limits the information exposed to untrusted parties. We demonstrate that our approach is practical and effectively reduces the power of an adversary to a traditional network-level adversary. Finally, SGX-Tor incurs moderate performance overhead; the end-to-end latency and throughput overheads for HTTP connections are 3.9% and 11.9%, respectively.","inCitations":["be16f521ebdbe1acea867c9ce8100692d9f56308","d32d738f04d5c4ae4d12be1f6de88b132a7b12a7","334ec6e57110ece9f482f9ec2e85412b0be8072a","2087f336b0eb38fc60a24a32ec0821fc8fe2b2aa","8ca1436fe1e9bbdb39a92178fa80c7869d92573d","85741fa2a0fb1060c138b1b11a0906381661fbcb","a355edbb24d406761407e2728218d2192f2c1fcf","e41440cff90683629228b308a94e48c7af11ca36","b053033ad436cd404bb0eb2e75b3aac83b70d62c","2ee14b821b4084aa1b9237390e280daf450419e5"],"pdfUrls":["https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/kim-seongmin","https://taesoo.gtisc.gatech.edu/pubs/2017/kim:sgx-tor.pdf","http://www.usenix.org./system/files/conference/nsdi17/nsdi17-kim-seongmin.pdf","http://www.usenix.org./sites/default/files/conference/protected-files/nsdi17_slides_kim.pdf","https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_kim.pdf","https://www.usenix.org/system/files/conference/nsdi17/nsdi17-kim-seongmin.pdf"],"title":"Enhancing Security and Privacy of Tor's Ecosystem by Using Trusted Execution Environments","doi":"","sources":["DBLP"],"doiUrl":"","venue":"NSDI"},
{"entities":["Application programming interface","Computation","Computation (action)","Concurrency (computer science)","Concurrency control","Critical section","Data structure","Deadlock","HL7 data type","Hash table","Iteration","Java","Linearizability","Lock (computer science)","Map","Mutation","Optimistic concurrency control","Reaching","Read-only memory","Relaxation","Scalability","Scientific literature"],"journalVolume":"","journalPages":"14-26","pmid":"","year":2017,"outCitations":["13210f969b8b4d1d12d63a9a8361028a6be498bc","2296ddc8a3055fec7f6481efb1fa3c19629c9755","01d6463bd6dc85f938edb6e75c96c997c8b06799","09ed565e84057123c15ab12b885c235d1f241aed","1e520402e555bbadb8da903fbcbdd886996f5360","08d1e2257d40d1ce78d4412b7f45487a6cba1c90","2900690eb3132a4d1536226d629727de41f38a66","42142c121b2dbe48d55e81c2ce198a5639645030","961eb67eb799aa73428207dfe2a888fa509c3265","2e312e77add923e4a1c97a6474009567264a56a3","78e47b768c784fcb15004bab48e24f80fdad579e","813b7cdcf6d77ea34b4cf68378e2508db28fdf50","05a518c3b1a6f5c15d77f8829368677a263ff15d","03fc198adf79731c92070b8aa839c46ebf9b3c14","202d6e1bc26a9ec2fe69c60ccc9b898c22425ed4","9b67de50e9eb9a6087e1aebc2733166c96d67685","343f7182cde7669ca2a7de3dc01127927f384ef7","58da996efd7320d1e484263c97c930c8979c474f","68a9005a5ec10daece36ca5ecb9cad7be44770b1","04788aade7edbe37b4b7536405d21b039d6a7999","a517253fa6459d052fdaeda335e7dce2c1040a34","494c2233873a3fe93a97a275431a081ba042010f","835c0aa9082e7fd7937c802f64e0393e267e6496","1ae7993c0c2d795b243354de48dab80bf2000356","0fca220343f411c7dac67b1f5fc1bcf5790cc030"],"s2Url":"https://semanticscholar.org/paper/e7210630a963b810c9c057a30e41095b609e25cf","s2PdfUrl":"","id":"e7210630a963b810c9c057a30e41095b609e25cf","authors":[{"name":"Louis Jenkins","ids":["6916919"]},{"name":"Tingzhe Zhou","ids":["2390252"]},{"name":"Michael Spear","ids":["38445810"]}],"journalName":"2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT)","paperAbstract":"The Go language lacks built-in data structures that allow fine-grained concurrent access. In particular, its map data type, one of only two generic collections in Go, limits concurrency to the case where all operations are read-only; any mutation (insert, update, or remove) requires exclusive access to the entire map. The tight integration of this map into the Go language and runtime precludes its replacement with known scalable map implementations.This paper introduces the Interlocked Hash Table (IHT). The IHT is the result of language-driven data structure design: it requires minimal changes to the Go map API, supports the full range of operations available on the sequential Go map, and provides a path for the language to evolve to become more amenable to scalable computation over shared data structures. The IHT employs a novel optimistic locking protocol to avoid the risk of deadlock, and allows large critical sections that access a single IHT element, and can easily support multikey atomic operations. These features come at the cost of relaxed, though still straightforward, iteration semantics. In experimentation in both Java and Go, the IHT performs well, reaching up to 7&#xd7; the performance of the state of the art in Go at 24 threads. In Java, the IHT performs on par with the best Java maps in the research literature, while providing iteration and other features absent from other maps.","inCitations":[],"pdfUrls":[],"title":"Redesigning Go&#x2019;s Built-In Map to Support Concurrent Operations","doi":"","sources":[],"doiUrl":"","venue":"2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT)"},
{"entities":["Baseline (configuration management)","Experiment","Hashtag","Like button","Personalization","Program optimization","Social media","Unified Model","User profile","Wisdom of the crowd"],"journalVolume":"","journalPages":"743-752","pmid":"","year":2017,"outCitations":["26b99024682a897888428f727805967b032d0a54","0409e56956560dba788dfb3adc467f3475606c24","7bf16619c01eeb178e983c626e59b51021d21501","625ef5356b3e8f7a787a805c23ce4c34640ed596","1c7ecb026eeba7b0b6e933f62be1ecde40af0f3f","19e033066f2031d3ebada08897cd229fd2b046c4","72b992cd5b0461d3922d61aba4e13fd71fd9bb79","429299e7cace14421d62e184d82981e3d0b9766d","38b389580d774ce513284e671ff3bbcef0258de2","6195df04d7e529e8e2ba99c04c23d9ff04e66187","2744288f090192987e980274999065ad2d6e45d6","71423bb17133402965a5cbaf31fa28b0366149fd","2fcb51423a87c46412b9737a67ea22b55f3f9a9f","228769c177380bb6398150fa9112509d438fe77c","c604b73f55eb0bc1ccaa2f9e8b2028c52e169a5a","6d1f45f0615a131b11c0dafa21b0324feaf68f12","572009f92181ee5a7363dd5d42ac591ec523dea6","21a590921fd19055159f1bea03fbd7883d6132fb","205ef58ed1c3b1777a18b8c467565d6da8e32116","35a0d1d2ba7f52a66ba5c675467b71b6a56d81e4","7545f0620626d3a2a633954a8e5bd150d9544899","258c8adfba357ed20cc03b5c2229eb773924bc08","00354cf992faa54b9bb89690976de7f8bd6f0243","274bc40268671fa3fff54d2ef89454b13fb026da","8c9595abdc915cc722ccfa30a7a0dc4566e11754","3bddba3214fe9e7248a934455a2624aa5b781778","4932e87824314fe65b7d0d4294ed9cbd81c34df8","00f581aca4dd370615fa0ea99e730d6dd42fe347","1d0f25989452abbbc8feaf00a034ff110fc4b350","3d5a1904127679f50e1b3fdad77c342760e4b283","398dd8dcb4464a6fb8830868f6484476487d58e5","3531e0eb9ec8a6ac786146c71ead7f8d624fd2ca","6fc3ac2bd73b844025e684d8139a11fe4e4b0802","165c428fec7d3aac4ab6e2c9d285af92883b643c","7908c007f73ff641961b3c945d145e42a48eddb5","2172a4f1cb35267ea7a67ffa692840de8be7e9a1","01e6c986e4fa35f604b7c7b701f0bf682d4103be","254687dec6e5456fa289826da6558186ef2cc24f","116cbad0ad34f83023d0b231f378dae2975e3b5e","787d56ec5569f1054f490dcf9a9fb4b87b7990e8","e266bd9e72e8a220865079e9a30aaebd5b72d170","2cbe0ba73d02aabbeefedf841203219796a551b7","600191af13e7ae80885fa67ebd0a637d0e87abb5","46d60fbefab0bc0091627c6aa0ab08c313d23968","56b3a57397c2742e605581c76f93640d916c32af","046931816999f8d9722b19cf94fdbbe57bc2e84e","9d15f05f1f5f7c84745231b345fac1e5bfa66477","29b29b80bc5b3d775f9c9d436cb3834231459823","188f4d9b9d580d0432056b760b3372ec83543d1d","0706356c9ab6014d6b04577d38289ea8328291a5","42123a752e410548d1c26f055902aa91abc95d43","0409577f9391dd0ab2fca06f355b792b3d40c664"],"s2Url":"https://semanticscholar.org/paper/2a081abdb6504c4b4178af301a0e0d2330af66d8","s2PdfUrl":"","id":"2a081abdb6504c4b4178af301a0e0d2330af66d8","authors":[{"name":"Cheng Cao","ids":["2123628"]},{"name":"Hancheng Ge","ids":["2666978"]},{"name":"Haokai Lu","ids":["2887627"]},{"name":"Xia Hu","ids":["1687568"]},{"name":"James Caverlee","ids":["1697232"]}],"journalName":"","paperAbstract":"User interests and expertise are valuable but often hidden resources on social media. For example, Twitter Lists and LinkedIn's Skill Tags provide a partial perspective on what users are known for (by aggregating crowd tagging knowledge), but the vast majority of users are untagged; their interests and expertise are essentially hidden from important applications such as personalized recommendation, community detection, and expert mining. A natural approach to overcome these limitations is to intelligently learn user topical profiles by exploiting information from multiple, heterogeneous footprints: for instance, Twitter users who post similar hashtags may have similar interests, and YouTube users who upvote the same videos may have similar preferences. And yet identifying \"similar\" users by exploiting similarity in such a footprint space often provides conflicting evidence, leading to poor-quality user profiles. In this paper, we propose a unified model for learning user topical profiles that simultaneously considers multiple footprints. We show how these footprints can be embedded in a generalized optimization framework that takes into account pairwise relations among all footprints for robustly learning user profiles. Through extensive experiments, we find the proposed model is capable of learning high-quality user topical profiles, and leads to a 10-15% improvement in precision and mean average error versus a cross-triadic factorization state-of-the-art baseline.","inCitations":[],"pdfUrls":["http://faculty.cse.tamu.edu/caverlee/pubs/cao17sigir.pdf","http://doi.acm.org/10.1145/3077136.3080820"],"title":"What Are You Known For?: Learning User Topical Profiles with Implicit and Explicit Footprints","doi":"10.1145/3077136.3080820","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3077136.3080820","venue":"SIGIR"},
{"entities":["Computer","Habitat","Information needs","Information security","Password","Password management","Password manager","Password strength","Web application"],"journalVolume":"","journalPages":"295-310","pmid":"","year":2017,"outCitations":["3d46dbb0da1b4e0ee5b45c46525d9459fb94222d","0b83159ebfdd930695afb54c151cde23774dc642","bc2e813256b9101d8d98f6a165d45ac0c4f4821c","4fcb4f03afc8f7d780929afbf9584bb7e9ced6f3","c141e141f8d5e5cfe3f54317948d42700d433e46","8650b37db13b8352da0b31711edab817e63cd281","254d75c7b813201c38a69c1d12339845522f0af0","2c61a7a2ec8ac2178812fab42a222f35918f47ce","c218cad1ff66042802862e41f0e305a902453439","3443bb2ecbcff2f591267e0ec2923ce98cfe4ee6","956cbbf33ba15071efb11a54005f252d442700d2","0103b4a14ab5396b75c2eec39865e0cec66a8e19","1d944ba5648c72bc7686237044609305f07da1e4","2f8fe860cc8f3d60e0174f87d0099657e10155af","01d6be82fc9a1e103a93432f949ead3e3e208882","7ecef22d97a591a4b022ff22c05613c536030440","744109e3c147d5276391014364ed8beb90b054b7","a8b16f43341adc956022bca26d3727ab8148b857","84ef22df183ef4428882aa3a93369f994e0bc3ce","7ea4242f6d047cf7b31c19def5b6a0944fd88992","8bba0a42134ea5df896cdde59e62bbd90e9f4dd4","053982a9c7c0a16c9b080f800013b945d1135069","168488dc2088dc5a48e7c85e7fd487145d161223","418e058c0dd22b18994ebdba8bd4713bf92588f7","0cb0a2b5dac0972fa6388b2f31f76c89455a10db","48f1145733cbcb1e438271572267ddde5b463702","e8b16e99dd0b01bd897e11d58ecf4f8085755335","099ac9a2c85e5ce992371a19b478ee5283f3b264","4abdfb34d3511608bbd830c0549d2a3c929414b2","369d707c6bdf17645a322d0e2bc610798bc8c1b8","53852d69c008f9ebfb05939b4eb7c1f3279437e6","04645e17a1acb783a2ffb2b9b201624c76d52ae2","88dfa31abf1474407f2132ed911f52ec59b49ec6","1558b1d92f41eb01c49ba9c548a9a5adfb1aebae","2e1bd6af57a5717e84b56109d6c618cdaba67cc7","c950df133c430d0091e6d231c04c5fdf5030ddca","46f158aaace8a5cd2ba99320b43f201278b169cc","6193c241ac38d4c8c6a43ca72f0c6910fb4455d2","da2695f7ba0b56feccd9f4c3c2bad61c9881921a","50310949e3ca1a725a8f5e827ab511cd8dbddbaa"],"s2Url":"https://semanticscholar.org/paper/1be98efed329c080561820a39919222eb9d52bf2","s2PdfUrl":"","id":"1be98efed329c080561820a39919222eb9d52bf2","authors":[{"name":"Sarah Pearman","ids":["3438230"]},{"name":"Jeremy Thomas","ids":["40427406"]},{"name":"Pardis Emami Naeini","ids":["3599539"]},{"name":"Hana Habib","ids":["40458669"]},{"name":"Lujo Bauer","ids":["38572260"]},{"name":"Nicolas Christin","ids":["2637728"]},{"name":"Lorrie Faith Cranor","ids":["1699751"]},{"name":"Serge Egelman","ids":["2645852"]},{"name":"Alain Forget","ids":["35229534"]}],"journalName":"","paperAbstract":"Text passwords---a frequent vector for account compromise, yet still ubiquitous---have been studied for decades by researchers attempting to determine how to coerce users to create passwords that are hard for attackers to guess but still easy for users to type and memorize. Most studies examine one password or a small number of passwords per user, and studies often rely on passwords created solely for the purpose of the study or on passwords protecting low-value accounts. These limitations severely constrain our understanding of password security in practice, including the extent and nature of password reuse, password behaviors specific to categories of accounts (e.g., financial websites), and the effect of password managers and other privacy tools.\n In this paper we report on an <i>in situ</i> study of 154 participants over an average of 147 days each. Participants' computers were instrumented---with careful attention to privacy---to record detailed information about password characteristics and usage, as well as man other computing behaviors such as use of security and privacy web browser extensions. This data allows a more accurate analysis of password characteristics and behaviors across the full range of participants' web-based accounts. Examples of our findings are that the use of symbols and digits in passwords predicts increased likelihood of reuse, while increased password strength predicts decreased likelihood of reuse; that password reuse is more prevalent than previously believed, especially when partial reuse is taken into account; and that password managers may have no impact on password reuse or strength. We also observe that users can be grouped into a handful of behavioral clusters, representative of various password management strategies. Our findings suggest that once a user needs to manage a larger number of passwords, they cope by partially and exactly reusing passwords across most of their accounts.","inCitations":["63577654a93dcb808bce734973365ab8e6a991d4","0b196550a65c6ebb17104cdc631286bc741baf18","a7d50dbaf04757678ba9f6555e585f65dbcc73aa"],"pdfUrls":["https://acmccs.github.io/papers/p295-pearmanA.pdf","https://blues.cs.berkeley.edu/wp-content/uploads/2018/01/sbo-passwords-2017.pdf","https://www.ece.cmu.edu/~lbauer/papers/2017/ccs2017-password-reuse.pdf","http://doi.acm.org/10.1145/3133956.3133973","https://cups.cs.cmu.edu/~aforget/Pearman2017_CCS_SBOPasswords.pdf"],"title":"Let's Go in for a Closer Look: Observing Passwords in Their Natural Habitat","doi":"10.1145/3133956.3133973","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3133973","venue":"CCS"},
{"entities":["Application domain","C++","Citation network","Directed graph","Experiment","Graph labeling","Neo4j","Open-source software","Query language","Reachability","SPARQL","Social network"],"journalVolume":"","journalPages":"345-358","pmid":"","year":2017,"outCitations":["41770c3168a8918474603d96b634035677043980","259e93de2f10d395a1bdfb2dc6da72b6a3998572","9d4e533b6c8af347ca96c6c16c720a4145700fee","4410f0c48f982f960a54500df7bd88e4cab88927","3615c522a69d613491a780a47571a84c476c3712","6384234e698f793cfba0cbf890b1c2a2209d06b7","62cbcc203e2b2da2f281b2807c35aaa7bf5d296c","148edd9ac0ed0485f14f470949f64a9d92cbbc10","38b9c1d87249e9cf9bed0091d8970348aa645d35","3be0297876fedc5ecf91a6dd6a21d73a36b532f3","fa189694cc9b94ced0b41a072763cc6b7ba83e70","67b40f5353731f75695d5b07c9f03e8d10bd4933","31b63d505dbf6f2b9a60d0c45976f2cbd5cd9619","13bda7e7a6d3ae153ff1b8c546174d2bfac6c5aa","28eba259d5d7dc7daf95d982e626578fae790739","c2070e3e1fce3c420d4e3c2d310fb63f5aa7ccb6","174abff00624ac9c34ea5559e5cdbc7faf3b570c","0c2ff25bf68074214a960666bff2a7b0d5e29fcc","737e43bd36ac3cc785915fa2930997976137ef35","10aa9ee7caaf9381b6a0468ae899a9729824a6b7","a3d5e5d2fae76af242e40e35989237a8c3e6385f","6f8a2339aabb699d8810baed2564744ca837f009","ac34d93e9de470f5e3247a9dee327f345409b831","eb1cbb14f09e895b1d2c36d75811dec863190376","93b8c7b39c2e7c5d7ea3949a308a40e9eb62b83d","26a2b94a118334585f5d717b24ef06b6f9014ba8","c16886f0b9c785622ea321af14f378abd8bc25fd","3da502b57284259529044fe20d824666f4268fd9","5979f0e38db8c250f6e6ee10b6556d45eb2b7f73","7d94976271de76e03a266305b2d05ab4352e28af","3c0b574b98e2fae687f021d77637e24e2d2d641f","0658fda7abd4d2bae8515179f36482f4bd7976f6","c17014959370282e7c3efc96d9d831c1663c919f","93f1c84f8bd62d78315f73dcea626e32e6a670b9"],"s2Url":"https://semanticscholar.org/paper/bb12d6b59e4d2bd4bd5a060a8b4c5e73de9b671b","s2PdfUrl":"","id":"bb12d6b59e4d2bd4bd5a060a8b4c5e73de9b671b","authors":[{"name":"Lucien D. J. Valstar","ids":["10797369"]},{"name":"George H. L. Fletcher","ids":["2049346"]},{"name":"Yuichi Yoshida","ids":["1680651"]}],"journalName":"","paperAbstract":"Consider a directed edge-labeled graph, such as a social network or a citation network. A fundamental query on such data is to determine if there is a path in the graph from a given source vertex to a given target vertex, using only edges with labels in a restricted subset of the edge labels in the graph. Such label-constrained reachability (LCR) queries play an important role in graph analytics, for example, as a core fragment of the so-called regular path queries which are supported in practical graph query languages such as the W3C's SPARQL 1.1, Neo4j's Cypher, and Oracle's PGQL. Current solutions for LCR evaluation, however, do not scale to large graphs which are increasingly common in a broad range of application domains. In this paper we present the first practical solution for efficient LCR evaluation, leveraging landmark-based indexes for large graphs. We show through extensive experiments that our indexes are significantly smaller than state-of-the-art LCR indexing techniques, while supporting up to orders of magnitude faster query evaluation times. Our complete C++ codebase is available as open source for further research.","inCitations":["9c6bddcc4c04009abdafc4b3340868975552e1d1"],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3035955"],"title":"Landmark Indexing for Evaluation of Label-Constrained Reachability Queries","doi":"10.1145/3035918.3035955","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035955","venue":"SIGMOD Conference"},
{"entities":["Data aggregation","Domain model","Fastest","Hierarchical database model","Internet bottleneck","Network congestion","Overhead projector","Simulation","Span and div","Speedup","Supercomputer"],"journalVolume":"","journalPages":"223-232","pmid":"","year":2017,"outCitations":["176d712d084112b2e65e385e8220e4679c24f28a","05e0dd9ba23f99acf5537b51f3a3263d3febe6dc","2da4ab6c02d97fe47b589ddd450a5c41f2b47bb9","18ff47d4024f9ba7fdb7c21c6c49ffbe9a6ed99f","0b1d26613dc0bd12da5c3f9d637d5e8571621395","57eb0364d4c545a077ec7d66a067b0426962dda2","34e64b546a37df201ecb29cad0248df029a71adb","409ed5839cf6d0ba246d91f82d1ac33cbe600c27","dcba56ee1fa047e1c983336ecb4099dab46cd749","bd3d50ea47c6073d1dcd0582e49e01c3df702b23","59a902d3a87001aaf091752773e8b4679651499c","8de993e56cc95df26171741d8f33ae3d83f3261d","058224ac7b9bc0a0b82e62257656c7a6df62219e","2680e43fff9b16200106702e0c5165685312d52d","25d5f7757ebd0b7a5cde7bf64c83ad0020318f39","547014986afdf86ced23cdcce4583ee04f464160","c750b9288ed25777e5b7129139e01c143177324c","a7c58954468de7113ac1e1588a3efa6683add7f3","4468833a27f2641d15eee8335bc4263abc6d26ea","36033cc275f927d2835bce6d19ec727fdb1a2fb4","155f59e40f1ad2467e004dfcb4bb9ccf5522d1d1","1f1ddb2c47b45653f759e69fabdbf21aab7656f9","1103f46b77bed0f597e7289ee54073d5190853a9","919f9b4c78e1af2ba4c343ec504bc6193709ed77","c0c56908d343d52669e1aee072dd611681dc831f","12e7574576be81bcc9827754ec1593ed3e75d14a"],"s2Url":"https://semanticscholar.org/paper/04f0650ab41af3aad8c0476a9b06826c55356b99","s2PdfUrl":"","id":"04f0650ab41af3aad8c0476a9b06826c55356b99","authors":[{"name":"Sidharth Kumar","ids":["40361678"]},{"name":"Duong Hoang","ids":["1732339"]},{"name":"Steve Petruzza","ids":["8808472"]},{"name":"John Edwards","ids":["1870103"]},{"name":"Valerio Pascucci","ids":["1685087"]}],"journalName":"2017 IEEE 24th International Conference on High Performance Computing (HiPC)","paperAbstract":"Hierarchical data representations have been shown to be effective tools for coping with large-scale scientific data. Writing hierarchical data on supercomputers, however, is challenging as it often involves all-to-one communication during aggregation of low-resolution data which tends to span the entire network domain, resulting in several bottlenecks. We introduce the concept of indexing templates, which succinctly describe data organization and can be used to alter movement of data in beneficial ways. We present two techniques, domain partitioning and localized aggregation, that leverage indexing templates to alleviate congestion and synchronization overheads during data aggregation. We report experimental results that show significant I/O speedup using our proposed schemes on two of today's fastest supercomputers, Mira and Shaheen II, using the Uintah and S3D simulation frameworks.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/HiPC.2017.00034","http://www.sci.utah.edu/publications/Kum2017a/HiPC_2017_IEEE.pdf","http://www.cs.utah.edu/~sikumar/papers/HiPC_2017.pdf"],"title":"Reducing Network Congestion and Synchronization Overhead During Aggregation of Hierarchical Data","doi":"10.1109/HiPC.2017.00034","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HiPC.2017.00034","venue":"2017 IEEE 24th International Conference on High Performance Computing (HiPC)"},
{"entities":["2.5D","ChIP-on-chip","Computation","Computation (action)","DNA Integration","Interconnection","Interposer","Multi-core processor","Network on a chip","Routing","Scalability","Silicon","Simulation","anatomical layer"],"journalVolume":"","journalPages":"1-6","pmid":"","year":2017,"outCitations":["c22cd78260126ea8e0183c23aeb9a2ec928658e3","0a7929d3f54d7d0d6fe42f6378c0dc8f27c843f2","1b348a82450968c0d34348b3c64524ca36c5836a","17f07fe6da6a72be211a66c68bc46b3ee05e7583","69e13716985b2e86b6e8e61335a325c776ae0045","935ae58c43fc7d785e044a596b83b1ba73c6fbb1","03262c10910fed123e11cb1b143beff1eff9d7c3","7812b44e9f8ca754e934092b27d6b84d8f7b803b","f253b90255bcbfb08d5467e0cfde383a2455c4b5","cbbb8186de93d9e79d20e2122b9a7903d6b08cd1","818d3154455a372598d5b56eb6d76cebdc22c611","190ca682f7b22fb81f2e506354c93170e9721e0c","8de20d9e01b189c02f5e68ae3720965bed48c82c","43a82ee0a78aeafc9452053428c7caacc1cc152a","8d9b0e2cc4b01d9e0cd5a7ad746961f0be071599","b872e246d77ec5692a05a5ca0aa35168e202b3e8","30ee81b5d67c98c7c42c2adfacf400f4ffbb9470","9f93788eea83a284ad07141a78479f493a9c1e98"],"s2Url":"https://semanticscholar.org/paper/f87652bad3bc1623da538fa4e098dbf01bd6fa1a","s2PdfUrl":"","id":"f87652bad3bc1623da538fa4e098dbf01bd6fa1a","authors":[{"name":"M. Meraj Ahmed","ids":["40698778"]},{"name":"Md Shahriar Shamim","ids":["2227074"]},{"name":"Naseef Mansoor","ids":["29886952"]},{"name":"Sayed Ashraf Mamun","ids":["35827107"]},{"name":"Amlan Ganguly","ids":["40413136"]}],"journalName":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)","paperAbstract":"With the increase in number of processing chips in platform based computation intensive systems such as servers, a seamless, scalable, energy efficient and high bandwidth interconnection network is required. Newly envisioned silicon interposers with Network-on-Chip (NoC) interconnection framework have emerged as an energy efficient technology for 2.5D integration of multiple processor and memory chips, where multiple chips are mounted on another die called the interposer and are interconnected using the metal layers of the interposer die. However, conventional interposer based multichip integration is limited to edge-to-edge connections between the adjacent dies leaving the interposer's routing resources underutilized. In this paper, we propose large scale utilization of the available abundant interposer resources for multichip integration by implementing a hypercube interconnection architecture in an interposer for chip-to-chip communication. Through system level simulations, we demonstrate that such multichip system integrated with interposer can provide high bandwidth and energy-efficient communication under various traffic patterns.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/IGCC.2017.8323583"],"title":"Increasing interposer utilization: A scalable, energy efficient and high bandwidth multicore-multichip integration solution","doi":"10.1109/IGCC.2017.8323583","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IGCC.2017.8323583","venue":"2017 Eighth International Green and Sustainable Computing Conference (IGSC)"},
{"entities":["Algorithm","Apache Hadoop","Big data","Concave function","Domain-specific language","Fuzzy control system","Heuristic","Heuristic (computer science)","Job shop scheduling","Jumpstart Our Business Startups Act","Makespan","MapReduce","Self-tuning","System Wide Information Management","System administrator"],"journalVolume":"","journalPages":"49-58","pmid":"","year":2017,"outCitations":["0c83169bf4ebb29979bfe47708cb6b79b6e28755","1c79346e409f764ddef3c2d15bab2bb7d5f24f20","2af2d5e95a14365c82fb9e1795e1415c4e67dab4","eb4a5755fd012acba606651a332e4a1faff68f46","20244961dbba619d38e9115dfc63ebd90676d224","1d8465c3f5aee1b7a790f6eeb44637343861ba47","775cf1c0950692505aa72c8f5fd2140cf46c6b61","1d27d04e8cef4d32cb4e022c9f493a40a019f59f","0ea4380ff8bb30e6bd5fd888268d6f8f38229fb7","86c8b3a135f0163d9e04b6292e1f32ae7f25efdb","2a7d3b967a356c2a42f729048b0d3511b0005351","2cdcddb08ae6060e94cba6c9b2b58b87324e686f","45e2dd9fe949025ff7f82d888e5be8693dbd317d","bcc63f03bdf3418b380d2ecbf084935e8d5409a1","25128b9c24f7fe9919a1adb5e15586541cc5817d","f60c8d260dcc9f415de08150dde4182d7a89050f","2a91510713dcdfbed68f5d8885d63d5d7bb491f3","0541d5338adc48276b3b8cd3a141d799e2d40150","9b707fda4ef927f92d9ecb86dea82bd1ede59d49","6f2270c81885e2f5b3b6bc86f0b2099af9c55534","b380e144b1a5052277b686285d420e2b0dcb49e4","3d84f3e43358e8fad5386f5bf352d77286a655fa","8ba425438b6457d7f13f5e5c36acb8c1654ef677","4a0bb4eece00f3e9445d1a0d933422aa408ce8d1"],"s2Url":"https://semanticscholar.org/paper/275c76fdc10c078c4cafc1f3c3e431dc47f4e425","s2PdfUrl":"","id":"275c76fdc10c078c4cafc1f3c3e431dc47f4e425","authors":[{"name":"Gil Jae Lee","ids":["3460040"]},{"name":"José A. B. Fortes","ids":["1705758"]}],"journalName":"2017 IEEE International Conference on Autonomic Computing (ICAC)","paperAbstract":"Many big-data processing applications use dataanalytics frameworks such as Apache Hadoop. Such frameworks have tunable configuration parameters set by experienced system administrators and/or application developers. However, tuning parameters manually can be hard and time-consuming because it requires domain-specific knowledge and understanding of complex inter-dependencies amongst parameters. Most of the frameworks seek efficient resource management by using slots or containers as resource units to be assigned to jobs or tasks, the maximum number of slots or containers in a system being part of the static configuration of the system. This static resource management has limited effectiveness in coping with jobs&#x2019; diversity and workload dynamics, even in the case of a single job. Seeking to improve performance (e.g., multiple-jobs makespan and job completion time) without modification of the framework, this paper proposes a hierarchical approach using a fuzzy-logic controller to dynamically adjust the number of concurrent jobs and additional controllers (one for each cluster node) to adjust the number of resource units assigned to jobs on each node. The fuzzylogic controller uses fuzzy rules based on a concave downward relationship between aggregate CPU usage and the number of concurrent jobs. The other controllers use a simple heuristic algorithm to adjust the number of resource units on the basis of resource usage by job tasks. A prototype of our approach was implemented for Apache Hadoop on a cluster running at CloudLab. The prototype was evaluated using realistic workloads generated by SWIM, a statistical workload injector for MapReduce. The evaluation shows that the proposed approach yields up to a 42% reduction of the jobs makespan that results from using Hadoop default settings.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/ICAC.2017.45"],"title":"Hierarchical Self-Tuning of Concurrency and Resource Units in Data-Analytics Frameworks","doi":"10.1109/ICAC.2017.45","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/ICAC.2017.45","venue":"2017 IEEE International Conference on Autonomic Computing (ICAC)"},
{"entities":["Clustered file system","Confidentiality","Data store","Distributed File System (Microsoft)","Encryption","FITS","Outsourcing","Privacy","Protection mechanism","Replication (computing)","Service control point","Software deployment","Software-defined storage","Stackable switch","Time complexity","User space"],"journalVolume":"","journalPages":"9:1-9:12","pmid":"","year":2017,"outCitations":["5f3f9223c5c9f896be099bc177929febad508407","0f55217987ec25afa0f815e0aa3957e669b0280e","111e2d5634cb30d5d841cdb22563f9b371fb5f54","b4b26e52580d7eeb0ccbc8e5529e34a831bc4e65","12a0046a1197ae63c3d616c74e367dc583cef196","28022c2d8b0b2e7d70c138638472c525058c33be","807df0de011be333fc1dd06ac58c426e8b3437ef","165a115fe85185e84f2d073c619fd4a787b03201","bef33ef2eb5f17824ae0f708b5815ac42f6612d7","1cfee3e6bad11c5c92cd06065064c474a00e2412","74ebec1d4d8f195af756e10cb818f58e32270b2e","418e5e5e58cd9cafe802d8b679651f66160d3728","7c4cf4515091593106242f169dac0dd2208f9d8b","a1c96d8046181a0340f6d57d139527b4b23a63da","1ab7c8129751d27f1f4ed0afb2a57bcc29005b47","03e255b248ce618f8891484cb747b2ef4bb75448","73ce1e41c2e0a97a929b9b9999c5daabd7a037b4","288c5179ca4b9c6849ec99fafdd9f85593fc6416","762e677fd7a1d7ee74da005cce138d72a07fb452","0eb6c7b613f86f6c72e05f08f4dbe37dd9290cfa","65a2cb8a02795015b398856327bdccc36214cdc6","d4dd35bf5deaa8986f8b9b025a0dcbef88d6a8b5","535ffd4979373706dc7d4cc6ca670f518fce3f2d","28e0b55b96bcab20c0f914d4c2d023c361c1b3c7","d1776dfb8f66cb40cadcac9bb66760ec9b7b3920","4f91a5354dae88cdf38c54c658ed634580cae96a","10425a28c7f053d0939e8c74ad81f59d7008138c","25a331da05db524f46797327adecac83e33581a9","b46cb54a87a448212af37f2594a512fec39a059e","257c1c169dd0ae98e273efd0d0948f2a028d4c3f"],"s2Url":"https://semanticscholar.org/paper/f912e1c1ded4faaa8576fc942a8931740d43664b","s2PdfUrl":"","id":"f912e1c1ded4faaa8576fc942a8931740d43664b","authors":[{"name":"Rogerio Pontes","ids":["2775778"]},{"name":"Dorian Burihabwa","ids":["3404728"]},{"name":"Francisco Maia","ids":["2887942"]},{"name":"João Paulo","ids":["2911639"]},{"name":"Valerio Schiavoni","ids":["2106027"]},{"name":"Pascal Felber","ids":["1743906"]},{"name":"Hugues Mercier","ids":["2783810"]},{"name":"Rui Oliveira","ids":["1679234"]}],"journalName":"","paperAbstract":"The exponential growth of data produced, the ever faster and ubiquitous connectivity, and the collaborative processing tools lead to a clear shift of data stores from local servers to the cloud. This migration occurring across different application domains and types of users---individual or corporate---raises two immediate challenges. First, out-sourcing data introduces security risks, hence protection mechanisms must be put in place to provide guarantees such as privacy, confidentiality and integrity. Second, there is no \"one-size-fits-all\" solution that would provide the right level of safety or performance for all applications and users, and it is therefore necessary to provide mechanisms that can be tailored to the various deployment scenarios.\n In this paper, we address both challenges by introducing S<scp>afe</scp>FS, a modular architecture based on software-defined storage principles featuring stackable building blocks that can be combined to construct a secure distributed file system. S<scp>afe</scp>FS allows users to specialize their data store to their specific needs by choosing the combination of blocks that provide the best safety and performance tradeoffs. The file system is implemented in user space using FUSE and can access remote data stores. The provided building blocks notably include mechanisms based on encryption, replication, and coding. We implemented S<scp>afe</scp>FS and performed in-depth evaluation across a range of workloads. Results reveal that while each layer has a cost, one can build safe yet efficient storage architectures. Furthermore, the different combinations of blocks sometimes yield surprising tradeoffs.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3078468.3078480"],"title":"SafeFS: a modular architecture for secure user-space file systems: one FUSE to rule them all","doi":"10.1145/3078468.3078480","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3078468.3078480","venue":"SYSTOR"},
{"entities":["Algorithm","Compiler","Declarative programming","Distributed computing","Machine learning"],"journalVolume":"","journalPages":"961-976","pmid":"","year":2017,"outCitations":["762756eba9168421d338f0aedd04e0111ca75462","dc17f733f3e917c2076e9100ee4ecbdf17d9ac23","65cdab424fe449deaab359a1f8e16899ac91dd2a","2359b12b0f4c70477f51455d9eb41923e740104a","244f7c483b1035144f04f7c58f20c3f806d3f1b3","bd4019171413bb40d4c4f3a5cfaab1fe112455ee","5b51ce3bbe7791e1533be7d4d76b2452bf043954","264026d32af90ed520dd4d494627b67184d39a57","247e25aa53dd61715f2a217138e30a917eeead08","0122e063ca5f0f9fb9d144d44d41421503252010","2f3902d4e4b793c74fd368ce9b6f3f28a2a1206f","0f890546c00ee8b35c96bc712a2ecfe574af3754","7ec028ace29244cb74c105327a7e4177a34aa6bd","3f4f9efbd2c62ccab0e55dade96489610d640ce3","04c73e4f13a19a2ce270a0aa391bd7842aa113ae","5c3785bc4dc07d7e77deef7e90973bdeeea760a5","24281c886cd9339fe2fc5881faf5ed72b731a03e","09c5293b647fca40fde28ac6c38737f07e873e41","d0bc3c139c9a0129a87aa5f724e7bf82b4b04ce6","9216203ba2dda573ec5401f467cae84149335fcb","341a08d1854b5ecf871bbb4c7833a435927abbda","11dc0c04a27ec8f864893086430329efa7448335","9cea29601e72fd8e6ef8419aa31ddc103eceb7f8","3dff11679346f5344af1018cad57fa14cc349f2f","128985b85556c30ad405863f2a34340049957616","24679ccb0586642553a21e9fcd8aa5a57f97cabe","11cbbb9f48fcaeb4950defe38ed861171ced309b","3c4776e5f96ebe8a6de1a855f523a28c687eb994","2937fd34930ef843a0bd8d6886f9915b8695b7b4","61e2f35b4ef5d569aa3084e3118ea16df200965f","059eb34d95c73e37dca8e35b0ac5a2fb0142f3ee","3c78905888472f4db518b8deb055e115586d3084","5c634d35db77e635aa97ab31adee0653c80962e8","ef5363f8d378ccbddbc8f2d3ec26517b75184f62","29ce41f7a9cfc2e20fbb2085e9189d7a1fd67640","2cdcddb08ae6060e94cba6c9b2b58b87324e686f","11a08a7a0442bfdb8f3f50f0b18096287b2daca3"],"s2Url":"https://semanticscholar.org/paper/28b65b0d7519a598c8229dbe54b7a29e4f071ef7","s2PdfUrl":"","id":"28b65b0d7519a598c8229dbe54b7a29e4f071ef7","authors":[{"name":"Zekai J. Gao","ids":["2836500"]},{"name":"Shangyu Luo","ids":["40298273"]},{"name":"Luis Leopoldo Perez","ids":["2248828"]},{"name":"Chris Jermaine","ids":["1741680"]}],"journalName":"","paperAbstract":"We describe BUDS, a declarative language for succinctly and simply specifying the implementation of large-scale machine learning algorithms on a distributed computing platform. The types supported in BUDS--vectors, arrays, etc.--are simply logical abstractions useful for programming, and do not correspond to the actual implementation. In fact, BUDS automatically chooses the physical realization of these abstractions in a distributed system, by taking into account the characteristics of the data. Likewise, there are many available implementations of the abstract operations offered by BUDS (matrix multiplies, transposes, Hadamard products, etc.). These are tightly coupled with the physical representation. In BUDS, these implementations are co-optimized along with the representation. All of this allows for the BUDS compiler to automatically perform deep optimizations of the user's program, and automatically generate efficient implementations.","inCitations":["4853a26200889f033c0f509abf0f91d8cafba55b"],"pdfUrls":["http://doi.acm.org/10.1145/3035918.3035937"],"title":"The BUDS Language for Distributed Bayesian Machine Learning","doi":"10.1145/3035918.3035937","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3035918.3035937","venue":"SIGMOD Conference"},
{"entities":["Algorithm","Data center","Direct memory access","IP address spoofing","Quality of service","Reflex (building design software)","Requirement","Scheduling (computing)","Service-level agreement","Throughput"],"journalVolume":"","journalPages":"345-359","pmid":"","year":2017,"outCitations":["57579a5708af144e71de6d41711dab7adac325f8","be4c6170ee4fd72ff5c8fc92e3d6ba5cba774cf6","3fbba3719b3e07084cbc85daf2a1a094c9335b6d","0d07c2ae7c8158b35cf58b19865d9f5efc7be5d6","20e3bc47629b29a1b02dccd7c2b63beb7a7bd36e","87269b265465eda145f1b12ee7761b76738d1ad4","048a09d7c8713dc2533c1e31ac3f224868293461","18a5f443299784479e78d9e77f175af57cb2fa2b","0c4393689eb4c16ed490f93a6452befc1703a29e","111e2d5634cb30d5d841cdb22563f9b371fb5f54","2ddb902a1a995c26210b631fc33bf897dba76189","2a9d09d8e2390c92cdaa5c8b98d6dd4cb394f638","0d62acaefd4c4f41fd5814c8d9267d7798de9284","0abe5211e209b272890ba6820a33b72e938b0b3b","1d2871c56d07a35e6709d535fbbb2df6b434962a","8273e1895ae217a2e2f8654d5cbd4cddaaa32306","68daa59a032b2260c4e1727cb4e654ce32778a68","09bd66ed15985caa6b0bf1d54a36b508141ed128","478f51822252e4221c920bbf9d30a0b0491045ec","7b420218b4e797dcc6ca96f6c6c3ec29a9688c07","5cde06240acc288c986a10ee39f17ea28c9ef05c","0b2aa4a87a6c253472e801080614da0dab47cfc2","557cea900e954ef122b98ac2122fdde5ddbb3002","3767bfac1eb78148bb61aca159f45dd4cdb588ff","30419d0e0fcaebbfbcdb88f702bd01306d14fb15","01e9ddf1062f9a7d7847bb9bcd2371ce6e0d3e29","1820a34042d6371a9e20484b0c63b698eb522a6c","0c575d220d8bc125d6a2290984c8e2b87011631d","102bf68c4227380dab0567d8f17fb720d3421525","08632fe2b934ed15d3499e7321282c81adc2c390","65a2cb8a02795015b398856327bdccc36214cdc6","3e7fd5ac3fc1ab19c985c97a0614e4109fa91583","0a8e0a9f0ae9910d5ecf165071559a2c4191a098","61977858b3eea4f5a6d81393301e7298ade7a2d8","69fde6e922375d9cc01c25f2b6b2161591812230","03543f75c4fe0c49f81af789a1c7293ff0e4e107","2c11d5117a8b97ef2ef268e5fb38e8c5ffb1c58c","87064d58ef49df1b47c4ac74258fda1aecab2b68","04f94f8d48badcdcaab93c28a60414c7b1ffd274","0b2c84be9e9f97f2464ad9d09be5f4c37edda47e","13d6c568c770ff5a070072e720fb34b0037cdab8","9bcc0099f0d34c391ca1a3c5220cb0b3b33c4183","118da4d571ee02b4f31b5c4c078857472e77ba1e","13b26d008210fffeb8a77c9e90f1ff837523c536","5909192b374eac0cda4df7c986ebc997cdcd6002","5f3f9223c5c9f896be099bc177929febad508407","04e7e499e89364fcb71954656539d6a53f9c991d","132f00de21cee656d00ad6779f1926070ad59544","169a08383bcb0577e6b7d4d1445359383fe07fc7","431706e738f8c317bc76959a122b5bcbe2defd29","7129b305ce45f83127e928e8510da9fae0783905"],"s2Url":"https://semanticscholar.org/paper/0b877aed79939b2ba81b6dc58ce8544c6b532bcb","s2PdfUrl":"","id":"0b877aed79939b2ba81b6dc58ce8544c6b532bcb","authors":[{"name":"Ana Klimovic","ids":["1971184"]},{"name":"Heiner Litz","ids":["2655459"]},{"name":"Christoforos E. Kozyrakis","ids":["1700331"]}],"journalName":"","paperAbstract":"Remote access to NVMe Flash enables flexible scaling and high utilization of Flash capacity and IOPS within a datacenter. However, existing systems for remote Flash access either introduce significant performance overheads or fail to isolate the multiple remote clients sharing each Flash device. We present ReFlex, a software-based system for remote Flash access, that provides nearly identical performance to accessing local Flash. ReFlex uses a dataplane kernel to closely integrate networking and storage processing to achieve low latency and high throughput at low resource requirements. Specifically, ReFlex can serve up to 850K IOPS per core over TCP/IP networking, while adding 21us over direct access to local Flash. ReFlex uses a QoS scheduler that can enforce tail latency and throughput service-level objectives (SLOs) for thousands of remote clients. We show that ReFlex allows applications to use remote Flash while maintaining their original performance with local Flash.","inCitations":["14c9c04973ca9bd1cecf0892a9b90a54aa930098","7818619eb25c7c1bb470a5b5572fa0371de721bc","5483feb2b08312c7ed39336c0b3e68a39be8e016","c206dd5b90104df0fd12a2c1f3fb0f913ee08c0b","5451e8f4e616600f6061a95b435d3d3b75f4c69a","e5c8095c2a87b474cb76e0d1d7dc9a8a37f3a80e","1d08d231ec66645ec56d2210c1a7c6b44c6ff041","ae3d5033213ea2f022b806a88e28c74aa2a9a670","874c4958275c645e1261f92e42c3fbefd777ec7d","65fef0cd15b565055f21cf8c489cae39dd569220"],"pdfUrls":["http://csl.stanford.edu/~christos/publications/2017.reflex.asplos.pdf","https://web.stanford.edu/~anakli/pdf/reflex.pdf","http://nvmw.ucsd.edu/nvmw18-program/unzip/current/nvmw2018-final35.pdf","http://doi.acm.org/10.1145/3037697.3037732"],"title":"ReFlex: Remote Flash ≈ Local Flash","doi":"10.1145/3037697.3037732","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3037697.3037732","venue":"ASPLOS"},
{"entities":["Fault tolerance","Hexahedron","High-resolution scheme","Image resolution","Numerical analysis","Server (computing)","Simulation","Supercomputer","Terabyte"],"journalVolume":"","journalPages":"61:1-61:14","pmid":"","year":2017,"outCitations":["f7a8d8df3251d28561791cd83ebdef00c771af19","1a69fd58d883049e24ec734529ad5caf9f850620","3519add893934bac5cf334d0719d953746136513","a03d6ee4ea70eb7feaa65ab046ffc2232d76b0f0","1e52da6571efc3fbc979afb5a07e44d381b730e7","c46427857446a7534ae883e89cc4b3d0044dde59","d225032c36cfae444c010427af88026bf85e5253","159e4774e3254d944c6463f10de07fc60ae81a11","d164091af9c60edee0bda14a828b6797145a8062","0011e3ac148971c8df1fe560c70692a5261375d2","4224374796da64e17fce96033d4cd42240d80eaf","6fa9035d3c8b450071bae8dbb6d2c1d3f829e16a","eb399f6ae21f78e231d8d98c231194891b2bc5a9","04856a5a8c24b7e259730bb2096c31cd2929cd08","5b5dfbfffeade87035fca8fadca1a7f27f8a72fe","c73a30210e1a777bb176382a86ec70e822ea98c0","4fe2bf624e18d71d87ae36824606c42c64446562","41c97a6b41aefc6b0e0a3c702db080fd5aeef6f5","eb11fa122dd73d516ce29172720575d3d41ed9d0","a6606bb5fbe5815bc1d740a60334d0b2b189167f","55582978748505a665b044e61995d701c2139902","15c0356be4fa9566269b912278aca5a2d10d6d16"],"s2Url":"https://semanticscholar.org/paper/05acdf395981f7c04957b0f7583d34b6b172b883","s2PdfUrl":"","id":"05acdf395981f7c04957b0f7583d34b6b172b883","authors":[{"name":"Théophile Terraz","ids":["28262989"]},{"name":"Alejandro Ribés","ids":["21555557"]},{"name":"Yvan Fournier","ids":["2316659"]},{"name":"Bertrand Iooss","ids":["3148002"]},{"name":"Bruno Raffin","ids":["2583571"]}],"journalName":"","paperAbstract":"Global sensitivity analysis is an important step for analyzing and validating numerical simulations. One classical approach consists in computing statistics on the outputs from well-chosen multiple simulation runs. Simulation results are stored to disk and statistics are computed postmortem. Even if supercomputers enable to run large studies, scientists are constrained to run low resolution simulations with a limited number of probes to keep the amount of intermediate storage manageable. In this paper we propose a file avoiding, adaptive, fault tolerant and elastic framework that enables high resolution global sensitivity analysis at large scale. Our approach combines iterative statistics and in transit processing to compute Sobol' indices without any intermediate storage. Statistics are updated on-the-fly as soon as the in transit parallel server receives results from one of the running simulations. For one experiment, we computed the Sobol' indices on 10M hexahedra and 100 timesteps, running 8000 parallel simulations executed in 1h27 on up to 28672 cores, avoiding 48TB of file storage.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3126908.3126922"],"title":"Melissa: large scale in transit sensitivity analysis avoiding intermediate files","doi":"10.1145/3126908.3126922","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3126908.3126922","venue":"SC"},
{"entities":["Branch predictor","Code coverage","Compiler","Control flow","Coprocessor","Dataflow","Graphics processing unit","Hardware acceleration","LLVM","Microarchitecture","Parsec (parser)","Program analysis","Speculative execution"],"journalVolume":"","journalPages":"565-576","pmid":"","year":2017,"outCitations":["0fb53e9325ebf8dffc2ab128ebf1d75a7e26c415","4d7927261704a8783e330aa7cae9c1fc84c04917","e55ae3973428baa12b811a66e3195d33c96238df","3f210a463e6d8054929ee98267b7800e49275e06","53a0f3e52e18364f7163d0a64fc8659058bc5485","07f3b8cfd59624acf80e16794bd3f2bc69acd8e7","36d31540ab5977ac72d17cdb1a483dd4f1569048","0659411ebccf1abca4f9a3a5c8744b8bb153933e","98ec566b3e7177701cae04921578b2322eafb92e","6fbb7db25a5a3a2788e2b16a5e54abc1ac36aa76","ab6a42d9c0001f5ff6245b6e429c57f78317b361","0dcce77ec3dbbe511e9c53c284cb7f12cbc245e0","24cba2623f7d9387f74eda81b76cd281486aa540","6c5462d31a0d0f4e6cb2ff7ae795250957d9fcab","0502eaea10b67788d74e4f4a635f1723bb29e7db","63cc9119a1d29ef68c8ae5d1db44f53fe15625e5","2616c0df5d07bd88356381976243f21b4ddd0344","0a2af2773ca4fcbd22cd7580d29ac7739bcf028c","13a6c714cddeded37a69205f39935da4e7082f43","102fc630c42ee3c73243bd08936aa7e72ebb8daf","3117c82b6da03bd6ec730a805255c253ec153da7","12a233efbdd874afdeb8a1e6fe71c4ccff758175","5646a51461b64be3e9511dff06ea5abef0a399d4","f632d67c13a113fd468d910078b4be180f92127f","320a6faa396f27f6f83b22ded48944ffd574fa1e","04b6aadef5b51bfbefd10c1513313dc4292693eb","4ab0e888da81ed3f1b891f3c22fdc8e07b12b286","1087e2e1244665c9574ab5914ae13c6c88bcc096","352a8957005dc5519b15ed1870751ec494d66395","269c24a4aad9be622b609a0860f5df80688c2f93","2a70eafeb6e80070ecfa6cbd05864d2e233c5dce","0af2605cf1d628d36106770b8e6f97a40909ce43","358bf7354dae4de25cc9bae898fb5916d98b66d0","2e5ef3e461eaccf533aaae000ef847ae581d4363","03b2e534532e9558e560df0bed74976b8f48c1a5","16019260ae941f58c2887459cb1bebb2d3dd2c57","18cd7b2c5323b8017e3fd58968826a6d1e419923","58f76b7456081a7d9bd405348c0ff74134a13121","253853ba8c6a69ec2898befe924ca17ae01c9127","bcb288389d4318494887fe20ee68b6b18f39a3a5","345b6a3e596fc541e766494433146bd251e0a628"],"s2Url":"https://semanticscholar.org/paper/5dc51725500b887b38c6a0fb6a849fd74f1696f2","s2PdfUrl":"","id":"5dc51725500b887b38c6a0fb6a849fd74f1696f2","authors":[{"name":"Snehasish Kumar","ids":["37852689"]},{"name":"William N. Sumner","ids":["2951954"]},{"name":"Vijayalakshmi Srinivasan","ids":["33624938"]},{"name":"Steve Margerm","ids":["10680647"]},{"name":"Arrvindh Shriraman","ids":["1807593"]}],"journalName":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)","paperAbstract":"Technology constraints have increasingly led to the adoption of specialized coprocessors, i.e. hardware accelerators. The first challenge that computer architects encounter is identifying &#x0022;what to specialize in the program&#x0022;. We demonstrate that this requires precise enumeration of program paths based on dynamic program behavior. We hypothesize that path-based [4] accelerator offloading leads to good coverage of dynamic instructions and improve energy efficiency. Unfortunately, hot paths across programs demonstrate diverse control flow behavior. Accelerators (typically based on dataflow execution), often lack an energy-efficient, complexity effective, and high performance (eg. branch prediction) support for control flow. We have developed NEEDLE, an LLVM based compiler framework that leverages dynamic profile information to identify, merge, and offload acceleratable paths from whole applications. NEEDLE derives insight into what code coverage (and consequently energy reduction) an accelerator can achieve. We also develop a novel program abstraction for offload calledBraid, that merges common code regions across different paths to improve coverage of the accelerator while trading off the increase in dataflow size. This enables coarse grained offloading, reducing interaction with the host CPU core. To prepare the Braids and paths for acceleration, NEEDLE generates software frames. Software frames enable energy efficient speculative execution on accelerators. They are accelerator microarchitecture independent support speculative execution including memory operations. NEEDLE is automated and has been used to analyze 225K paths across 29 workloads. It filtered and ranked 154K paths for acceleration across unmodified SPEC, PARSEC and PERFECT workload suites. We target NEEDLE's offload regions toward a CGRA and demonstrate 34% performance and 20% energy improvement.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/HPCA.2017.59","http://www.cs.sfu.ca/~wsumner/research/papers/hpca2017kumar.pdf"],"title":"Needle: Leveraging Program Analysis to Analyze and Extract Accelerators from Whole Programs","doi":"10.1109/HPCA.2017.59","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCA.2017.59","venue":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)"},
{"entities":["Attribute–value pair","Computer data storage","Load balancing (computing)","Multicast","Replication (computing)","Routing","Scalability","Software-defined networking","Systems design","Value (ethics)"],"journalVolume":"","journalPages":"29-40","pmid":"","year":2017,"outCitations":["155ca30ef360d66af571eee47c7f60f300e154db","b682167e6bd92e1307f58f56c86613329e8ab79a","0ab860d9226709aad6842e12b7a394089e396f35","3cb34f7a770836bcfeef28f844d670b8a014ffa8","130d640b53a1d6700b67a4ea4256071ae18e0ee8","0541d5338adc48276b3b8cd3a141d799e2d40150","9aa0d7253574e50fe3a190ccd924433f048997dd","0b5c26697d7fe2fd90f337934de63dc973195dfa","01f3885dc0ca9ffabf787d9b825bcb4ff4ada06a","01e9ddf1062f9a7d7847bb9bcd2371ce6e0d3e29","29a05cde1994548e2e9487822248c679626c6241","3fc93257ac94aa8d6505c19077058e68622345b6","514a5c15e8cf3f681febecad954a4508d9189c99","4329fab4771dd4cf50694804d4bafca8f40dbbab","2bef12742683926a29888fda5798ac32d12a30fd","aaba89dc882c46cf0ff3e18ab663792a964f2272","1c8195cadc7ad4a8b59b16fe77574dd6d160d7d2","24c6e70c583daed1852637ec42d4589556ac59d3","ac138994a057a7dc5683be734502643e4802f2bd","01667cd68d259d08807e266e07c4f8eb1c81d2af","2da760f90c3d2bf6598becdde9063093f488548c","00f7b192212078fc8afcbe504cc8caf57d8f73b5","76eea8436996c7e9c8f7ad3dac34a12865edab24","75032b6df2f3988d2cb6988c73cbc01c7b9e80cb","3439120d0052525992e34bd200e7f3985c10b1bc","1d99b7749a9311d2db24a3d84728e444eff23e4b"],"s2Url":"https://semanticscholar.org/paper/1138145ea2a489b67084b066b965629f5562b6d8","s2PdfUrl":"","id":"1138145ea2a489b67084b066b965629f5562b6d8","authors":[{"name":"Samer Al-Kiswany","ids":["2237748"]},{"name":"Suli Yang","ids":["2806362"]},{"name":"Andrea C. Arpaci-Dusseau","ids":["1743175"]},{"name":"Remzi H. Arpaci-Dusseau","ids":["1703415"]}],"journalName":"","paperAbstract":"We present NICE, a key-value storage system design that leverages new software-defined network capabilities to build cluster-based network-efficient storage system. NICE presents novel techniques to co-design network routing and multicast with storage replication, consistency, and load balancing to achieve higher efficiency, performance, and scalability. We implement the NICEKV prototype. NICEKV follows the NICE approach in designing four essential network-centric storage mechanisms: request routing, replication, consistency, and load balancing. Our evaluation shows that the proposed approach brings significant performance gains compared to the current key-value systems design: up to 7&#215; put/get performance improvement, up to 2&#215; reduction in network load, 3&#215; to 9&#215; load reduction on the storage nodes, and the elimination of scalability bottlenecks present in current designs.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3078597.3078612","http://research.cs.wisc.edu/adsl/Publications/nice-hpdc17.pdf","https://cs.uwaterloo.ca/~alkiswan/papers/NICE-HPDC17.pdf"],"title":"NICE: Network-Integrated Cluster-Efficient Storage","doi":"10.1145/3078597.3078612","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3078597.3078612","venue":"HPDC"},
{"entities":["Algorithm","Data center","Dynamic circuit network","Failure rate","Simulation","Stock and flow","Throughput","Time complexity"],"journalVolume":"","journalPages":"419-428","pmid":"","year":2017,"outCitations":["1eddf92320697dbaae59cb84fafd5af73e0fc865","3a5121571e1c49cdb961a4d89d555240f388088c","a91f04a19f41fd2fb9bf19daf6b4141f81bd7d44","12d3952369fd92db86d4a3fff0a6fa8de3509095","1376bd56c64639af4645625fd9755c83b2bf7cda","c38507bf3f1ccaf594fc86b9b86d630224f412cf","74bfea5aeddb147b9749a72780b50f69badd3e17","5a76b9bb4d2e4be3d327eb8c15c8b52d6436f50c","32fef7e6561b553355821f78cda52cf9e4832030","756883a19a9ed652647d625a863e22f70e94d7c9","0f8b04cb89e455ceadf0c88fd5dd9f9a7f338ba9","00ddc85d502aa4bdc45a3b8b9099fad75938b50a","050c5155ac485bc8a43bfff3979d2d6bdc7320ae","69e1f457561b1832983e1289adde3f288aa7e3a0","64a6dd2a598d5f012a54fe6ca06d4f7235f66626","288763b8420ef17baf2f0214cf283433fcb4a447","282c6a3b573051e3e799d73cfc623ccbd68bcd6a","138856ad6b8b4cca92965aacb20961aaa4e34a92","1716eab9042dcb5595c94ea68f23b66ab76e237f","129567778989fab23b50812b3df30e899e2d6a4e","1338104c39381c594f699e1942ea1c937608b7a5","5594c2ddde27f4262a53668ca9b09ad7a9453102","bb8b82c7855897bcdd6f41e61b0642666f193ad2","6bf13254711f8bf287fd12749003a43ef3631612"],"s2Url":"https://semanticscholar.org/paper/35f894ec47f160f5506a2ba6cac559bb6ecfe5d0","s2PdfUrl":"","id":"35f894ec47f160f5506a2ba6cac559bb6ecfe5d0","authors":[{"name":"Jiyan Sun","ids":["2840209"]},{"name":"Yan Zhang","ids":["32055832"]},{"name":"Xin Wang","ids":["1705489"]},{"name":"Shihan Xiao","ids":["1994540"]},{"name":"Zhen Xu","ids":["2100058"]},{"name":"Hongjing Wu","ids":["1703429"]},{"name":"Xin Chen","ids":["1719935"]},{"name":"Yanni Han","ids":["8361658"]}],"journalName":"2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS)","paperAbstract":"Multi-path TCP has recently shown great potential to take advantage of the rich path diversity in data center networks (DCN) to increase transmission throughput. However, the small flows, which take a large fraction of data center traffic, will easily get a timeout when split onto multiple paths. Moreover, the dynamic congestions and node failures in DCN will exacerbate the reorder problem of parallel multi-path transmissions for large flows. In this paper, we propose DC2-MTCP (Data Center Coded Multi-path TCP), which employs a fast and light-weight coding method to address the above challenges while maintaining the benefit of parallel multi-path transmissions. To meet the high flow performance in DCN, we insert a very low ratio of coded packets with a careful selection of the packets to be coded. We further present a progressive decoding algorithm to decode the packets online with a low time complexity. Extensive ns2-based simulations show that with two orders of magnitude lower coding delay, DC2-MTCP can reduce on average 40% flow completion time for small flows and increase 30% flow throughput for large flows compared to the peer schemes in varying network conditions.","inCitations":[],"pdfUrls":["https://doi.org/10.1109/IPDPS.2017.40"],"title":"DC^2-MTCP: Light-Weight Coding for Efficient Multi-Path Transmission in Data Center Network","doi":"10.1109/IPDPS.2017.40","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IPDPS.2017.40","venue":"2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS)"},
{"entities":["Benchmark (computing)","Concurrency (computer science)","Concurrency control","DACAPO","Database transaction","Lock (computer science)","Naivety","Overhead (computing)","Programmer","Programming language","Secure by design","Shared memory","Side effect (computer science)","Smart Battery","Software transactional memory","Static program analysis","Transactional memory"],"journalVolume":"","journalPages":"299-312","pmid":"","year":2017,"outCitations":["4b328006a699106fa809cc610b799a2d03bc77a4","6756d3e0669430fa6e006754aecb46084818d6b6","23b0d41c138979705494222035cd07fc95a5faf8","2bf4940710deb2571e93b1c922e8e7452e854afd","6850ed761f8c2c796019b6359b6190fe6b2d2b42","d2268a9ae1607965c0cd6a85da6194e630cb9496","e6961c43facdd83f3efa7bc77bfcb76ac2b1553a","280b2b0bc4172756001ceda89cd102ba4afbbfe3","171695dfdb42ea09ea3207f0f5fd11985c02e671","a10fde829f83a5e5c101de85dd78e330c9c33d1b","100671bc2d560d42d85f75bdf5deb124cb79d2e2","5987b948677c5528a061890f4df507c85a5a97b5","2295c028bb44dfdbf185876d04a0d37fa14a89d8","023ba3dff9e17a15ae8448ec6cacc3e9a5ff116a","2ac3c4537be12b52f9e60d140ccf5621dc43cb75","0065c8c9bf4961d637a69e26a8045074929a8cd3","0f1042350e2c97117620d9f5182f94262f1f5ac0","ab3f531f3c6e4920c9ba4b437d997c0ce797f5b0","00aee6e171c40e54ec7eb2240192820871ca5ded","13e8df0a6afd8565ef644c87f4cb94aa183bc113","7e40209617935569a12a104c354eabf029a3b537","a7b5b9d048572577c82461ce3c9330f1875bfaf9","09ed565e84057123c15ab12b885c235d1f241aed","34a97a016e6c419eb4b1005a7306d45a775a407b","4adadc82e4f6db798164438ca655d0fc0252cf17","76057a3c7b489290afd4a4dccf09b623502619fd","13f7c5807452ae602046582a385c0fb544ec5de1","f1e8792d102b260c0b6e2808d416df286121c574","264cd229ac4bbdf655d5e7b44563bf84bd846364","46e61ad29ab20618fb551afbc00ebb8eb4e9be21","25883553e5315e32194614676f11bb012db6dafd","6f705b791b4b951a273f0c3ced886a52daa8f5aa","027eb436c35c7e293e7ebc565163cb54c05fe2e9"],"s2Url":"https://semanticscholar.org/paper/0387a5caf19b887046473cc7dd317da0ea1378a6","s2PdfUrl":"","id":"0387a5caf19b887046473cc7dd317da0ea1378a6","authors":[{"name":"Martin Bättig","ids":["28130536"]},{"name":"Thomas R. Gross","ids":["1735078"]}],"journalName":"","paperAbstract":"We explore a programming approach for concurrency that synchronizes all accesses to shared memory by default. Synchronization takes place by ensuring that all program code runs inside atomic sections even if the program code has external side effects. Threads are mapped to atomic sections that a programmer must explicitly split to increase concurrency.\n A naive implementation of this approach incurs a large amount of overhead. We show how to reduce this overhead to make the approach suitable for realistic application programs on existing hardware. We present an implementation technique based on a special-purpose software transactional memory system. To reduce the overhead, the technique exploits properties of managed, object-oriented programming languages as well as intraprocedural static analyses and uses field-level granularity locking in combination with transactional I/O to provide good scaling properties.\n We implemented the synchronized-by-default (SBD) approach for the Java language and evaluate its performance for six programs from the DaCapo benchmark suite. The evaluation shows that, compared to explicit synchronization, the SBD approach has an overhead between 0.4% and 102% depending on the benchmark and the number of threads, with a mean (geom.) of 23.9%.","inCitations":["e45dea6588d1de0a23618e019031e67eedeeee26"],"pdfUrls":["http://dl.acm.org/citation.cfm?id=3018747"],"title":"Synchronized-by-Default Concurrency for Shared-Memory Systems","doi":"10.1145/3018743.3018747","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3018743.3018747","venue":"PPOPP"},
{"entities":["Algorithm","Blocking (computing)","Central processing unit","Data center","Limiter","Network congestion","Network switch","Non-blocking algorithm","Protocol stack","Rate limiting","Router (computing)","Scalability","Server (computing)","Stock and flow","Traffic shaping"],"journalVolume":"","journalPages":"404-417","pmid":"","year":2017,"outCitations":["3013e17706df21957f53579f53fc67967f3bb548","2de63b0c867b290d4f7217459c968aa98e5ad39d","438110dc02f39f221896847a4d0e24f88e130598","1c68a88cae1e486e14925637a3acb82164927ac5","47d5357957cabb610131db1b228e58b70860ee8d","31a3411d2e9748fe3590ae005b79634004c5e5d0","0a142c84aeccc16b22c758cb57063fe227e83277","132f00de21cee656d00ad6779f1926070ad59544","1aafc7066e52f18dee78103822da24a5d85da93c","46c79404092692c2c4eb8209d3301e2000b83212","08417bc2a45e668699ae4805e809dd1ccd567753","17f1ff82aca7a592a8815e8169b6e2210bf6ae7a","52ece1e929758e9d282e818e8e9985f88570f2dd","25ded9f81378f6b85daf5a70c85bbadfb84ebc3d","5c39e0414c7de24268adb6c219c12f142a6343ff","0d3f85933b6355789588476e491683532c68a906","4687fdf3c77ef00700fdf1399f7dd81bfe87ef97","03e216973f65fcee6e4e761592c3817386faa052","0baf1bef6ee3bcb0b385a4ac303dcf0b406c64f4","0e2249e3b0cd1fa9a7e0eee847b58be1cf2ec707","2a628e4a9c5f78bc6dcdf16514353336547846cc","20165e23266d4753183a8a584a4364ebc3de1c7f","8c9a91b774fcc126db7ce7c67bd97d1d16143932","327a02b19a60319cc35be860ad0259a5c1aef920","61aa09bc1a3eae17480645c90b06a18cbd62d9af","42d1b52254873ecd0f36eb7342f95dbad9c50187","404480f20069c176992986af17178d86ccae47a1","0edd07551910c48f90fa07f7c5da50c8211fb994","1b1d5091f1325752daf6931a086cd7a876d46c69"],"s2Url":"https://semanticscholar.org/paper/26f56d7a326bce3961d50bde268590f8c562d883","s2PdfUrl":"","id":"26f56d7a326bce3961d50bde268590f8c562d883","authors":[{"name":"Ahmed Saeed","ids":["38751321"]},{"name":"Nandita Dukkipati","ids":["2328708"]},{"name":"Vytautas Valancius","ids":["2591679"]},{"name":"Vinh The Lam","ids":["37427906"]},{"name":"Carlo Contavalli","ids":["9753146"]},{"name":"Amin Vahdat","ids":["1718754"]}],"journalName":"","paperAbstract":"Traffic shaping, including pacing and rate limiting, is fundamental to the correct and efficient operation of both datacenter and wide area networks. Sample use cases include policy-based bandwidth allocation to flow aggregates, rate-based congestion control algorithms, and packet pacing to avoid bursty transmissions that can overwhelm router buffers. Driven by the need to scale to millions of flows and to apply complex policies, traffic shaping is moving from network switches into the end hosts, typically implemented in software in the kernel networking stack.\n In this paper, we show that the performance overhead of end-host traffic shaping is substantial limits overall system scalability as we move to thousands of individual traffic classes per server. Measurements from production servers show that shaping at hosts consumes considerable CPU and memory, unnecessarily drops packets, suffers from head of line blocking and inaccuracy, and does not provide backpressure up the stack. We present Carousel, a framework that scales to tens of thousands of policies and flows per server, built from the synthesis of three key ideas: i) a single queue shaper using time as the basis for releasing packets, ii) fine-grained, just-in-time freeing of resources in higher layers coupled to actual packet departures, and iii) one shaper per CPU core, with lock-free coordination. Our production experience in serving video traffic at a Cloud service provider shows that Carousel shapes traffic accurately while improving overall machine CPU utilization by 8% (an improvement of 20% in the CPU utilization attributed to networking) relative to state-of-art deployments. It also conforms 10 times more accurately to target rates, and consumes two orders of magnitude less memory than existing approaches.","inCitations":["4d706ee0027880679a5358aef4e8feba58a53718","9bbd5be2829e49b1fac7f034baf7499cb069db95"],"pdfUrls":["https://www.cc.gatech.edu/~amsmti3/files/carousel_sigcomm_final.pdf","http://www.cc.gatech.edu/~amsmti3/files/carousel-sigcomm17.pdf","http://doi.acm.org/10.1145/3098822.3098852","http://conferences.sigcomm.org/sigcomm/2017/files/program/ts-9-4-carousel.pdf"],"title":"Carousel: Scalable Traffic Shaping at End Hosts","doi":"10.1145/3098822.3098852","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3098822.3098852","venue":"SIGCOMM"},
{"entities":["Algorithm","Baseline (configuration management)","Job scheduler","Jumpstart Our Business Startups Act","Requirement","Scheduling (computing)","Simulation","Slurm","Supercomputer","Synthetic data"],"journalVolume":"","journalPages":"3-14","pmid":"","year":2017,"outCitations":["5f3f9223c5c9f896be099bc177929febad508407","6a190f5699d13f849e8d0cb9626c96dc4f64b2f7","f524244c8e974a986ec15d05d3b4d422c936edd5","bf6071b74ce327a8e9c32ca2989bd3516844a5e5","24281c886cd9339fe2fc5881faf5ed72b731a03e","0784356b46a1345b352ab634bda835c07ff04af2","3cce658ddd549b0d2338d0742c979ea58559eacd","1dee6413f13c8dc3b736a2a842d65b0438295f9d","31b27a3b4ff89993eb92e8b1353edead8d5f2520","170e745007d2baf2fd566afe360d26500290640e","0ecad2b630fce029c1b7b577ed56e18fbba001ce","b6571efa4483aa00d23bbcd36930c4877548ba38","05c6db23f18ab2228baac3a7a1ba8b1df031320a","1f2c123e0cabefe1576b8491697db07140e98783","1324f1d5b20f08cac775f10089a788767c56d5a9","cefb2ec6d1e856dcba0836b88f6b12b3c455379a","835916e7ad1231d5aa2985340b0ee543cadbb5b6","2730606a9d29bb52bcc42124393460503f736d74","11310368999afdce94bca4316eea38216b2446c5","9d607cb1c8479e009a1304af8f494f09ffa412dc","0fc5af2a00652db220ba711333a02644562d3077","7be3b202518bcce34c1b0b5224508bed7fca2294","4e36915f4c27e7770cf59a9985f4b603f6b23637"],"s2Url":"https://semanticscholar.org/paper/b34fa14b96a9058d5d273fadce33f6d7fdb152fe","s2PdfUrl":"","id":"b34fa14b96a9058d5d273fadce33f6d7fdb152fe","authors":[{"name":"Gonzalo Pedro Rodrigo Álvarez","ids":["40545209"]},{"name":"Erik Elmroth","ids":["1685517"]},{"name":"Per-Olov Östberg","ids":["3117458"]},{"name":"Lavanya Ramakrishnan","ids":["1792683"]}],"journalName":"","paperAbstract":"Scientific workflows are increasingly common in the workloads of current High Performance Computing (HPC) systems. However, HPC schedulers do not incorporate workflow-specific mechanisms beyond the capacity to declare dependencies between their jobs. Thus, workflows are run as sets of batch jobs with dependencies, which induces long intermediate wait times and, consequently, long workflow turnaround times. Alternatively, to reduce their turnaround time, workflows may be submitted as single pilot jobs that are allocated their maximum required resources for their entire runtime. Pilot jobs achieve shorter turnaround times but reduce the HPC system's utilization because resources may idle during the workflow's execution. We present a workflow-aware scheduling (WoAS) system that enables existing scheduling algorithms to exploit fine-grained information on a workflow's resource requirements and structure without modification. The current implementation of WoAS is integrated into Slurm, a widely used HPC batch scheduler. We evaluate the system using a simulator using real and synthetic workflows and a synthetic baseline workload that captures job patterns observed over three years of workload data from Edison, a large supercomputer hosted at the National Energy Research Scientific Computing Center. Our results show that WoAS reduces workflow turnaround times and improves system utilization without significantly slowing down conventional jobs.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3078597.3078604"],"title":"Enabling Workflow-Aware Scheduling on HPC Systems","doi":"10.1145/3078597.3078604","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3078597.3078604","venue":"HPDC"},
{"entities":["Central processing unit","Cloud computing","Data center","Multi-core processor","Scheduling (computing)","Server (computing)","Virtual machine"],"journalVolume":"","journalPages":"332-344","pmid":"","year":2017,"outCitations":["41bbedd069ffaa2b1ffa1ce640f101d2f2980f4a","cce432dc890df08878af851f360f6b8fc9e1e4d6","46fa3ec8f2fa7d0683ffaeeb438af76c6627823d","132e28a9047b4a5159c08338ff65f112b124b3f0","057339544e31d9cb2ef807bddff2b705b8c674dd","17e1036e3681a0da3361ae56cfa77d523ce51d88","5ee9d84a9a000f3edf4d40301e53023b4f25abb1","84c31932d221afbd7d50f55e16900664b1027a1a","7a002e42c709cd3a0468e5c992ab296116721a00","0cb4b930159a456cd3ab7e253e0cab5c5b28c8c4","07ccd8f48c5067fff6f50e6654ff410195ff0a91","17dea513763c57dcd0e62085045fb5be6770c600","46742c000a65f676c00ec4e33d19d535a1c29dd7","1fcec27437d40285684aad5c68d2db076b27a195","aa883536e1a8622a6ec537b54dd115cf352f5107","043029ff68d0449eacae8a67fc62ed4ee03215a2","0b8060041bb38ec8d685dfabdca2be2fbc39d241","221f78156aa66373f85883d21160a2445c0cc383","398b95b6f7f7861819848ee193194a772abc1a72","2f4b9ac4a0694f0b1681348334befba0bfe9d897"],"s2Url":"https://semanticscholar.org/paper/2288e3e4686b5e91e30b164bd53e0c7334e5041c","s2PdfUrl":"","id":"2288e3e4686b5e91e30b164bd53e0c7334e5041c","authors":[{"name":"Boris Teabe","ids":["2869488"]},{"name":"Patrick Lavoisier Wapet","ids":["23204282"]},{"name":"Alain Tchana","ids":["1685006"]},{"name":"Daniel Hagimont","ids":["1679417"]}],"journalName":"","paperAbstract":"In a Cloud computing data center and especially in a IaaS (Infrastructure as a Service), performance predictability is one of the most important challenges. For a given allocated virtual machine (VM) in one IaaS, a client expects his application to perform identically whatever is the hosting physical server or its resource management strategy. However, performance predictability is very difficult to enforce in a heterogeneous hardware environment where machines do not have identical performance characteristics, and even more difficult when machines are internally heterogeneous as for Asymmetric Multicore Processor machines. In this paper, we introduce a VM scheduler extension which takes into account hardware performance heterogeneity of Asymmetric Multicore Processor machines in the cloud. Based on our analysis of the problem, we designed and implemented two solutions: the first weights CPU allocations according to core performance, while the second adapts CPU allocations to reach a given instruction execution rate (Ips) regardless the core types. We demonstrate that such scheduler extensions can enforce predictability with a negligible overhead on application performance.","inCitations":[],"pdfUrls":["https://doi.org/10.1007/978-3-319-64203-1_24"],"title":"Dealing with Performance Unpredictability in an Asymmetric Multicore Processor Cloud","doi":"10.1007/978-3-319-64203-1_24","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-64203-1_24","venue":"Euro-Par"},
{"entities":["Computer memory","Failure rate","Memory management","Operating system","Persistence (computer science)","Runtime system","Systems design","Terabyte","Time complexity"],"journalVolume":"","journalPages":"7-11","pmid":"","year":2017,"outCitations":["15f0aeddfe3f8d2a62793318cef48e203ab3b037","d953275032b7a0da42d555130178f718e6ec0207","ba7458ac1438ea2102de95ec2f777e5beaa01c4b","0c96b3ac2e720448054f1bcebdfd52ee341eac57","866bce77ca5201d182c0c43090eb75bf126efba6","40c5050e470fa0890e85487e4679197e07a91c09","04e8d64b569b3d5628cfdf5ad16ba0b933845e2e","400ae82ab2fc2c814033c65854229ecefbddbf67","60f9d8874d8679b94896160bd3a8bf4b02d8b883","ae041f8e6228f0ccd8b01ffdeba150e63635c2c4","19ffc4f5129ed9d39f498f4eb901024c514263c7","01a7c93e6b5d65b9f8e9b9db8b556964dcf9bf1f","544c1ddf24b90c3dfba7b1934049911b869c99b4","0027600a3ff1d431ee44fcb8b149388ec7bb3ac8","caacd536fa218ef5218021506ebc041e3f460064","2ee01ab9aca4163d391bd29c2123d9be44b0e986","942c1ae472bcba8c133fad502e3aaf894256717a","dc2e2b794a784782d7d9860f1358aa107f71c1bf"],"s2Url":"https://semanticscholar.org/paper/4ecd935aa72d4e986fed4efebbc4fb50bbf542df","s2PdfUrl":"","id":"4ecd935aa72d4e986fed4efebbc4fb50bbf542df","authors":[{"name":"Michael M. Swift","ids":["9833675"]}],"journalName":"","paperAbstract":"Since the dawn of computing, memory capacity has been a primary limitation in system design. Forthcoming memory technology such as Intel and Micron's 3D XPoint memory and other technologies may provide far larger memory capacity than ever before. Furthermore, these new memory technologies are inherently persistent and save data across system crashes or power failures.\n We conjecture that current operating systems are ill-equipped for an environment where there is ample memory. For example, operating systems do substantial work for every page allocated, which adds unnecessary overhead when dealing with terabytes of memory.\n We suggest that now is the time for a complete rethinking of memory management for both operating systems and language runtimes considering excess memory capacity. We propose a new guiding principle: Order(1) operation, so that memory operations have low constant time independent of size. We describe a concrete proposal of this principle with the idea of file-only memory, in which most dynamic memory allocation is managed with file-system mechanisms rather than common virtual memory mechanisms.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3102980.3102982"],"title":"Towards O(1) Memory","doi":"10.1145/3102980.3102982","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3102980.3102982","venue":"HotOS"},
{"entities":["Baseline (configuration management)","Information theory","Language model","Text corpus","Word embedding"],"journalVolume":"","journalPages":"535-543","pmid":"","year":2017,"outCitations":["2cf379819632deb93b2cd9250da25bf21fa25171","0062b9ff8522498b34f467e36af218d87fcf5d9a","175fc7cd36a126d1de55c092d391790896060952","1510cf4b8abea80b9f352325ca4c132887de21a0","06f5c8e8485c87681ba648e2775d825c34e66c7d","762b63d2eb86f8fd0de98a08561b77527ae8f165","22eff4a1cd15d76b4e89ff3111713607a348816a","07bd2985ebe29eaa182569e1fd3e3e0f9df4c14a","1f656b9c686c1e5db2a4d41f1ce7e270965def3e","00a28138c74869cfb8236a18a4dbe3a896f7a812","15fcecf899acf594ebb7b04ba2df49aa4adc4799","9208ecbd7244040ba6ee59a067b527c8b095fe0a","6363cfe79b33d66deeeba0e68e89f15b3e1e657f","319764d09e38c9bb3508ca57fe8173ba46e271b3","142f38642629b9d268999ad876af482177d36697","980c2517368aaa0d4a4972ff7bcc5cf3ec41656a","244a152b82401d1619ef4ac88c51672b1662e3a2","132c8b4d0760d2d35c99b0358c8bc5a51170e5e7","768b130d70911178c6b5b0dbaf8ccb19d899ac42","2538e3eb24d26f31482c479d95d2e26c0e79b990","0826c98d1b1513aa2f45e6654bb5075a58b64649","1145859ba17172d517cdffe2a5f00a16366c5765","1b179d6890c3055cea12bc65337dcebc3167d436","87d907a114409755ecd3c6886585de26a4e17ffe","2e37d6b9a02ec31ea22252c37beae410c6b609a8","328b00f1baaf08dedba3a788b4ce0a4b26003f18","0825788b9b5a18e3dfea5b0af123b5e939a4f564","917fbd64a435cb33e0e5b4cd73fe830db7b166db"],"s2Url":"https://semanticscholar.org/paper/3145ae24017a76dd4b3fb01db0533eae88efb6c4","s2PdfUrl":"","id":"3145ae24017a76dd4b3fb01db0533eae88efb6c4","authors":[{"name":"Guangxu Xun","ids":["3101979"]},{"name":"Yaliang Li","ids":["2694924"]},{"name":"Jing Gao","ids":["1947899"]},{"name":"Aidong Zhang","ids":["1769577"]}],"journalName":"","paperAbstract":"A text corpus typically contains two types of context information -- global context and local context. Global context carries topical information which can be utilized by topic models to discover topic structures from the text corpus, while local context can train word embeddings to capture semantic regularities reflected in the text corpus. This encourages us to exploit the useful information in both the global and the local context information. In this paper, we propose a unified language model based on matrix factorization techniques which 1) takes the complementary global and local context information into consideration simultaneously, and 2) models topics and learns word embeddings collaboratively. We empirically show that by incorporating both global and local context, this collaborative model can not only significantly improve the performance of topic discovery over the baseline topic models, but also learn better word embeddings than the baseline word embedding models. We also provide qualitative analysis that explains how the cooperation of global and local context information can result in better topic structures and word embeddings.","inCitations":["1014d71f8f2225d2ff3529b86a7e2cfd6d84c0b1","db6d960bcdbf6c32a075c3c554681dff77b6f5fe","ad64649f20cc20a2d1584cbc4b859d9fa9920538"],"pdfUrls":["http://doi.acm.org/10.1145/3097983.3098009"],"title":"Collaboratively Improving Topic Discovery and Word Embeddings by Coordinating Global and Local Contexts","doi":"10.1145/3097983.3098009","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3097983.3098009","venue":"KDD"},
{"entities":["Algorithm","Central processing unit","Coprocessor","Graph (abstract data type)","Graph (discrete mathematics)","Iteration","Line graph","Locality of reference","NCSA Mosaic","Out-of-core algorithm","PageRank","Solid-state drive","Xeon Phi"],"journalVolume":"","journalPages":"527-543","pmid":"","year":2017,"outCitations":["e2462bde978023a9069cc08326f626135a95cb89","4339f17c10b91d2def6e16ab981d7b5428e6d82c","8e67d1085da29e5aa1e758751bfa5469ac07023e","1156f60e40548096df49528b1342bb3e88b0f378","0558c94a094158ecd64f0d5014d3d9668054fb97","4dc578364f357b993b5554b9181c90c84aa6b4d1","6de3915df2b9927a78f213629f3bcb052ec21e8b","0706356c9ab6014d6b04577d38289ea8328291a5","8d1a4ae1d3a17edd5b16653f2f582f9952b71612","26deee037b221bd05ed34461819f5c067b745445","586414efa54ba9f4a7def0dc5322b7723f22c552","2b0cc03aa4625a09958c20dc721f4e0a52c13fd0","24e8be45a2b2a30a01b7e9f1502e7bd6a7870e7a","ce18973fb7c23cb4fc1c1a61c1c1c4333f4abad1","11e4d4d00c7b1e3aa9fcf3c490b635df98827dd9","13f7df91eb208a387d18fbad192c6f0f834f0b82","254ded254065f2d26ca24ec024cefd7604bd74e7","1141ff370d51c25ae17709ae9131097313215e18","0a8e0a9f0ae9910d5ecf165071559a2c4191a098","047565a5b15fbebc78e0bc7d8ca823237dac9de2","b364f870dba706912ebc530ebd92ddf961b3f141","162e4c9d52af580b9d21ec1a631dfc25d4cd150b","3486aeaf540c48952120fe853d672af984f40a6a","0ad8e89091eed09217e66adc98136126addc2619","2a17c90ed723d6a14415cc1f677a5c0aa512f501","2ae3ac3f7463f838c38e6ca250ca294e813529f2","141004dee9e799b40bfaf50b4a72618613137250","87ee99d4cc4e0601cbb519f6ddbac85772bdc49e","6a888f3dd0a17b0241be61daa378ba6caffa6617","0541d5338adc48276b3b8cd3a141d799e2d40150","0d06de003e8ca949b3b39f9a51750c050addb997","3dff11679346f5344af1018cad57fa14cc349f2f","01c1f0e97ce5c74c714dc7aa43cb064f45cc3b04","400c8f6d1bc0284b887f3f6412e07f9be70650f8","0608d9937c074520cdc93cc444cc1c77039c5332","0f014693b25d9846025219b88f8ca480fac68b0a","b513711621e81d0abd042e0877ca751581a993f5","3978225e3bee62839488dd3b92468fb40d12969f","9207a7356d90343b5107e3e445fa7de86f3078eb","191fd33f17c2a79b3825d4cc2105c47a8f16ba44","420a0e5fc398f197bca3dfe40291a82b2c65655a","3d985a05e4a49be71d497e7a2ff3fcbeb74c4bc8","110b55a017f52abfedca220036ea129d84b7cadc","11fff0d9f39f7e3187dee5f2b9d54fec13b9c192","01f21f3aacb36a425aa9213a10ccc543a11659ab","29cf5904d4f2daf900aa309165a95fe4915d31b4","ed618cb03388592219020d3726517d9610188302","3231d62bec8e8cc1d837e85893889855767c3b13","179cef3727082d923b20874bf5d23e6cf74c6026","0f5a4d43622bea9de50abfe14f42345b78df28ac","027485f716ca4f6d9ee2e189790d6560e37fcab2","ef9d9821df55442f039b128bb5cef2b41ab2cadc","080f44d89bf6f4404f476ffec8d2f8ad3f60e07d"],"s2Url":"https://semanticscholar.org/paper/222e7666dd37307b600b0a3ebc9b6d28fb51d6e9","s2PdfUrl":"","id":"222e7666dd37307b600b0a3ebc9b6d28fb51d6e9","authors":[{"name":"Steffen Maass","ids":["3427189"]},{"name":"Changwoo Min","ids":["7761504"]},{"name":"Sanidhya Kashyap","ids":["1909974"]},{"name":"Woon-Hak Kang","ids":["2654775"]},{"name":"Mohan Kumar","ids":["39510203"]},{"name":"Taesoo Kim","ids":["3254849"]}],"journalName":"","paperAbstract":"Processing a one trillion-edge graph has recently been demonstrated by distributed graph engines running on clusters of tens to hundreds of nodes. In this paper, we employ a single heterogeneous machine with fast storage media (e.g., NVMe SSD) and massively parallel coprocessors (e.g., Xeon Phi) to reach similar dimensions. By fully exploiting the heterogeneous devices, we design a new graph processing engine, named Mosaic, for a single machine. We propose a new locality-optimizing, space-efficient graph representation---Hilbert-ordered tiles, and a hybrid execution model that enables vertex-centric operations in fast host processors and edge-centric operations in massively parallel coprocessors.\n Our evaluation shows that for smaller graphs, Mosaic consistently outperforms other state-of-the-art out-of-core engines by 3.2-58.6x and shows comparable performance to distributed graph engines. Furthermore, Mosaic can complete one iteration of the Pagerank algorithm on a trillion-edge graph in 21 minutes, outperforming a distributed disk-based engine by 9.2&#215;.","inCitations":["c7e2c4bea500ea7926a50973d861f01bb8e5e364","26b4bb926d9928bcf1c3e8916c8674ef2dcf6fb2","356100b33d589bb48fa1a6518a85efb551a13d9b","2f9b520b16e05de8e705e374ebea3a121d64ebc2","896134c7aa767e27cb3c3aa0662b335473923602","69c6a91d6cb6807a7c730bd1445209737361d7b8","f84aa869a21f083133b74e23d83ab2dd1378b7ff","12d3a826eaf6a53bcd299dde7e3de700d387ce17"],"pdfUrls":["https://sslab.gtisc.gatech.edu/assets/papers/2017/maass:mosaic-slides.pdf","http://doi.acm.org/10.1145/3064176.3064191","https://taesoo.gtisc.gatech.edu/pubs/2017/maass:mosaic.pdf"],"title":"Mosaic: Processing a Trillion-Edge Graph on a Single Machine","doi":"10.1145/3064176.3064191","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3064176.3064191","venue":"EuroSys"},
{"entities":["Central processing unit","Computer data storage","Double data rate","Dynamic random-access memory","Memory module"],"journalVolume":"","journalPages":"110-111","pmid":"","year":2017,"outCitations":["9ca87149f9e7cb0811c881ecac79ef02c87e1716","2644b8562292e2492459db3ed214d3330ef7712d","08632fe2b934ed15d3499e7321282c81adc2c390","02e965debeaf59e6f93adede60d7e39004e77fcc","0e6b0665e0fc3c0c152885869f6c0d339aba06a1","290849abe19f6af0c09ff0dc1b504858743c0150","8b10b13fb495101d1e4eb768907cff05e3bd9315"],"s2Url":"https://semanticscholar.org/paper/42b352ef7835dc97ac85a3dcf6b3abc83fca2f21","s2PdfUrl":"","id":"42b352ef7835dc97ac85a3dcf6b3abc83fca2f21","authors":[{"name":"Sukhan Lee","ids":["4239456"]},{"name":"Yuhwan Ro","ids":["2317634"]},{"name":"Young Hoon Son","ids":["3173425"]},{"name":"Hyunyoon Cho","ids":["2077514"]},{"name":"Nam Sung Kim","ids":["1686484"]},{"name":"Jung Ho Ahn","ids":["2575874"]}],"journalName":"2017 IEEE International Symposium on Workload Characterization (IISWC)","paperAbstract":"As servers are equipped with more memory modules each with larger capacity, main-memory systems are now the second highest energy-consuming component in big-memory servers and their energy consumption even becomes comparable to processors in some servers. Meanwhile, it is critical for big-memory servers and their main-memory systems to offer high energy efficiency. Prior work exploited mobile LPDDR devices' advantages (lower power than DDR devices) while attempting to surmount their limitations (longer latency, lower bandwidth, or both). However, we demonstrate that such main memory architectures (based on the latest LPDDR4 devices) are no longer effective. This is because the power consumption of present DDR4 devices has substantially decreased by adopting the strength of mobile and graphics memory whereas LPDDR4 has sacrificed energy efficiency and focused more on increasing data transfer rates; we also exhibit that the power consumption of DDR4 devices can substantially vary across manufacturers. Moreover, investigating a new energy-saving feature of DDR4 devices in depth, we show that activating this feature often hurts overall energy efficiency of servers due to its performance penalties.","inCitations":[],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/IISWC.2017.8167762"],"title":"Understanding power-performance relationship of energy-efficient modern DRAM devices","doi":"10.1109/IISWC.2017.8167762","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/IISWC.2017.8167762","venue":"2017 IEEE International Symposium on Workload Characterization (IISWC)"},
{"entities":["Add-ons for Firefox","CheetahTemplate","Client (computing)","Common Gateway Interface","Connection-oriented communication","Connectionless communication","End-to-end principle","Experiment","IBM Notes","Quality of service","Server (computing)","Testbed","Web application","Web page","Web performance","Web server"],"journalVolume":"","journalPages":"204-204","pmid":"","year":2006,"outCitations":["6d6030e70859795569baceaba58abb17ec62cca8","1f08cd16aef591b6ef5393db058b88071eac8093","69ba090c140e1e100a41503bce2e0d1a3fee1ac8","1a9453673117bcfb0f9ac5d4cf5953fea6e49593","23e416a0f3cf6b58ae6e04a8950c5b840c564c34","4c0b9741d63f152e05648a074b45b74d47268184","337e4b7f57ccbb7485950b93da9c5bb4ec4dc9ad"],"s2Url":"https://semanticscholar.org/paper/89baeb7f12f1fe392519244cee0c8154be2f68d0","s2PdfUrl":"","id":"89baeb7f12f1fe392519244cee0c8154be2f68d0","authors":[{"name":"Xiuduan Fang","ids":["2095057"]},{"name":"Xuan Zheng","ids":["2582061"]},{"name":"Malathi Veeraraghavan","ids":["1694301"]}],"journalName":"Advanced Int'l Conference on Telecommunications and Int'l Conference on Internet and Web Applications and Services (AICT-ICIW'06)","paperAbstract":"New connection-oriented networking technologies can provide quality-of-service guaranteed network connectivity required by some web-based applications. In this paper, we present a solution for leveraging these new networking technologies without requiring modifications to existing web server and client software. We implemented a CGI-based software package called WebFT. We demonstrate how it can be used along with existing web servers and clients to enable fast web page downloads across a wide-area experimental connection- oriented network called CHEETAH, which we deployed as part of an NSF-sponsored project. WebFT is integrated with the CHEETAH end-host software modules to provide deterministic data transfer services transparently to users. The \"add-on\" design of the CHEETAH network, whereby connection-oriented services are provided in addition to the connectionless service offered by the Internet, allows the WebFT package to provide normal web server access to non- CHEETAH clients through the Internet while simultaneously serving CHEETAH clients on dedicated circuits. The experiments conducted on the CHEETAH testbed show that WebFT can achieve low-variance end-to-end transfer delays at different circuit rates and low transfer delays when high-speed circuits are possible. 1. Introduction","inCitations":["303c75e3ff7d29e593281cccfb0a6e22c71565cb","954a8a3dc23401ff48df13d57d5e0e40377e1893"],"pdfUrls":["http://www.ece.virginia.edu/~mv/pdf-files/iciwa2006-webapp.pdf","http://www.ece.virginia.edu/mv/pdf-files/iciwa2006-webapp.pdf","http://doi.ieeecomputersociety.org/10.1109/AICT-ICIW.2006.113"],"title":"Improving Web Performance through New Networking Technologies","doi":"10.1109/AICT-ICIW.2006.113","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/AICT-ICIW.2006.113","venue":"Advanced Int'l Conference on Telecommunications and Int'l Conference on Internet and Web Applications and Services (AICT-ICIW'06)"},
{"entities":["Baseline (configuration management)","Graphics processing unit","Performance per watt","Power supply","Register file","Scalar processor","Throughput"],"journalVolume":"","journalPages":"601-612","pmid":"","year":2017,"outCitations":["0345b41c8a708048a9f1d27cea06b867b52eead7","309ad0357af7722a24192781340881390055a3db","4308295a2eaef30be423520918ad224dc2f3ffe2","49fb77e166dc26849e37db3d5a53496ab547a545","3401d10e78ee5afdf5b7b42e7e9751f3d338a3d6","33da3dcba06cf453f74203e3fb2adaa8c1133f3b","8af1a4b65bd380b8775c15e2a9323ae5184bc8dd","ce480ccc937a0c4c7c05f231d78fb888f3c9e310","6635cd62124e589bc56667b31cc295db2fbd22a2","f9cf47539216a3737f6353dca8a8f3f1e588413e","9a334c377686d8abe7711abcef58775ee02c0487","011dbf85e32e317be5c3af5855dd82d6852b0f07","0d394c72f9d769dfa021796a29fc142db573aec7","12f1a44eeef9b8a52b89e54ddc227704dbddfb92","11df018ba5452e7806dd22b6746604ca4ca45f82","7ea15c138cc72588fa376ff819f4bb8ca0b324da","5f3cce1bc739ebfc03e003010d3438bb318efc14","0269cb98b0c91a804326d8f8888c32f01fda8661","2d6f002477015469075954c6748a1a85af352c94","13bb71a86db976ffa572407bda5b44cacadac4ca","0915fa32b78d4df0b33732bafe89b236bc8e37ce","09ba565ec5dd3816968edaaee8351cf653e26d81","14505c2bdd3822d7a62385121d28ba3eb36fea1d","284c7fde4bbaf19dd345e3b37d98085d7bfb9a4f","1d0e6ae33237650f71583c2a5e2cc27c6523fb22","4946ad542eacf5066d8268a43347e9f788d58f9c","c592507ecf124838ba95004fdb85f7a1b1e7ee2b","0114fb72afbd9cc0bca35940beb21eda596aa5e0","f783cd996b625f2866a8ffe1a5d23f10fd0e9ae9"],"s2Url":"https://semanticscholar.org/paper/5f4388e15af381d4c48b6376180a94db10dae0cd","s2PdfUrl":"","id":"5f4388e15af381d4c48b6376180a94db10dae0cd","authors":[{"name":"Zhenhong Liu","ids":["5082188"]},{"name":"Syed Zohaib Gilani","ids":["2337644"]},{"name":"Murali Annavaram","ids":["1789661"]},{"name":"Nam Sung Kim","ids":["1686484"]}],"journalName":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)","paperAbstract":"The GPU has provide higher throughput by integrating more execution resources into a single chip without unduly compromising power efficiency. With the power wall challenge, however, increasing the throughput will require significant improvement in power efficiency. To accomplish this goal, we propose G-Scalar, a cost-effective generalized scalar execution architecture for GPUs in this paper. G-Scalar offers two key advantages over prior architectures supporting scalar execution for only non-divergent arithmetic/logic instructions. First, G-Scalar is more power-efficient as it can also support scalar execution of divergent and special-function instructions, the fraction of which in contemporary GPU applications has notably increased. Second, G-Scalar is less expensive as it can share most of its hardware resources with register value compression, of which adoption has been strongly promoted to reduce high power consumption of accessing the large register file. Compared with the baseline and previous scalar architectures, G-Scalar improves power efficiency by 24% and 15%, respectively, at a negligible cost.","inCitations":["5eb9bb0450cf8ad4b8ee7bf8ceba5553f4fdf137","fa21c85107516c7f0a341de27856d7ffe4a6c5d9","9ba97fe20d1042b080b3e2c515e4f9c0ccc6e9e0","1574575034358cc08e96b4bd5f0145286490ea49"],"pdfUrls":["http://doi.ieeecomputersociety.org/10.1109/HPCA.2017.51"],"title":"G-Scalar: Cost-Effective Generalized Scalar Execution Architecture for Power-Efficient GPUs","doi":"10.1109/HPCA.2017.51","sources":["DBLP"],"doiUrl":"https://doi.org/10.1109/HPCA.2017.51","venue":"2017 IEEE International Symposium on High Performance Computer Architecture (HPCA)"},
{"entities":["Apache Hadoop","Data parallelism","Elasticity (cloud computing)","PageRank","Priority queue","SPARK","Scheduling (computing)","Simulation"],"journalVolume":"","journalPages":"97-109","pmid":"","year":2017,"outCitations":["a43dfb040d60d0df3dbe66a52b920e05a1ac3083","3a043714354fe498752b45e4cf429dbae0fb2558","3e257f01e3ee71545d824a1615c35659525b856a","4a0bb4eece00f3e9445d1a0d933422aa408ce8d1","3000e77ed7282d9fb27216f3e862a3769119d89e","090599a2caf4591c87699ad850c75554cd712937","029068a33f6e9f9ba0ddfe5498a67e4c0d349d2f","423549d9e46a26474bc9554530c84c244481d881","28a9dca6faeead651539c700bef413203b2b876e","bbc2a698c2fb2b76e256cc51a9d7c37765ab51b6","2451dc6bb08d2668f4a876ce94d0c15227ccab7a","0ecad2b630fce029c1b7b577ed56e18fbba001ce","b6571efa4483aa00d23bbcd36930c4877548ba38","2988e34168fa91398fa397baf823af2063893e9c","04fe7d8276178be18afd6c17e399e8df4ab693c7","d7704bb76d8f2598c13f338f0991ca39646afd3c","57c2192c290fd944d6623853b695a255d06b28f8","08f13e484e7e51831ec13076d14570ced91a50fb","379bb3fab4073075ea955a5096196e960b909403","0d868efa67bf06b1f784d60769c082fd9a58893e","47b627916586fa7e0ba64f0fcdb80a5037d66dc7","0558c94a094158ecd64f0d5014d3d9668054fb97","43776b15c034076a36b7143d58af8e04715e41d0","0bf963bd1fea6b6efdbfb1e829f1db562e367c11"],"s2Url":"https://semanticscholar.org/paper/0a55dab49eac9856e68bb62ebc50b98f2d0d7dc4","s2PdfUrl":"http://pdfs.semanticscholar.org/0a55/dab49eac9856e68bb62ebc50b98f2d0d7dc4.pdf","id":"0a55dab49eac9856e68bb62ebc50b98f2d0d7dc4","authors":[{"name":"Calin Iorgulescu","ids":["1798480"]},{"name":"Florin Dinu","ids":["1772480"]},{"name":"Aunn Raza","ids":["10195630"]},{"name":"Wajih Ul Hassan","ids":["23665691"]},{"name":"Willy Zwaenepoel","ids":["1711100"]}],"journalName":"","paperAbstract":"Understanding the performance of data-parallel workloads when resource-constrained has significant practical importance but unfortunately has received only limited attention. This paper identifies, quantifies and demonstrates memory elasticity, an intrinsic property of dataparallel tasks. Memory elasticity allows tasks to run with significantly less memory that they would ideally want while only paying a moderate performance penalty. For example, we find that given as little as 10% of ideal memory, PageRank and NutchIndexing Hadoop reducers become only 1.2x/1.75x and 1.08x slower. We show that memory elasticity is prevalent in the Hadoop, Spark, Tez and Flink frameworks. We also show that memory elasticity is predictable in nature by building simple models for Hadoop and extending them to Tez and Spark. To demonstrate the potential benefits of leveraging memory elasticity, this paper further explores its application to cluster scheduling. In this setting, we observe that the resource vs. time trade-off enabled by memory elasticity becomes a task queuing time vs task runtime trade-off. Tasks may complete faster when scheduled with less memory because their waiting time is reduced. We show that a scheduler can turn this task-level tradeoff into improved job completion time and cluster-wide memory utilization. We have integrated memory elasticity into Apache YARN. We show gains of up to 60% in average job completion time on a 50-node Hadoop cluster. Extensive simulations show similar improvements over a large number of scenarios.","inCitations":["a1bfd25126692416e7cddc619470da9030a5dba5"],"pdfUrls":["https://arxiv.org/pdf/1702.04323v1.pdf","https://www.usenix.org/system/files/conference/atc17/atc17-iorgulescu.pdf","https://infoscience.epfl.ch/record/227471/files/atc17-paper152.pdf","https://www.usenix.org/conference/atc17/technical-sessions/presentation/iorgulescu","https://www.usenix.org/sites/default/files/conference/protected-files/atc17_slides_iorgulescu.pdf","https://infoscience.epfl.ch/record/225642/files/ms.pdf","http://arxiv.org/abs/1702.04323"],"title":"Don't cry over spilled records: Memory elasticity of data-parallel applications and its application to cluster scheduling","doi":"","sources":["DBLP"],"doiUrl":"","venue":"USENIX Annual Technical Conference"},
{"entities":["Artificial neural network","Computer hardware","Contactless payment","Control flow","Control system","David W. Bradley","Embedded controller","Embedded system","Hall effect","Power-line communication","Programmable logic device","Public key fingerprint","Run time (program lifecycle phase)","Trust (emotion)","Trusted Computing","Trusted computing base","User interface"],"journalVolume":"","journalPages":"1095-1108","pmid":"","year":2017,"outCitations":["39c0c8312d4e7476e4852d6b681bbb434382f815","4803d1810d1f1a4980c55cdf2820a3c203b7a53e","3f5e13e951b58c1725250cb60afc27f08d8bf02c","48631e988b0fc362b0b7c8a17d674b70ad196755","f8f8062ca99714e7fff67c300bb5743d50aab10a","b10cb04fd45f968d29ce0bdc17c4d29d12e05b67","599f3b766913703916751168e6a6fbba139431b3","593eb268bd3d04c700115a7e31f45eb48d8a7aeb","2b538bdcc64653c27135aff994f946d47b180982","65c282400ce9cf4934ac6e575d66893a7a0c4747","2e0b1160e981bc251f794c51448675f451f4bf63","4a5f1a340e9215023e1ad2bf5b2676594d37bd0e","f9dbb3e729034fc509580d21605d22471a43b8d7","056a2fc1b3cd022bd4dd4e002444af66bb532ce1","17bb76f79a0aca5abc36096bcb36c2611c0d1d71","ea0d2e22439c0dac5c667bdb9b8344e281cc7dac","52f23a0e428acc4348a815eb964c6a99287cd304","ee9dc1d95b69a07919408a5847a8694fd9ae8e09","817ea3169d3b33ff069c988c5448442783189880","5e9c36a1ac9618864c43a47b0072a36e539fc848","6aefb421473f7da8f282e309092c03a5464fd8c3","81168342c34845bca79c2187c5f8da2ff7a970a0","379b242fcc606c2a43278630a97430f750654896","3e5a6e6a2779c4ab1f15ff36611ebaa8d54508e8","3dc01f7eae98301b19be0e1a76b337701e3b8232","1b5c9d1fbef10f8fac349ad2037a011630fcb9ce","3a34e028eac4bf96cb4725f4bfb33f750d133b31","09cb97bc213961d855cb812d1d8ab0cf42e22659","14e51709779527f9114d80f7ac0c8389933a547d","ea9b23bd5d1ab922bd92378ccb6c9ccff86bab91","6873a4db9703c9bf38ddabf9abed17ac5b673b59","d47df16183cf956ccedb320d82705462b109f554","0c00a328fa7cd56ee60338c54e89bd48310db80b","aafb55eb35d7c5923a1c267c3cc1a8f000314947","6c6181a0854e057f3b96c4fcd48465979bcc6dc6","ead6f1dc139955564624c99a874f233afb8deff2","67800cdddf13c1d746da7a8d62be56550cf20dfb","11540131eae85b2e11d53df7f1360eeb6476e7f4","085f6f07c4a3786dcb4cf82d18ed12bd91385d31","affdfef38b7a6ddd50de567b743c9590da082b8d","6d8c9fcce8177d6f8d122d653c7d32d7624d6714","27d0b64d7aae31ffff7276ec3d940188498f1d4e"],"s2Url":"https://semanticscholar.org/paper/82c875e112555f21319123f1b8f61338feb6d183","s2PdfUrl":"","id":"82c875e112555f21319123f1b8f61338feb6d183","authors":[{"name":"Yi Han","ids":["1756372"]},{"name":"Sriharsha Etigowni","ids":["3375595"]},{"name":"Hua Liu","ids":["1700415"]},{"name":"Saman A. Zonouz","ids":["1800447"]},{"name":"Athina P. Petropulu","ids":["1679058"]}],"journalName":"","paperAbstract":"Trustworthy operation of industrial control systems depends on secure and real-time code execution on the embedded programmable logic controllers (PLCs). The controllers monitor and control the critical infrastructures, such as electric power grids and healthcare platforms, and continuously report back the system status to human operators. We present Zeus, a contactless embedded controller security monitor to ensure its execution control flow integrity. Zeus leverages the electromagnetic emission by the PLC circuitry during the execution of the controller programs. Zeus's contactless execution tracking enables non-intrusive monitoring of security-critical controllers with tight real-time constraints. Those devices often cannot tolerate the cost and performance overhead that comes with additional traditional hardware or software monitoring modules. Furthermore, Zeus provides an air-gap between the monitor (trusted computing base) and the target (potentially compromised) PLC. This eliminates the possibility of the monitor infection by the same attack vectors.\n Zeus monitors for control flow integrity of the PLC program execution. Zeus monitors the communications between the human machine interface and the PLC, and captures the control logic binary uploads to the PLC. Zeus exercises its feasible execution paths, and fingerprints their emissions using an external electromagnetic sensor. Zeus trains a neural network for legitimate PLC executions, and uses it at runtime to identify the control flow based on PLC's electromagnetic emissions. We implemented Zeus on a commercial Allen Bradley PLC, which is widely used in industry, and evaluated it on real-world control program executions. Zeus was able to distinguish between different legitimate and malicious executions with 98.9% accuracy and with zero overhead on PLC execution by design.","inCitations":[],"pdfUrls":["http://arxiv.org/abs/1708.09099","https://acmccs.github.io/papers/p1095-hanA.pdf","https://arxiv.org/pdf/1708.09099v1.pdf","http://doi.acm.org/10.1145/3133956.3134081"],"title":"Watch Me, but Don't Touch Me! Contactless Control Flow Monitoring via Electromagnetic Emanations","doi":"10.1145/3133956.3134081","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3133956.3134081","venue":"CCS"},
{"entities":["Approximation algorithm","Approximation error","Computation","Concave function","Distributed computing","HyperLogLog","Streaming media"],"journalVolume":"","journalPages":"105-114","pmid":"","year":2017,"outCitations":["1f55cc9ae9ea3d2ebb23c4427175f01829a4105e","06f950d897ba590e20392035770d54ff6dcafc2b","762b63d2eb86f8fd0de98a08561b77527ae8f165","3256ea37a85284116976edb6d8b578186f76720c","e50a316f97c9a405aa000d883a633bd5707f1a34","635be627d2d01996267b30d3263b309e409b36c6","114bed8564dfe17089007744e8891a8d7bd47ceb","04ee1c7ed1b22ce513ce2672b89eb3b2ea371258","02acc390a765e098d3448451d8e24d60f3972722","cf53d0fa1150a213d0e85eca126571c71765f771","b36c153be410c0d937d7583de557c0375506d15a","bd3102fa60685380af4c0d9da94237978d40b5bc","269a701af1aba00837838030c9a862be26acd1da","42b1400e01b976b8e9bfa7b772ec41338dc32ed3","d495a2203b9cb84366f0b387d6ed4b09ac2d04ea","0825788b9b5a18e3dfea5b0af123b5e939a4f564","e18d00748d3c6c1f07415a6f4b751bee1d8091c1","112b7fd113ec98e0aae7e8f8364eaaa1893231c1","777df8324470704f0a2907e7db22e7b14218550f","05256a303d9c6debd850da2c1c0dbab3a679ba90"],"s2Url":"https://semanticscholar.org/paper/0f645729155a85c2cde050c349c60792185c546f","s2PdfUrl":"","id":"0f645729155a85c2cde050c349c60792185c546f","authors":[{"name":"Edith Cohen","ids":["2605768"]}],"journalName":"","paperAbstract":"One of the most common statistics computed over data elements is the number of distinct keys. A thread of research pioneered by Flajolet and Martin three decades ago culminated in the design of optimal approximate counting sketches, which have size that is double logarithmic in the number of distinct keys and provide estimates with a small relative error. Moreover, the sketches are composable, and thus suitable for streamed, parallel, or distributed computation.\n We consider here all statistics of the frequency distribution of keys, where a contribution of a key to the aggregate is concave and grows (sub)linearly with its frequency. These fundamental aggregations are very common in text, graphs, and logs analysis and include logarithms, low frequency moments, and cap statistics.\n We design composable sketches of double-logarithmic size for all concave sublinear statistics. Our design combines theoretical optimality and practical simplicity. In a nutshell, we specify tailored mapping functions of data elements to output elements so that our target statistics on the data elements is approximated by the (max-) distinct statistics of the output elements, which can be approximated using off-the-shelf sketches. Our key insight is relating these target statistics to the <i>complement Laplace</i> transform of the input frequencies.","inCitations":["0f96356dd6b47683cc5dce18e7c1842f1a33af9d"],"pdfUrls":["http://arxiv.org/pdf/1607.06517v2.pdf","https://arxiv.org/pdf/1607.06517v3.pdf","https://arxiv.org/pdf/1607.06517v5.pdf","https://arxiv.org/pdf/1607.06517v1.pdf","https://arxiv.org/pdf/1607.06517v4.pdf","http://doi.acm.org/10.1145/3097983.3098020","https://arxiv.org/pdf/1607.06517v2.pdf","http://arxiv.org/pdf/1607.06517v1.pdf"],"title":"HyperLogLog Hyperextended: Sketches for Concave Sublinear Frequency Statistics","doi":"10.1145/3097983.3098020","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3097983.3098020","venue":"KDD"},
{"entities":["Central processing unit","Control plane","Field-programmable gate array","Graphics processing unit","Memory-mapped I/O","Operating system","Span and div"],"journalVolume":"","journalPages":"69-75","pmid":"","year":2017,"outCitations":["43f0c099d44a68783a773f91cd03098a5252bf98","0e191d726c2b15d54f0e4b5d50f6c0d2e426f3ad","0d3f85933b6355789588476e491683532c68a906","2e5132493276714e4cce3b2f64d60da4e47210cb","1ea92529e75fe90ee1923b95d0fa8ad37ac1ed7c","1eb9dc6955b0de81a078c9d6fa937c33f1f04545","080b1f2c8316dad80d8c385dfcb82335a64a4d29","0e5c646909bb762da0cd325e084655c12445578f","600a6810334f46d9f44bec0d0a9927154ded60dd","03b2e534532e9558e560df0bed74976b8f48c1a5","0b1c6f52c76b441cb2598f3b8ac132d921ec8274","054572f0a9cf49fa9757ce937d097de6200fe942","28552ecf4eaedb3461edca97304b29082b02fbab","a4b0f11334d33de4f41bfeebfc520fb5b034a31e","225603198cc415d363db8a8a2bd30b0df3c963b1","17e1036e3681a0da3361ae56cfa77d523ce51d88","0081c1fcb079f87147a68565764b59923c918d9c","3dfd3dfaac573c90e0eae54630881a2b412ee402","00f355ce566bb51dc70925217c62e437cc7e14e2","3e6f5b5e8b7cb5408da8cd10d0cc625b00910291","41cefe44d43a5e367db26611075f67a08914bddf","22fd20f23c40ecb9044cae7ee58b76d39fcf45b6","5cfc936d12bbd8a0f100687b12b20e406215f30a","110c050c6c992d2b956f7b47d717810ac5c91bdc"],"s2Url":"https://semanticscholar.org/paper/1db445dc54ee1389a14d72ee628da61cd6c10428","s2PdfUrl":"","id":"1db445dc54ee1389a14d72ee628da61cd6c10428","authors":[{"name":"Mark Silberstein","ids":["2289351"]}],"journalName":"","paperAbstract":"Future systemswill be omni-programmable: alongside CPUs, GPUs and FPGAs, theywill execute user code near-storage, near-network, near-memory, or on other Near-X accelerator Units, NXUs. This paper explores the design space ofOS support for omni-programmable systems, aiming to simplify the development of efficient applications that span multiple heterogeneous processors and near-data accelerators. OmniX is an accelerator-centric OS architecture that extends standard OS abstractions, such as task execution and I/O, into NXUs while maintaining a coherent viewof the systemamong all the processors. OmniX enables NXUs to directly invoke tasks and access I/O services among themselves, excluding the CPU from the performance-critical control plane operations. The host CPU serves as a controller - for protection, device configuration and monitoring.We discuss the hardware trends that motivate ourwork, outline OmniX design principles, and sketch the core implementation ideas while highlighting missing hardware features, in the hope of motivating hardware vendors to implement them soon.","inCitations":[],"pdfUrls":["http://doi.acm.org/10.1145/3102980.3102992"],"title":"OmniX: an accelerator-centric OS for omni-programmable systems","doi":"10.1145/3102980.3102992","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3102980.3102992","venue":"HotOS"},
{"entities":["Knights","Xeon Phi"],"journalVolume":"","journalPages":"139-157","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/f3729b0f8640411d89b5f0179ea3735443739853","s2PdfUrl":"","id":"f3729b0f8640411d89b5f0179ea3735443739853","authors":[{"name":"Josh Tobin","ids":["3831282"]},{"name":"Alexander Breuer","ids":["38960812"]},{"name":"Alexander Heinecke","ids":["1722735"]},{"name":"Charles Yount","ids":["3191398"]},{"name":"Yifeng Cui","ids":["2305796"]}],"journalName":"","paperAbstract":"","inCitations":["0ec4d0465cc53dc705d432274a52cda3cf6e030a"],"pdfUrls":["https://doi.org/10.1007/978-3-319-58667-0_8"],"title":"Accelerating Seismic Simulations Using the Intel Xeon Phi Knights Landing Processor","doi":"10.1007/978-3-319-58667-0_8","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-58667-0_8","venue":"ISC"},
{"entities":[],"journalVolume":"","journalPages":"120-138","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/d86a87c7efd2e75d256d96c9b009ac7b3249d0bc","s2PdfUrl":"","id":"d86a87c7efd2e75d256d96c9b009ac7b3249d0bc","authors":[{"name":"Dipanjan Sengupta","ids":["6415958"]},{"name":"Yida Wang","ids":["2659391"]},{"name":"Narayanan Sundaram","ids":["1789372"]},{"name":"Theodore L. Willke","ids":["2999876"]}],"journalName":"","paperAbstract":"","inCitations":[],"pdfUrls":["https://doi.org/10.1007/978-3-319-58667-0_7"],"title":"High-Performance Incremental SVM Learning on Intel® Xeon Phi™ Processors","doi":"10.1007/978-3-319-58667-0_7","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-58667-0_7","venue":"ISC"},
{"entities":["Sparse matrix"],"journalVolume":"","journalPages":"625-637","pmid":"","year":2017,"outCitations":[],"s2Url":"https://semanticscholar.org/paper/426549c65f3594d5c4c889424ecfeea1ccc2536f","s2PdfUrl":"","id":"426549c65f3594d5c4c889424ecfeea1ccc2536f","authors":[{"name":"Seher Acer","ids":["14577845"]},{"name":"R. Oguz Selvitopi","ids":["2064658"]},{"name":"Cevdet Aykanat","ids":["1731638"]}],"journalName":"","paperAbstract":"","inCitations":[],"pdfUrls":["https://doi.org/10.1007/978-3-319-64203-1_45"],"title":"Addressing Volume and Latency Overheads in 1D-parallel Sparse Matrix-Vector Multiplication","doi":"10.1007/978-3-319-64203-1_45","sources":["DBLP"],"doiUrl":"https://doi.org/10.1007/978-3-319-64203-1_45","venue":"Euro-Par"},
{"entities":["Algorithm","Coefficient","Computational complexity theory","Coppersmith–Winograd algorithm","Cubic function","Mathematical induction","Matrix multiplication","Matrix multiplication algorithm","Multiplication algorithm","Numerical integration","Strassen algorithm"],"journalVolume":"","journalPages":"101-110","pmid":"","year":2017,"outCitations":["6a2789a722740df16697ff5ee6127cb644994ef3","e99ec9a172aa5c762e618d1f4e02a87f53d9cc7f","3269b04305dd2bd4ecbb2daea4429eeb523cc164","0f48b218a10dbe7f37dd70073fff3032aa15f465","74d231ca09c7106bdbf7e1ff2852fbbc7bd96c67","f71958a5e008bbffd78133c8f48c76695baf0cf8","b19c657cafb57b94e447aeceb836cc7df8a019c1","4f2f128177eaeabf570c5095ed2d598e412900e3","ed8c1461ba32cb0a7db6d32bdb61241eed64751c","8940eaa198141baee28f825119fb3b90a8a239a9","e669d89ad39e5e862041ba06dff697af746e4091","114f158f3b7b37614d5d83efe33c1e73c051c7c1","501f439df0c59188be9acde2328764c14dd33c89","384e61d089611b10181775756feadd3f58fd2ec5","c999286a3343871e22b68edcf1c8474724a401e0","0fbec54268f444ee7d884c09a4819a94677b2734","af664c46d65451b97a12e2f170495428dc49c878","40fb5ea197206082b0b77f388c57bca79536c877","26e02fc5572fcf1e55496a2846aaa77b9b45b14d","69c90113b1b99c663129962201ddfe67c8256d53","34eb32537b3f9dacbbd1567e1ce620c66e51d3c6","4b3f502897fbfe13f8f6c824a39cee404fdce1c8","636d19ad02af6def2956466a5ba5d69e96934d33","a9fa03cbff886b16de948bdd7f633b1c20b395a1","8eaa45df0a85bf7fda455cf7f1699cdfe0de1288","3030fa2aecda339d593b86a260bfab9988b42df7","d01e00939c1773366237e744ff0047fc55a53453","a0c749d8af116c6d56110ebd7aa1abe1a25c11a2","41e8b3449888e59d2bd40c07a717829f54610d5e"],"s2Url":"https://semanticscholar.org/paper/c025c97af526b4487ebb4582cb9a58c1f1ff4c94","s2PdfUrl":"","id":"c025c97af526b4487ebb4582cb9a58c1f1ff4c94","authors":[{"name":"Elaye Karstadt","ids":["20851040"]},{"name":"Oded Schwartz","ids":["14411446"]}],"journalName":"","paperAbstract":"Strassen's algorithm (1969) was the first sub-cubic matrix multiplication algorithm. Winograd (1971) improved its complexity by a constant factor. Many asymptotic improvements followed. Unfortunately, most of them have done so at the cost of very large, often gigantic, hidden constants. Consequently, Strassen-Winograd's O(n<sup>log<sub>2</sub>7</sup>) algorithm often outperforms other matrix multiplication algorithms for all feasible matrix dimensions. The leading coefficient of Strassen-Winograd's algorithm was believed to be optimal for matrix multiplication algorithms with 2x2 base case, due to a lower bound of Probert (1976).\n Surprisingly, we obtain a faster matrix multiplication algorithm, with the same base case size and asymptotic complexity as Strassen-Winograd's algorithm, but with the coefficient reduced from 6 to 5. To this end, we extend Bodrato's (2010) method for matrix squaring, and transform matrices to an alternative basis. We prove a generalization of Probert's lower bound that holds under change of basis, showing that for matrix multiplication algorithms with a 2x2 base case, the leading coefficient of our algorithm cannot be further reduced, hence optimal. We apply our technique to other Strassen-like algorithms, improving their arithmetic and communication costs by significant constant factors.","inCitations":["91f8ec8cde8e5e2defec22eb29e809f1aa71034a","95e336a9318604a2da67233ecccfa448d638c34d"],"pdfUrls":["http://doi.acm.org/10.1145/3087556.3087579"],"title":"Matrix Multiplication, a Little Faster","doi":"10.1145/3087556.3087579","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3087556.3087579","venue":"SPAA"},
{"entities":["Algorithm","Belief revision","Computation","Distributed algorithm","Distributed memory","Graph (abstract data type)","List of algorithms","Mathematical model","Parallel computing","Scalability","Self-stabilization","Shortest path problem"],"journalVolume":"abs/1706.05760","journalPages":"","pmid":"","year":2017,"outCitations":["141e35263ab810983c90d47ad62eb4fab5e51717","1521d39088b203ddac981d10d214f463449ae95b","05ef51cba0404893c1d13259b049890bfe06366a","3feeb53f8d0c2259cfad21145425fc67e8c67930","947c6bf534ccd620044f77c3bd6068f633b421fb","cab27850a0facee88524b31b7a6155ca3b69184e","b9ef5daaa31ccee9ba239a3a60c6b7c552aec5dc","98da568adc7858630e26d0563304a495f90608d0","01c1f0e97ce5c74c714dc7aa43cb064f45cc3b04","41c80483e80fab3a18280da790cec2c8d6060bdb","85546c61e315ea4b9add88869fe6750b28a17ab9","30df50d77ef9478a2848626dfe3bf65f3c991991","a8dad66a8a429226f27fb52ba50b24de8459cbe3","2b98beb92b3fd808571d42d3514ff916a0a17366","851fcc18fb865ec920132b0026bfb5d263610278","09615cd74833900781f7696961b0f91255559cb3","0ca1e465dd85b8254bcdd7053032d7eab6e2d4b4"],"s2Url":"https://semanticscholar.org/paper/28bfe96a10a4fc9a7134117bce75f796eda8f3bd","s2PdfUrl":"http://pdfs.semanticscholar.org/28bf/e96a10a4fc9a7134117bce75f796eda8f3bd.pdf","id":"28bfe96a10a4fc9a7134117bce75f796eda8f3bd","authors":[{"name":"Thejaka Amila Kanewala","ids":["2795604"]},{"name":"Marcin Zalewski","ids":["1843069"]},{"name":"Martina Barnas","ids":["2197668"]},{"name":"Andrew Lumsdaine","ids":["2556809"]}],"journalName":"CoRR","paperAbstract":"Self-stabilizing algorithms are an important because of their robustness and guaranteed convergence. Starting from any arbitrary state, a self-stabilizing algorithm is guaranteed to converge to a legitimate state.Those algorithms are not directly amenable to solving distributed graph processing problems when performance and scalability are important. In this paper, we show the “Abstract Graph Machine” (AGM) model that can be used to convert self-stabilizing algorithms into forms suitable for distributed graph processing. An AGM is a mathematical model of parallel computation on graphs that adds work dependency and ordering to self-stabilizing algorithms. Using the AGM model we show that some of the existing distributed Single Source Shortest Path (SSSP) algorithms are actually specializations of self-stabilizing SSSP. We extend the AGM model to apply more fine-grained orderings at different spatial levels to derive additional scalable variants of SSSP algorithms, essentially enabling the algorithm to be generated for a specific target architecture. Experimental results show that this approach can generate new algorithmic variants that out-perform standard distributed algorithms for SSSP.","inCitations":[],"pdfUrls":["https://arxiv.org/pdf/1706.05760v1.pdf","http://arxiv.org/abs/1706.05760"],"title":"Families of Distributed Memory Parallel Graph Algorithms from Self-Stabilizing Kernels-An SSSP Case Study","doi":"","sources":["DBLP"],"doiUrl":"","venue":"ArXiv"},
{"entities":["Operating system"],"journalVolume":"","journalPages":"56-61","pmid":"","year":2017,"outCitations":["46742c000a65f676c00ec4e33d19d535a1c29dd7","07c3c9f1be15b52e259309b2e0a9ca71fa7dc76f","866bce77ca5201d182c0c43090eb75bf126efba6","7370316302bfff5ef6ff760cbfaae668e4760275","0693ff4b3a8d1452b897a876d3ffe6b2074e98e4","566781ba2b0c139f4f1f15701e8c9d6e497f944a","7dfccc1c1babded51f525213c687707d52428567","17e1036e3681a0da3361ae56cfa77d523ce51d88","43f0c099d44a68783a773f91cd03098a5252bf98","01e6176d319e3bfecc3667447c5bbaf2d00b9c7c","da978af48937a768fffbd0faea35820eb40ae6c8","339aeb3b948ab2da7eeb308a2783238690d0618c","0e5c646909bb762da0cd325e084655c12445578f","0f42b4dc664eb31df423c3de3a2cecf9c6ac83a8","7ff303e7c450aee82b6fff5cc64be54e5604da01","7a9bca5fb9b1775dd3c7a38d9e34e9233e7419cf","6d2db3d64131cd4a0f5bb1de46581f36046385f2","4678cdcf7e57c1563379ac7cc344254f01ace572","2037e142f3b45da72d5c99c0c0de2bb506d4a829","1ea92529e75fe90ee1923b95d0fa8ad37ac1ed7c","6330f075daf847554007b236b57293f8ccebca64","25fd64c30726f131cc1399845f62531549e9bc75","6d60c734fe59f78cdbb47b505d41b449e9392a4b","1d31aceaa4fbf3a8afca3139675482b1cdf84495","3fd342adbc95e243de00e0ca0e315eb023b23d99","8964497eef0b88462213f152a776d260388cff36","138a9c2a9579435cd8cb0f24e7ec135821074557","5dc5b799d6d161d5c2805917d680d1eb7314fdf5","0e191d726c2b15d54f0e4b5d50f6c0d2e426f3ad","5f3e6fd1668e0732c91ff72061ece073224f1745","0038ce3977245eb24664222903fc17699f3636e7","2e5132493276714e4cce3b2f64d60da4e47210cb","3ac6671a0c61544b9dab543b116eccdaccc6469e","0d6787f19c7a521784a38d31420dd8da7bd490ef","5635aeef49e9678d0a5eaa3f17d247a059a19cb0","054572f0a9cf49fa9757ce937d097de6200fe942","a3edc4f28c3d0bb89e99c26082147656a809bcf4","93726e7e258eceacf51a823361113f5792f50f86","02ebdcf8200135ec0433e12e4ef2459ac740370b"],"s2Url":"https://semanticscholar.org/paper/8071c58e2639b796bdd6544a27166b70376bdd4e","s2PdfUrl":"","id":"8071c58e2639b796bdd6544a27166b70376bdd4e","authors":[{"name":"Antonio Barbalace","ids":["1759838"]},{"name":"Anthony Iliopoulos","ids":["39517894"]},{"name":"Holm Rauchfuss","ids":["1750962"]},{"name":"Goetz Brasche","ids":["2963523"]}],"journalName":"","paperAbstract":"","inCitations":["213b5f30cd84c80c1f53e46553fa221fdcc226dd"],"pdfUrls":["http://doi.acm.org/10.1145/3102980.3102990"],"title":"It's Time to Think About an Operating System for Near Data Processing Architectures","doi":"10.1145/3102980.3102990","sources":["DBLP"],"doiUrl":"https://doi.org/10.1145/3102980.3102990","venue":"HotOS"}
]
